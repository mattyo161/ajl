{
  "metadata": {
    "apiVersion": "2016-11-15",
    "auth": [
      "aws.auth#sigv4"
    ],
    "endpointPrefix": "ec2",
    "protocol": "ec2",
    "protocols": [
      "ec2"
    ],
    "serviceAbbreviation": "Amazon EC2",
    "serviceFullName": "Amazon Elastic Compute Cloud",
    "serviceId": "EC2",
    "signatureVersion": "v4",
    "uid": "ec2-2016-11-15",
    "xmlNamespace": "http://ec2.amazonaws.com/doc/2016-11-15"
  },
  "name": "ec2",
  "operations": {
    "AcceptAddressTransfer": {
      "input": {
        "markers": [],
        "members": {
          "Address": {
            "name": "Address",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "Address"
        ]
      },
      "name": "AcceptAddressTransfer",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AddressTransfer": {
            "name": "AddressTransfer",
            "shape_name": "AddressTransfer",
            "type": "structure"
          }
        }
      }
    },
    "AcceptReservedInstancesExchangeQuote": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ReservedInstanceIds": {
            "name": "ReservedInstanceIds",
            "shape_name": "ReservedInstanceIdSet",
            "type": "list"
          },
          "TargetConfigurations": {
            "name": "TargetConfigurations",
            "shape_name": "TargetConfigurationRequestSet",
            "type": "list"
          }
        },
        "required": [
          "ReservedInstanceIds"
        ]
      },
      "name": "AcceptReservedInstancesExchangeQuote",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ExchangeId": {
            "name": "ExchangeId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AcceptTransitGatewayMulticastDomainAssociations": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "AcceptTransitGatewayMulticastDomainAssociations",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayMulticastDomainAssociations",
            "type": "structure"
          }
        }
      }
    },
    "AcceptTransitGatewayPeeringAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "AcceptTransitGatewayPeeringAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPeeringAttachment": {
            "name": "TransitGatewayPeeringAttachment",
            "shape_name": "TransitGatewayPeeringAttachment",
            "type": "structure"
          }
        }
      }
    },
    "AcceptTransitGatewayVpcAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "AcceptTransitGatewayVpcAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayVpcAttachment": {
            "name": "TransitGatewayVpcAttachment",
            "shape_name": "TransitGatewayVpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "AcceptVpcEndpointConnections": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          },
          "VpcEndpointIds": {
            "name": "VpcEndpointIds",
            "shape_name": "VpcEndpointIdList",
            "type": "list"
          }
        },
        "required": [
          "ServiceId",
          "VpcEndpointIds"
        ]
      },
      "name": "AcceptVpcEndpointConnections",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "AcceptVpcPeeringConnection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionIdWithResolver",
            "type": "string"
          }
        },
        "required": [
          "VpcPeeringConnectionId"
        ]
      },
      "name": "AcceptVpcPeeringConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpcPeeringConnection": {
            "name": "VpcPeeringConnection",
            "shape_name": "VpcPeeringConnection",
            "type": "structure"
          }
        }
      }
    },
    "AdvertiseByoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Asn": {
            "name": "Asn",
            "shape_name": "String",
            "type": "string"
          },
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "Cidr"
        ]
      },
      "name": "AdvertiseByoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ByoipCidr": {
            "name": "ByoipCidr",
            "shape_name": "ByoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "AllocateAddress": {
      "input": {
        "markers": [],
        "members": {
          "Address": {
            "name": "Address",
            "shape_name": "PublicIpAddress",
            "type": "string"
          },
          "CustomerOwnedIpv4Pool": {
            "name": "CustomerOwnedIpv4Pool",
            "shape_name": "String",
            "type": "string"
          },
          "Domain": {
            "name": "Domain",
            "shape_name": "DomainType",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIpv4Pool": {
            "name": "PublicIpv4Pool",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "AllocateAddress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "String",
            "type": "string"
          },
          "CarrierIp": {
            "name": "CarrierIp",
            "shape_name": "String",
            "type": "string"
          },
          "CustomerOwnedIp": {
            "name": "CustomerOwnedIp",
            "shape_name": "String",
            "type": "string"
          },
          "CustomerOwnedIpv4Pool": {
            "name": "CustomerOwnedIpv4Pool",
            "shape_name": "String",
            "type": "string"
          },
          "Domain": {
            "name": "Domain",
            "shape_name": "DomainType",
            "type": "string"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIpv4Pool": {
            "name": "PublicIpv4Pool",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AllocateHosts": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AssetIds": {
            "name": "AssetIds",
            "shape_name": "AssetIdList",
            "type": "list"
          },
          "AutoPlacement": {
            "name": "AutoPlacement",
            "shape_name": "AutoPlacement",
            "type": "string"
          },
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "HostMaintenance": {
            "name": "HostMaintenance",
            "shape_name": "HostMaintenance",
            "type": "string"
          },
          "HostRecovery": {
            "name": "HostRecovery",
            "shape_name": "HostRecovery",
            "type": "string"
          },
          "InstanceFamily": {
            "name": "InstanceFamily",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "String",
            "type": "string"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "Quantity": {
            "name": "Quantity",
            "shape_name": "Integer",
            "type": "integer"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "AvailabilityZone"
        ]
      },
      "name": "AllocateHosts",
      "output": {
        "lists": {
          "HostIds": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "HostIds": {
            "name": "HostIds",
            "shape_name": "ResponseHostIdList",
            "type": "list"
          }
        }
      }
    },
    "AllocateIpamPoolCidr": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AllowedCidrs": {
            "name": "AllowedCidrs",
            "shape_name": "IpamPoolAllocationAllowedCidrs",
            "type": "list"
          },
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DisallowedCidrs": {
            "name": "DisallowedCidrs",
            "shape_name": "IpamPoolAllocationDisallowedCidrs",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "NetmaskLength": {
            "name": "NetmaskLength",
            "shape_name": "Integer",
            "type": "integer"
          },
          "PreviewNextCidr": {
            "name": "PreviewNextCidr",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "AllocateIpamPoolCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPoolAllocation": {
            "name": "IpamPoolAllocation",
            "shape_name": "IpamPoolAllocation",
            "type": "structure"
          }
        }
      }
    },
    "ApplySecurityGroupsToClientVpnTargetNetwork": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "ClientVpnSecurityGroupIdSet",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "VpcId",
          "SecurityGroupIds"
        ]
      },
      "name": "ApplySecurityGroupsToClientVpnTargetNetwork",
      "output": {
        "lists": {
          "SecurityGroupIds": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "ClientVpnSecurityGroupIdSet",
            "type": "list"
          }
        }
      }
    },
    "AssignIpv6Addresses": {
      "input": {
        "markers": [],
        "members": {
          "Ipv6AddressCount": {
            "name": "Ipv6AddressCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv6Addresses": {
            "name": "Ipv6Addresses",
            "shape_name": "Ipv6AddressList",
            "type": "list"
          },
          "Ipv6PrefixCount": {
            "name": "Ipv6PrefixCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv6Prefixes": {
            "name": "Ipv6Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "AssignIpv6Addresses",
      "output": {
        "lists": {
          "AssignedIpv6Addresses": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "AssignedIpv6Prefixes": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AssignedIpv6Addresses": {
            "name": "AssignedIpv6Addresses",
            "shape_name": "Ipv6AddressList",
            "type": "list"
          },
          "AssignedIpv6Prefixes": {
            "name": "AssignedIpv6Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AssignPrivateIpAddresses": {
      "input": {
        "markers": [],
        "members": {
          "AllowReassignment": {
            "name": "AllowReassignment",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Ipv4PrefixCount": {
            "name": "Ipv4PrefixCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv4Prefixes": {
            "name": "Ipv4Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "PrivateIpAddressStringList",
            "type": "list"
          },
          "SecondaryPrivateIpAddressCount": {
            "name": "SecondaryPrivateIpAddressCount",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "AssignPrivateIpAddresses",
      "output": {
        "lists": {
          "AssignedIpv4Prefixes": {
            "all_fields": [
              "Ipv4Prefix"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "AssignedPrivateIpAddresses": {
            "all_fields": [
              "PrivateIpAddress"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AssignedIpv4Prefixes": {
            "name": "AssignedIpv4Prefixes",
            "shape_name": "Ipv4PrefixesList",
            "type": "list"
          },
          "AssignedPrivateIpAddresses": {
            "name": "AssignedPrivateIpAddresses",
            "shape_name": "AssignedPrivateIpAddressList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AssignPrivateNatGatewayAddress": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          },
          "PrivateIpAddressCount": {
            "name": "PrivateIpAddressCount",
            "shape_name": "PrivateIpAddressCount",
            "type": "integer"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "IpList",
            "type": "list"
          }
        },
        "required": [
          "NatGatewayId"
        ]
      },
      "name": "AssignPrivateNatGatewayAddress",
      "output": {
        "lists": {
          "NatGatewayAddresses": {
            "all_fields": [
              "AllocationId",
              "AssociationId",
              "FailureMessage",
              "IsPrimary",
              "NetworkInterfaceId",
              "PrivateIp",
              "PublicIp",
              "Status"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AssociationId",
              "NetworkInterfaceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "NatGatewayAddresses": {
            "name": "NatGatewayAddresses",
            "shape_name": "NatGatewayAddressList",
            "type": "list"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        }
      }
    },
    "AssociateAddress": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "AllowReassociation": {
            "name": "AllowReassociation",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "PrivateIpAddress": {
            "name": "PrivateIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "EipAllocationPublicIp",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "AssociateAddress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AssociateClientVpnTargetNetwork": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "SubnetId"
        ]
      },
      "name": "AssociateClientVpnTargetNetwork",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "AssociationStatus",
            "type": "structure"
          }
        }
      }
    },
    "AssociateDhcpOptions": {
      "input": {
        "markers": [],
        "members": {
          "DhcpOptionsId": {
            "name": "DhcpOptionsId",
            "shape_name": "DefaultingDhcpOptionsId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "DhcpOptionsId",
          "VpcId"
        ]
      },
      "name": "AssociateDhcpOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "AssociateEnclaveCertificateIamRole": {
      "input": {
        "markers": [],
        "members": {
          "CertificateArn": {
            "name": "CertificateArn",
            "shape_name": "CertificateId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RoleArn": {
            "name": "RoleArn",
            "shape_name": "RoleId",
            "type": "string"
          }
        },
        "required": [
          "CertificateArn",
          "RoleArn"
        ]
      },
      "name": "AssociateEnclaveCertificateIamRole",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CertificateS3BucketName": {
            "name": "CertificateS3BucketName",
            "shape_name": "String",
            "type": "string"
          },
          "CertificateS3ObjectKey": {
            "name": "CertificateS3ObjectKey",
            "shape_name": "String",
            "type": "string"
          },
          "EncryptionKmsKeyId": {
            "name": "EncryptionKmsKeyId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AssociateIamInstanceProfile": {
      "input": {
        "markers": [],
        "members": {
          "IamInstanceProfile": {
            "name": "IamInstanceProfile",
            "shape_name": "IamInstanceProfileSpecification",
            "type": "structure"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "IamInstanceProfile",
          "InstanceId"
        ]
      },
      "name": "AssociateIamInstanceProfile",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IamInstanceProfileAssociation": {
            "name": "IamInstanceProfileAssociation",
            "shape_name": "IamInstanceProfileAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateInstanceEventWindow": {
      "input": {
        "markers": [],
        "members": {
          "AssociationTarget": {
            "name": "AssociationTarget",
            "shape_name": "InstanceEventWindowAssociationRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceEventWindowId": {
            "name": "InstanceEventWindowId",
            "shape_name": "InstanceEventWindowId",
            "type": "string"
          }
        },
        "required": [
          "InstanceEventWindowId",
          "AssociationTarget"
        ]
      },
      "name": "AssociateInstanceEventWindow",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceEventWindow": {
            "name": "InstanceEventWindow",
            "shape_name": "InstanceEventWindow",
            "type": "structure"
          }
        }
      }
    },
    "AssociateIpamByoasn": {
      "input": {
        "markers": [],
        "members": {
          "Asn": {
            "name": "Asn",
            "shape_name": "String",
            "type": "string"
          },
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Asn",
          "Cidr"
        ]
      },
      "name": "AssociateIpamByoasn",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AsnAssociation": {
            "name": "AsnAssociation",
            "shape_name": "AsnAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateIpamResourceDiscovery": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "IpamId",
          "IpamResourceDiscoveryId"
        ]
      },
      "name": "AssociateIpamResourceDiscovery",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceDiscoveryAssociation": {
            "name": "IpamResourceDiscoveryAssociation",
            "shape_name": "IpamResourceDiscoveryAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateNatGatewayAddress": {
      "input": {
        "markers": [],
        "members": {
          "AllocationIds": {
            "name": "AllocationIds",
            "shape_name": "AllocationIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "IpList",
            "type": "list"
          }
        },
        "required": [
          "NatGatewayId",
          "AllocationIds"
        ]
      },
      "name": "AssociateNatGatewayAddress",
      "output": {
        "lists": {
          "NatGatewayAddresses": {
            "all_fields": [
              "AllocationId",
              "AssociationId",
              "FailureMessage",
              "IsPrimary",
              "NetworkInterfaceId",
              "PrivateIp",
              "PublicIp",
              "Status"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AssociationId",
              "NetworkInterfaceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "NatGatewayAddresses": {
            "name": "NatGatewayAddresses",
            "shape_name": "NatGatewayAddressList",
            "type": "list"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        }
      }
    },
    "AssociateRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GatewayId": {
            "name": "GatewayId",
            "shape_name": "RouteGatewayId",
            "type": "string"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "RouteTableId"
        ]
      },
      "name": "AssociateRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "String",
            "type": "string"
          },
          "AssociationState": {
            "name": "AssociationState",
            "shape_name": "RouteTableAssociationState",
            "type": "structure"
          }
        }
      }
    },
    "AssociateSubnetCidrBlock": {
      "input": {
        "markers": [],
        "members": {
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6IpamPoolId": {
            "name": "Ipv6IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv6NetmaskLength": {
            "name": "Ipv6NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "AssociateSubnetCidrBlock",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Ipv6CidrBlockAssociation": {
            "name": "Ipv6CidrBlockAssociation",
            "shape_name": "SubnetIpv6CidrBlockAssociation",
            "type": "structure"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AssociateTransitGatewayMulticastDomain": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "TransitGatewaySubnetIdList",
            "type": "list"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId",
          "TransitGatewayAttachmentId",
          "SubnetIds"
        ]
      },
      "name": "AssociateTransitGatewayMulticastDomain",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayMulticastDomainAssociations",
            "type": "structure"
          }
        }
      }
    },
    "AssociateTransitGatewayPolicyTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayPolicyTableId": {
            "name": "TransitGatewayPolicyTableId",
            "shape_name": "TransitGatewayPolicyTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayPolicyTableId",
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "AssociateTransitGatewayPolicyTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Association": {
            "name": "Association",
            "shape_name": "TransitGatewayPolicyTableAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateTransitGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "AssociateTransitGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Association": {
            "name": "Association",
            "shape_name": "TransitGatewayAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateTrunkInterface": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "BranchInterfaceId": {
            "name": "BranchInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GreKey": {
            "name": "GreKey",
            "shape_name": "Integer",
            "type": "integer"
          },
          "TrunkInterfaceId": {
            "name": "TrunkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "VlanId": {
            "name": "VlanId",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "BranchInterfaceId",
          "TrunkInterfaceId"
        ]
      },
      "name": "AssociateTrunkInterface",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "InterfaceAssociation": {
            "name": "InterfaceAssociation",
            "shape_name": "TrunkInterfaceAssociation",
            "type": "structure"
          }
        }
      }
    },
    "AssociateVpcCidrBlock": {
      "input": {
        "markers": [],
        "members": {
          "AmazonProvidedIpv6CidrBlock": {
            "name": "AmazonProvidedIpv6CidrBlock",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "CidrBlock": {
            "name": "CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv4IpamPoolId": {
            "name": "Ipv4IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv4NetmaskLength": {
            "name": "Ipv4NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6CidrBlockNetworkBorderGroup": {
            "name": "Ipv6CidrBlockNetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6IpamPoolId": {
            "name": "Ipv6IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv6NetmaskLength": {
            "name": "Ipv6NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "Ipv6Pool": {
            "name": "Ipv6Pool",
            "shape_name": "Ipv6PoolEc2Id",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "AssociateVpcCidrBlock",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CidrBlockAssociation": {
            "name": "CidrBlockAssociation",
            "shape_name": "VpcCidrBlockAssociation",
            "type": "structure"
          },
          "Ipv6CidrBlockAssociation": {
            "name": "Ipv6CidrBlockAssociation",
            "shape_name": "VpcIpv6CidrBlockAssociation",
            "type": "structure"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AttachClassicLinkVpc": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "GroupIdStringList",
            "type": "list"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "Groups",
          "InstanceId",
          "VpcId"
        ]
      },
      "name": "AttachClassicLinkVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "AttachInternetGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InternetGatewayId": {
            "name": "InternetGatewayId",
            "shape_name": "InternetGatewayId",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "InternetGatewayId",
          "VpcId"
        ]
      },
      "name": "AttachInternetGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "AttachNetworkInterface": {
      "input": {
        "markers": [],
        "members": {
          "DeviceIndex": {
            "name": "DeviceIndex",
            "shape_name": "Integer",
            "type": "integer"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnaSrdSpecification": {
            "name": "EnaSrdSpecification",
            "shape_name": "EnaSrdSpecification",
            "type": "structure"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "NetworkCardIndex": {
            "name": "NetworkCardIndex",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "DeviceIndex",
          "InstanceId",
          "NetworkInterfaceId"
        ]
      },
      "name": "AttachNetworkInterface",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AttachmentId": {
            "name": "AttachmentId",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkCardIndex": {
            "name": "NetworkCardIndex",
            "shape_name": "Integer",
            "type": "integer"
          }
        }
      }
    },
    "AttachVerifiedAccessTrustProvider": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          },
          "VerifiedAccessTrustProviderId": {
            "name": "VerifiedAccessTrustProviderId",
            "shape_name": "VerifiedAccessTrustProviderId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId",
          "VerifiedAccessTrustProviderId"
        ]
      },
      "name": "AttachVerifiedAccessTrustProvider",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessInstance": {
            "name": "VerifiedAccessInstance",
            "shape_name": "VerifiedAccessInstance",
            "type": "structure"
          },
          "VerifiedAccessTrustProvider": {
            "name": "VerifiedAccessTrustProvider",
            "shape_name": "VerifiedAccessTrustProvider",
            "type": "structure"
          }
        }
      }
    },
    "AttachVolume": {
      "input": {
        "markers": [],
        "members": {
          "Device": {
            "name": "Device",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "Device",
          "InstanceId",
          "VolumeId"
        ]
      },
      "name": "AttachVolume",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociatedResource": {
            "name": "AssociatedResource",
            "shape_name": "String",
            "type": "string"
          },
          "AttachTime": {
            "name": "AttachTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "DeleteOnTermination": {
            "name": "DeleteOnTermination",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Device": {
            "name": "Device",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceOwningService": {
            "name": "InstanceOwningService",
            "shape_name": "String",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "VolumeAttachmentState",
            "type": "string"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "AttachVpnGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          }
        },
        "required": [
          "VpcId",
          "VpnGatewayId"
        ]
      },
      "name": "AttachVpnGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpcAttachment": {
            "name": "VpcAttachment",
            "shape_name": "VpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "AuthorizeClientVpnIngress": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AccessGroupId": {
            "name": "AccessGroupId",
            "shape_name": "String",
            "type": "string"
          },
          "AuthorizeAllGroups": {
            "name": "AuthorizeAllGroups",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TargetNetworkCidr": {
            "name": "TargetNetworkCidr",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "TargetNetworkCidr"
        ]
      },
      "name": "AuthorizeClientVpnIngress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnAuthorizationRuleStatus",
            "type": "structure"
          }
        }
      }
    },
    "AuthorizeSecurityGroupEgress": {
      "input": {
        "markers": [],
        "members": {
          "CidrIp": {
            "name": "CidrIp",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FromPort": {
            "name": "FromPort",
            "shape_name": "Integer",
            "type": "integer"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "IpProtocol": {
            "name": "IpProtocol",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupName": {
            "name": "SourceSecurityGroupName",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupOwnerId": {
            "name": "SourceSecurityGroupOwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "ToPort": {
            "name": "ToPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "GroupId"
        ]
      },
      "name": "AuthorizeSecurityGroupEgress",
      "output": {
        "lists": {
          "SecurityGroupRules": {
            "all_fields": [
              "CidrIpv4",
              "CidrIpv6",
              "Description",
              "FromPort",
              "GroupId",
              "GroupOwnerId",
              "IpProtocol",
              "IsEgress",
              "PrefixListId",
              "ReferencedGroupInfo",
              "SecurityGroupRuleId",
              "Tags",
              "ToPort"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "GroupOwnerId",
              "PrefixListId",
              "SecurityGroupRuleId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupRules": {
            "name": "SecurityGroupRules",
            "shape_name": "SecurityGroupRuleList",
            "type": "list"
          }
        }
      }
    },
    "AuthorizeSecurityGroupIngress": {
      "input": {
        "markers": [],
        "members": {
          "CidrIp": {
            "name": "CidrIp",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FromPort": {
            "name": "FromPort",
            "shape_name": "Integer",
            "type": "integer"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "SecurityGroupName",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "IpProtocol": {
            "name": "IpProtocol",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupName": {
            "name": "SourceSecurityGroupName",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupOwnerId": {
            "name": "SourceSecurityGroupOwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "ToPort": {
            "name": "ToPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": null
      },
      "name": "AuthorizeSecurityGroupIngress",
      "output": {
        "lists": {
          "SecurityGroupRules": {
            "all_fields": [
              "CidrIpv4",
              "CidrIpv6",
              "Description",
              "FromPort",
              "GroupId",
              "GroupOwnerId",
              "IpProtocol",
              "IsEgress",
              "PrefixListId",
              "ReferencedGroupInfo",
              "SecurityGroupRuleId",
              "Tags",
              "ToPort"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "GroupOwnerId",
              "PrefixListId",
              "SecurityGroupRuleId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupRules": {
            "name": "SecurityGroupRules",
            "shape_name": "SecurityGroupRuleList",
            "type": "list"
          }
        }
      }
    },
    "BundleInstance": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "Storage": {
            "name": "Storage",
            "shape_name": "Storage",
            "type": "structure"
          }
        },
        "required": [
          "InstanceId",
          "Storage"
        ]
      },
      "name": "BundleInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "BundleTask": {
            "name": "BundleTask",
            "shape_name": "BundleTask",
            "type": "structure"
          }
        }
      }
    },
    "CancelBundleTask": {
      "input": {
        "markers": [],
        "members": {
          "BundleId": {
            "name": "BundleId",
            "shape_name": "BundleId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "BundleId"
        ]
      },
      "name": "CancelBundleTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "BundleTask": {
            "name": "BundleTask",
            "shape_name": "BundleTask",
            "type": "structure"
          }
        }
      }
    },
    "CancelCapacityReservation": {
      "input": {
        "markers": [],
        "members": {
          "CapacityReservationId": {
            "name": "CapacityReservationId",
            "shape_name": "CapacityReservationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CapacityReservationId"
        ]
      },
      "name": "CancelCapacityReservation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "CancelCapacityReservationFleets": {
      "input": {
        "markers": [],
        "members": {
          "CapacityReservationFleetIds": {
            "name": "CapacityReservationFleetIds",
            "shape_name": "CapacityReservationFleetIdSet",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CapacityReservationFleetIds"
        ]
      },
      "name": "CancelCapacityReservationFleets",
      "output": {
        "lists": {
          "FailedFleetCancellations": {
            "all_fields": [
              "CancelCapacityReservationFleetError",
              "CapacityReservationFleetId"
            ],
            "arn_fields": [],
            "id_fields": [
              "CapacityReservationFleetId"
            ],
            "name_fields": []
          },
          "SuccessfulFleetCancellations": {
            "all_fields": [
              "CapacityReservationFleetId",
              "CurrentFleetState",
              "PreviousFleetState"
            ],
            "arn_fields": [],
            "id_fields": [
              "CapacityReservationFleetId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "FailedFleetCancellations": {
            "name": "FailedFleetCancellations",
            "shape_name": "FailedCapacityReservationFleetCancellationResultSet",
            "type": "list"
          },
          "SuccessfulFleetCancellations": {
            "name": "SuccessfulFleetCancellations",
            "shape_name": "CapacityReservationFleetCancellationStateSet",
            "type": "list"
          }
        }
      }
    },
    "CancelConversionTask": {
      "input": {
        "markers": [],
        "members": {
          "ConversionTaskId": {
            "name": "ConversionTaskId",
            "shape_name": "ConversionTaskId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ReasonMessage": {
            "name": "ReasonMessage",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ConversionTaskId"
        ]
      },
      "name": "CancelConversionTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "CancelExportTask": {
      "input": {
        "markers": [],
        "members": {
          "ExportTaskId": {
            "name": "ExportTaskId",
            "shape_name": "ExportVmTaskId",
            "type": "string"
          }
        },
        "required": [
          "ExportTaskId"
        ]
      },
      "name": "CancelExportTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "CancelImageLaunchPermission": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "CancelImageLaunchPermission",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "CancelImportTask": {
      "input": {
        "markers": [],
        "members": {
          "CancelReason": {
            "name": "CancelReason",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImportTaskId": {
            "name": "ImportTaskId",
            "shape_name": "ImportTaskId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "CancelImportTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImportTaskId": {
            "name": "ImportTaskId",
            "shape_name": "String",
            "type": "string"
          },
          "PreviousState": {
            "name": "PreviousState",
            "shape_name": "String",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CancelReservedInstancesListing": {
      "input": {
        "markers": [],
        "members": {
          "ReservedInstancesListingId": {
            "name": "ReservedInstancesListingId",
            "shape_name": "ReservedInstancesListingId",
            "type": "string"
          }
        },
        "required": [
          "ReservedInstancesListingId"
        ]
      },
      "name": "CancelReservedInstancesListing",
      "output": {
        "lists": {
          "ReservedInstancesListings": {
            "all_fields": [
              "ClientToken",
              "CreateDate",
              "InstanceCounts",
              "PriceSchedules",
              "ReservedInstancesId",
              "ReservedInstancesListingId",
              "Status",
              "StatusMessage",
              "Tags",
              "UpdateDate"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId",
              "ReservedInstancesListingId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ReservedInstancesListings": {
            "name": "ReservedInstancesListings",
            "shape_name": "ReservedInstancesListingList",
            "type": "list"
          }
        }
      }
    },
    "CancelSpotFleetRequests": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SpotFleetRequestIds": {
            "name": "SpotFleetRequestIds",
            "shape_name": "SpotFleetRequestIdList",
            "type": "list"
          },
          "TerminateInstances": {
            "name": "TerminateInstances",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "SpotFleetRequestIds",
          "TerminateInstances"
        ]
      },
      "name": "CancelSpotFleetRequests",
      "output": {
        "lists": {
          "SuccessfulFleetRequests": {
            "all_fields": [
              "CurrentSpotFleetRequestState",
              "PreviousSpotFleetRequestState",
              "SpotFleetRequestId"
            ],
            "arn_fields": [],
            "id_fields": [
              "SpotFleetRequestId"
            ],
            "name_fields": []
          },
          "UnsuccessfulFleetRequests": {
            "all_fields": [
              "Error",
              "SpotFleetRequestId"
            ],
            "arn_fields": [],
            "id_fields": [
              "SpotFleetRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SuccessfulFleetRequests": {
            "name": "SuccessfulFleetRequests",
            "shape_name": "CancelSpotFleetRequestsSuccessSet",
            "type": "list"
          },
          "UnsuccessfulFleetRequests": {
            "name": "UnsuccessfulFleetRequests",
            "shape_name": "CancelSpotFleetRequestsErrorSet",
            "type": "list"
          }
        }
      }
    },
    "CancelSpotInstanceRequests": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SpotInstanceRequestIds": {
            "name": "SpotInstanceRequestIds",
            "shape_name": "SpotInstanceRequestIdList",
            "type": "list"
          }
        },
        "required": [
          "SpotInstanceRequestIds"
        ]
      },
      "name": "CancelSpotInstanceRequests",
      "output": {
        "lists": {
          "CancelledSpotInstanceRequests": {
            "all_fields": [
              "SpotInstanceRequestId",
              "State"
            ],
            "arn_fields": [],
            "id_fields": [
              "SpotInstanceRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "CancelledSpotInstanceRequests": {
            "name": "CancelledSpotInstanceRequests",
            "shape_name": "CancelledSpotInstanceRequestList",
            "type": "list"
          }
        }
      }
    },
    "ConfirmProductInstance": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "ProductCode": {
            "name": "ProductCode",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "InstanceId",
          "ProductCode"
        ]
      },
      "name": "ConfirmProductInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "CopyFpgaImage": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "SourceFpgaImageId": {
            "name": "SourceFpgaImageId",
            "shape_name": "String",
            "type": "string"
          },
          "SourceRegion": {
            "name": "SourceRegion",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "SourceFpgaImageId",
          "SourceRegion"
        ]
      },
      "name": "CopyFpgaImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CopyImage": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "CopyImageTags": {
            "name": "CopyImageTags",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationOutpostArn": {
            "name": "DestinationOutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "SourceImageId": {
            "name": "SourceImageId",
            "shape_name": "String",
            "type": "string"
          },
          "SourceRegion": {
            "name": "SourceRegion",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "Name",
          "SourceImageId",
          "SourceRegion"
        ]
      },
      "name": "CopyImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CopySnapshot": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationOutpostArn": {
            "name": "DestinationOutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationRegion": {
            "name": "DestinationRegion",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "PresignedUrl": {
            "name": "PresignedUrl",
            "shape_name": "CopySnapshotRequestPSU",
            "type": "string"
          },
          "SourceRegion": {
            "name": "SourceRegion",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSnapshotId": {
            "name": "SourceSnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "SourceRegion",
          "SourceSnapshotId"
        ]
      },
      "name": "CopySnapshot",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "CreateCapacityReservation": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "AvailabilityZoneName",
            "type": "string"
          },
          "AvailabilityZoneId": {
            "name": "AvailabilityZoneId",
            "shape_name": "AvailabilityZoneId",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EbsOptimized": {
            "name": "EbsOptimized",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndDate": {
            "name": "EndDate",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "EndDateType": {
            "name": "EndDateType",
            "shape_name": "EndDateType",
            "type": "string"
          },
          "EphemeralStorage": {
            "name": "EphemeralStorage",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "InstanceMatchCriteria": {
            "name": "InstanceMatchCriteria",
            "shape_name": "InstanceMatchCriteria",
            "type": "string"
          },
          "InstancePlatform": {
            "name": "InstancePlatform",
            "shape_name": "CapacityReservationInstancePlatform",
            "type": "string"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "String",
            "type": "string"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "OutpostArn",
            "type": "string"
          },
          "PlacementGroupArn": {
            "name": "PlacementGroupArn",
            "shape_name": "PlacementGroupArn",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Tenancy": {
            "name": "Tenancy",
            "shape_name": "CapacityReservationTenancy",
            "type": "string"
          }
        },
        "required": [
          "InstanceType",
          "InstancePlatform",
          "InstanceCount"
        ]
      },
      "name": "CreateCapacityReservation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CapacityReservation": {
            "name": "CapacityReservation",
            "shape_name": "CapacityReservation",
            "type": "structure"
          }
        }
      }
    },
    "CreateCapacityReservationFleet": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AllocationStrategy": {
            "name": "AllocationStrategy",
            "shape_name": "String",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndDate": {
            "name": "EndDate",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "InstanceMatchCriteria": {
            "name": "InstanceMatchCriteria",
            "shape_name": "FleetInstanceMatchCriteria",
            "type": "string"
          },
          "InstanceTypeSpecifications": {
            "name": "InstanceTypeSpecifications",
            "shape_name": "ReservationFleetInstanceSpecificationList",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Tenancy": {
            "name": "Tenancy",
            "shape_name": "FleetCapacityReservationTenancy",
            "type": "string"
          },
          "TotalTargetCapacity": {
            "name": "TotalTargetCapacity",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "InstanceTypeSpecifications",
          "TotalTargetCapacity"
        ]
      },
      "name": "CreateCapacityReservationFleet",
      "output": {
        "lists": {
          "FleetCapacityReservations": {
            "all_fields": [
              "AvailabilityZone",
              "AvailabilityZoneId",
              "CapacityReservationId",
              "CreateDate",
              "EbsOptimized",
              "FulfilledCapacity",
              "InstancePlatform",
              "InstanceType",
              "Priority",
              "TotalInstanceCount",
              "Weight"
            ],
            "arn_fields": [],
            "id_fields": [
              "AvailabilityZoneId",
              "CapacityReservationId"
            ],
            "name_fields": []
          },
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AllocationStrategy": {
            "name": "AllocationStrategy",
            "shape_name": "String",
            "type": "string"
          },
          "CapacityReservationFleetId": {
            "name": "CapacityReservationFleetId",
            "shape_name": "CapacityReservationFleetId",
            "type": "string"
          },
          "CreateTime": {
            "name": "CreateTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "EndDate": {
            "name": "EndDate",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "FleetCapacityReservations": {
            "name": "FleetCapacityReservations",
            "shape_name": "FleetCapacityReservationSet",
            "type": "list"
          },
          "InstanceMatchCriteria": {
            "name": "InstanceMatchCriteria",
            "shape_name": "FleetInstanceMatchCriteria",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "CapacityReservationFleetState",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          },
          "Tenancy": {
            "name": "Tenancy",
            "shape_name": "FleetCapacityReservationTenancy",
            "type": "string"
          },
          "TotalFulfilledCapacity": {
            "name": "TotalFulfilledCapacity",
            "shape_name": "Double",
            "type": "double"
          },
          "TotalTargetCapacity": {
            "name": "TotalTargetCapacity",
            "shape_name": "Integer",
            "type": "integer"
          }
        }
      }
    },
    "CreateCarrierGateway": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateCarrierGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CarrierGateway": {
            "name": "CarrierGateway",
            "shape_name": "CarrierGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateClientVpnEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AuthenticationOptions": {
            "name": "AuthenticationOptions",
            "shape_name": "ClientVpnAuthenticationRequestList",
            "type": "list"
          },
          "ClientCidrBlock": {
            "name": "ClientCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "ClientConnectOptions": {
            "name": "ClientConnectOptions",
            "shape_name": "ClientConnectOptions",
            "type": "structure"
          },
          "ClientLoginBannerOptions": {
            "name": "ClientLoginBannerOptions",
            "shape_name": "ClientLoginBannerOptions",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionLogOptions": {
            "name": "ConnectionLogOptions",
            "shape_name": "ConnectionLogOptions",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DnsServers": {
            "name": "DnsServers",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "ClientVpnSecurityGroupIdSet",
            "type": "list"
          },
          "SelfServicePortal": {
            "name": "SelfServicePortal",
            "shape_name": "SelfServicePortal",
            "type": "string"
          },
          "ServerCertificateArn": {
            "name": "ServerCertificateArn",
            "shape_name": "String",
            "type": "string"
          },
          "SessionTimeoutHours": {
            "name": "SessionTimeoutHours",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SplitTunnel": {
            "name": "SplitTunnel",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransportProtocol": {
            "name": "TransportProtocol",
            "shape_name": "TransportProtocol",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          },
          "VpnPort": {
            "name": "VpnPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "ClientCidrBlock",
          "ServerCertificateArn",
          "AuthenticationOptions",
          "ConnectionLogOptions"
        ]
      },
      "name": "CreateClientVpnEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "String",
            "type": "string"
          },
          "DnsName": {
            "name": "DnsName",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnEndpointStatus",
            "type": "structure"
          }
        }
      }
    },
    "CreateClientVpnRoute": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TargetVpcSubnetId": {
            "name": "TargetVpcSubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "DestinationCidrBlock",
          "TargetVpcSubnetId"
        ]
      },
      "name": "CreateClientVpnRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnRouteStatus",
            "type": "structure"
          }
        }
      }
    },
    "CreateCoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "CoipPoolId": {
            "name": "CoipPoolId",
            "shape_name": "Ipv4PoolCoipId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Cidr",
          "CoipPoolId"
        ]
      },
      "name": "CreateCoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CoipCidr": {
            "name": "CoipCidr",
            "shape_name": "CoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "CreateCoipPool": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "CreateCoipPool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CoipPool": {
            "name": "CoipPool",
            "shape_name": "CoipPool",
            "type": "structure"
          }
        }
      }
    },
    "CreateCustomerGateway": {
      "input": {
        "markers": [],
        "members": {
          "BgpAsn": {
            "name": "BgpAsn",
            "shape_name": "Integer",
            "type": "integer"
          },
          "BgpAsnExtended": {
            "name": "BgpAsnExtended",
            "shape_name": "Long",
            "type": "long"
          },
          "CertificateArn": {
            "name": "CertificateArn",
            "shape_name": "String",
            "type": "string"
          },
          "DeviceName": {
            "name": "DeviceName",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpAddress": {
            "name": "IpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Type": {
            "name": "Type",
            "shape_name": "GatewayType",
            "type": "string"
          }
        },
        "required": [
          "Type"
        ]
      },
      "name": "CreateCustomerGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CustomerGateway": {
            "name": "CustomerGateway",
            "shape_name": "CustomerGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateDefaultSubnet": {
      "input": {
        "markers": [],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "AvailabilityZoneName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Ipv6Native": {
            "name": "Ipv6Native",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AvailabilityZone"
        ]
      },
      "name": "CreateDefaultSubnet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Subnet": {
            "name": "Subnet",
            "shape_name": "Subnet",
            "type": "structure"
          }
        }
      }
    },
    "CreateDefaultVpc": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "CreateDefaultVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Vpc": {
            "name": "Vpc",
            "shape_name": "Vpc",
            "type": "structure"
          }
        }
      }
    },
    "CreateDhcpOptions": {
      "input": {
        "markers": [],
        "members": {
          "DhcpConfigurations": {
            "name": "DhcpConfigurations",
            "shape_name": "NewDhcpConfigurationList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "DhcpConfigurations"
        ]
      },
      "name": "CreateDhcpOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "DhcpOptions": {
            "name": "DhcpOptions",
            "shape_name": "DhcpOptions",
            "type": "structure"
          }
        }
      }
    },
    "CreateEgressOnlyInternetGateway": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateEgressOnlyInternetGateway",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "EgressOnlyInternetGateway": {
            "name": "EgressOnlyInternetGateway",
            "shape_name": "EgressOnlyInternetGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateFleet": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Context": {
            "name": "Context",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExcessCapacityTerminationPolicy": {
            "name": "ExcessCapacityTerminationPolicy",
            "shape_name": "FleetExcessCapacityTerminationPolicy",
            "type": "string"
          },
          "LaunchTemplateConfigs": {
            "name": "LaunchTemplateConfigs",
            "shape_name": "FleetLaunchTemplateConfigListRequest",
            "type": "list"
          },
          "OnDemandOptions": {
            "name": "OnDemandOptions",
            "shape_name": "OnDemandOptionsRequest",
            "type": "structure"
          },
          "ReplaceUnhealthyInstances": {
            "name": "ReplaceUnhealthyInstances",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SpotOptions": {
            "name": "SpotOptions",
            "shape_name": "SpotOptionsRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TargetCapacitySpecification": {
            "name": "TargetCapacitySpecification",
            "shape_name": "TargetCapacitySpecificationRequest",
            "type": "structure"
          },
          "TerminateInstancesWithExpiration": {
            "name": "TerminateInstancesWithExpiration",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Type": {
            "name": "Type",
            "shape_name": "FleetType",
            "type": "string"
          },
          "ValidFrom": {
            "name": "ValidFrom",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "ValidUntil": {
            "name": "ValidUntil",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": [
          "LaunchTemplateConfigs",
          "TargetCapacitySpecification"
        ]
      },
      "name": "CreateFleet",
      "output": {
        "lists": {
          "Errors": {
            "all_fields": [
              "ErrorCode",
              "ErrorMessage",
              "LaunchTemplateAndOverrides",
              "Lifecycle"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "Instances": {
            "all_fields": [
              "InstanceIds",
              "InstanceType",
              "LaunchTemplateAndOverrides",
              "Lifecycle",
              "Platform"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Errors": {
            "name": "Errors",
            "shape_name": "CreateFleetErrorsSet",
            "type": "list"
          },
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "Instances": {
            "name": "Instances",
            "shape_name": "CreateFleetInstancesSet",
            "type": "list"
          }
        }
      }
    },
    "CreateFlowLogs": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DeliverCrossAccountRole": {
            "name": "DeliverCrossAccountRole",
            "shape_name": "String",
            "type": "string"
          },
          "DeliverLogsPermissionArn": {
            "name": "DeliverLogsPermissionArn",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationOptions": {
            "name": "DestinationOptions",
            "shape_name": "DestinationOptionsRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LogDestination": {
            "name": "LogDestination",
            "shape_name": "String",
            "type": "string"
          },
          "LogDestinationType": {
            "name": "LogDestinationType",
            "shape_name": "LogDestinationType",
            "type": "string"
          },
          "LogFormat": {
            "name": "LogFormat",
            "shape_name": "String",
            "type": "string"
          },
          "LogGroupName": {
            "name": "LogGroupName",
            "shape_name": "String",
            "type": "string"
          },
          "MaxAggregationInterval": {
            "name": "MaxAggregationInterval",
            "shape_name": "Integer",
            "type": "integer"
          },
          "ResourceIds": {
            "name": "ResourceIds",
            "shape_name": "FlowLogResourceIds",
            "type": "list"
          },
          "ResourceType": {
            "name": "ResourceType",
            "shape_name": "FlowLogsResourceType",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TrafficType": {
            "name": "TrafficType",
            "shape_name": "TrafficType",
            "type": "string"
          }
        },
        "required": [
          "ResourceIds",
          "ResourceType"
        ]
      },
      "name": "CreateFlowLogs",
      "output": {
        "lists": {
          "FlowLogIds": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "FlowLogIds": {
            "name": "FlowLogIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "CreateFpgaImage": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InputStorageLocation": {
            "name": "InputStorageLocation",
            "shape_name": "StorageLocation",
            "type": "structure"
          },
          "LogsStorageLocation": {
            "name": "LogsStorageLocation",
            "shape_name": "StorageLocation",
            "type": "structure"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "InputStorageLocation"
        ]
      },
      "name": "CreateFpgaImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "FpgaImageGlobalId": {
            "name": "FpgaImageGlobalId",
            "shape_name": "String",
            "type": "string"
          },
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CreateImage": {
      "input": {
        "markers": [],
        "members": {
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "NoReboot": {
            "name": "NoReboot",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "InstanceId",
          "Name"
        ]
      },
      "name": "CreateImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CreateInstanceConnectEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PreserveClientIp": {
            "name": "PreserveClientIp",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "SecurityGroupIdStringListRequest",
            "type": "list"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "CreateInstanceConnectEndpoint",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceConnectEndpoint": {
            "name": "InstanceConnectEndpoint",
            "shape_name": "Ec2InstanceConnectEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "CreateInstanceEventWindow": {
      "input": {
        "markers": [],
        "members": {
          "CronExpression": {
            "name": "CronExpression",
            "shape_name": "InstanceEventWindowCronExpression",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TimeRanges": {
            "name": "TimeRanges",
            "shape_name": "InstanceEventWindowTimeRangeRequestSet",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateInstanceEventWindow",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceEventWindow": {
            "name": "InstanceEventWindow",
            "shape_name": "InstanceEventWindow",
            "type": "structure"
          }
        }
      }
    },
    "CreateInstanceExportTask": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "ExportToS3Task": {
            "name": "ExportToS3Task",
            "shape_name": "ExportToS3TaskSpecification",
            "type": "structure"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TargetEnvironment": {
            "name": "TargetEnvironment",
            "shape_name": "ExportEnvironment",
            "type": "string"
          }
        },
        "required": [
          "ExportToS3Task",
          "InstanceId",
          "TargetEnvironment"
        ]
      },
      "name": "CreateInstanceExportTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ExportTask": {
            "name": "ExportTask",
            "shape_name": "ExportTask",
            "type": "structure"
          }
        }
      }
    },
    "CreateInternetGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateInternetGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InternetGateway": {
            "name": "InternetGateway",
            "shape_name": "InternetGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateIpam": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OperatingRegions": {
            "name": "OperatingRegions",
            "shape_name": "AddIpamOperatingRegionSet",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Tier": {
            "name": "Tier",
            "shape_name": "IpamTier",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "CreateIpam",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Ipam": {
            "name": "Ipam",
            "shape_name": "Ipam",
            "type": "structure"
          }
        }
      }
    },
    "CreateIpamExternalResourceVerificationToken": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "IpamId"
        ]
      },
      "name": "CreateIpamExternalResourceVerificationToken",
      "output": {
        "lists": {},
        "markers": [
          "IpamExternalResourceVerificationToken"
        ],
        "members": {
          "IpamExternalResourceVerificationToken": {
            "name": "IpamExternalResourceVerificationToken",
            "shape_name": "IpamExternalResourceVerificationToken",
            "type": "structure"
          }
        }
      }
    },
    "CreateIpamPool": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AddressFamily": {
            "name": "AddressFamily",
            "shape_name": "AddressFamily",
            "type": "string"
          },
          "AllocationDefaultNetmaskLength": {
            "name": "AllocationDefaultNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AllocationMaxNetmaskLength": {
            "name": "AllocationMaxNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AllocationMinNetmaskLength": {
            "name": "AllocationMinNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AllocationResourceTags": {
            "name": "AllocationResourceTags",
            "shape_name": "RequestIpamResourceTagList",
            "type": "list"
          },
          "AutoImport": {
            "name": "AutoImport",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "AwsService": {
            "name": "AwsService",
            "shape_name": "IpamPoolAwsService",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamScopeId": {
            "name": "IpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          },
          "Locale": {
            "name": "Locale",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIpSource": {
            "name": "PublicIpSource",
            "shape_name": "IpamPoolPublicIpSource",
            "type": "string"
          },
          "PubliclyAdvertisable": {
            "name": "PubliclyAdvertisable",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SourceIpamPoolId": {
            "name": "SourceIpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "SourceResource": {
            "name": "SourceResource",
            "shape_name": "IpamPoolSourceResourceRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "IpamScopeId",
          "AddressFamily"
        ]
      },
      "name": "CreateIpamPool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPool": {
            "name": "IpamPool",
            "shape_name": "IpamPool",
            "type": "structure"
          }
        }
      }
    },
    "CreateIpamResourceDiscovery": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OperatingRegions": {
            "name": "OperatingRegions",
            "shape_name": "AddIpamOperatingRegionSet",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateIpamResourceDiscovery",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceDiscovery": {
            "name": "IpamResourceDiscovery",
            "shape_name": "IpamResourceDiscovery",
            "type": "structure"
          }
        }
      }
    },
    "CreateIpamScope": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "IpamId"
        ]
      },
      "name": "CreateIpamScope",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamScope": {
            "name": "IpamScope",
            "shape_name": "IpamScope",
            "type": "structure"
          }
        }
      }
    },
    "CreateKeyPair": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KeyFormat": {
            "name": "KeyFormat",
            "shape_name": "KeyFormat",
            "type": "string"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "String",
            "type": "string"
          },
          "KeyType": {
            "name": "KeyType",
            "shape_name": "KeyType",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "KeyName"
        ]
      },
      "name": "CreateKeyPair",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "KeyFingerprint": {
            "name": "KeyFingerprint",
            "shape_name": "String",
            "type": "string"
          },
          "KeyMaterial": {
            "name": "KeyMaterial",
            "shape_name": "SensitiveUserData",
            "type": "string"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "String",
            "type": "string"
          },
          "KeyPairId": {
            "name": "KeyPairId",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "CreateLaunchTemplate": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchTemplateData": {
            "name": "LaunchTemplateData",
            "shape_name": "RequestLaunchTemplateData",
            "type": "structure"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VersionDescription": {
            "name": "VersionDescription",
            "shape_name": "VersionDescription",
            "type": "string"
          }
        },
        "required": [
          "LaunchTemplateName",
          "LaunchTemplateData"
        ]
      },
      "name": "CreateLaunchTemplate",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "LaunchTemplate",
            "type": "structure"
          },
          "Warning": {
            "name": "Warning",
            "shape_name": "ValidationWarning",
            "type": "structure"
          }
        }
      }
    },
    "CreateLaunchTemplateVersion": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchTemplateData": {
            "name": "LaunchTemplateData",
            "shape_name": "RequestLaunchTemplateData",
            "type": "structure"
          },
          "LaunchTemplateId": {
            "name": "LaunchTemplateId",
            "shape_name": "LaunchTemplateId",
            "type": "string"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          },
          "ResolveAlias": {
            "name": "ResolveAlias",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SourceVersion": {
            "name": "SourceVersion",
            "shape_name": "String",
            "type": "string"
          },
          "VersionDescription": {
            "name": "VersionDescription",
            "shape_name": "VersionDescription",
            "type": "string"
          }
        },
        "required": [
          "LaunchTemplateData"
        ]
      },
      "name": "CreateLaunchTemplateVersion",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LaunchTemplateVersion": {
            "name": "LaunchTemplateVersion",
            "shape_name": "LaunchTemplateVersion",
            "type": "structure"
          },
          "Warning": {
            "name": "Warning",
            "shape_name": "ValidationWarning",
            "type": "structure"
          }
        }
      }
    },
    "CreateLocalGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "name": "LocalGatewayVirtualInterfaceGroupId",
            "shape_name": "LocalGatewayVirtualInterfaceGroupId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "CreateLocalGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "LocalGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "CreateLocalGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayId": {
            "name": "LocalGatewayId",
            "shape_name": "LocalGatewayId",
            "type": "string"
          },
          "Mode": {
            "name": "Mode",
            "shape_name": "LocalGatewayRouteTableMode",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "LocalGatewayId"
        ]
      },
      "name": "CreateLocalGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTable": {
            "name": "LocalGatewayRouteTable",
            "shape_name": "LocalGatewayRouteTable",
            "type": "structure"
          }
        }
      }
    },
    "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "name": "LocalGatewayVirtualInterfaceGroupId",
            "shape_name": "LocalGatewayVirtualInterfaceGroupId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "LocalGatewayRouteTableId",
          "LocalGatewayVirtualInterfaceGroupId"
        ]
      },
      "name": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
            "name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "shape_name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "type": "structure"
          }
        }
      }
    },
    "CreateLocalGatewayRouteTableVpcAssociation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId",
          "VpcId"
        ]
      },
      "name": "CreateLocalGatewayRouteTableVpcAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTableVpcAssociation": {
            "name": "LocalGatewayRouteTableVpcAssociation",
            "shape_name": "LocalGatewayRouteTableVpcAssociation",
            "type": "structure"
          }
        }
      }
    },
    "CreateManagedPrefixList": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AddressFamily": {
            "name": "AddressFamily",
            "shape_name": "String",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Entries": {
            "name": "Entries",
            "shape_name": "AddPrefixListEntries",
            "type": "list"
          },
          "MaxEntries": {
            "name": "MaxEntries",
            "shape_name": "Integer",
            "type": "integer"
          },
          "PrefixListName": {
            "name": "PrefixListName",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "PrefixListName",
          "MaxEntries",
          "AddressFamily"
        ]
      },
      "name": "CreateManagedPrefixList",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PrefixList": {
            "name": "PrefixList",
            "shape_name": "ManagedPrefixList",
            "type": "structure"
          }
        }
      }
    },
    "CreateNatGateway": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectivityType": {
            "name": "ConnectivityType",
            "shape_name": "ConnectivityType",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrivateIpAddress": {
            "name": "PrivateIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "SecondaryAllocationIds": {
            "name": "SecondaryAllocationIds",
            "shape_name": "AllocationIdList",
            "type": "list"
          },
          "SecondaryPrivateIpAddressCount": {
            "name": "SecondaryPrivateIpAddressCount",
            "shape_name": "PrivateIpAddressCount",
            "type": "integer"
          },
          "SecondaryPrivateIpAddresses": {
            "name": "SecondaryPrivateIpAddresses",
            "shape_name": "IpList",
            "type": "list"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "CreateNatGateway",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "NatGateway": {
            "name": "NatGateway",
            "shape_name": "NatGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateNetworkAcl": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateNetworkAcl",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkAcl": {
            "name": "NetworkAcl",
            "shape_name": "NetworkAcl",
            "type": "structure"
          }
        }
      }
    },
    "CreateNetworkAclEntry": {
      "input": {
        "markers": [],
        "members": {
          "CidrBlock": {
            "name": "CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Egress": {
            "name": "Egress",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IcmpTypeCode": {
            "name": "IcmpTypeCode",
            "shape_name": "IcmpTypeCode",
            "type": "structure"
          },
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkAclId": {
            "name": "NetworkAclId",
            "shape_name": "NetworkAclId",
            "type": "string"
          },
          "PortRange": {
            "name": "PortRange",
            "shape_name": "PortRange",
            "type": "structure"
          },
          "Protocol": {
            "name": "Protocol",
            "shape_name": "String",
            "type": "string"
          },
          "RuleAction": {
            "name": "RuleAction",
            "shape_name": "RuleAction",
            "type": "string"
          },
          "RuleNumber": {
            "name": "RuleNumber",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "Egress",
          "NetworkAclId",
          "Protocol",
          "RuleAction",
          "RuleNumber"
        ]
      },
      "name": "CreateNetworkAclEntry",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "CreateNetworkInsightsAccessScope": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExcludePaths": {
            "name": "ExcludePaths",
            "shape_name": "AccessScopePathListRequest",
            "type": "list"
          },
          "MatchPaths": {
            "name": "MatchPaths",
            "shape_name": "AccessScopePathListRequest",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "ClientToken"
        ]
      },
      "name": "CreateNetworkInsightsAccessScope",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAccessScope": {
            "name": "NetworkInsightsAccessScope",
            "shape_name": "NetworkInsightsAccessScope",
            "type": "structure"
          },
          "NetworkInsightsAccessScopeContent": {
            "name": "NetworkInsightsAccessScopeContent",
            "shape_name": "NetworkInsightsAccessScopeContent",
            "type": "structure"
          }
        }
      }
    },
    "CreateNetworkInsightsPath": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Destination": {
            "name": "Destination",
            "shape_name": "NetworkInsightsResourceId",
            "type": "string"
          },
          "DestinationIp": {
            "name": "DestinationIp",
            "shape_name": "IpAddress",
            "type": "string"
          },
          "DestinationPort": {
            "name": "DestinationPort",
            "shape_name": "Port",
            "type": "integer"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FilterAtDestination": {
            "name": "FilterAtDestination",
            "shape_name": "PathRequestFilter",
            "type": "structure"
          },
          "FilterAtSource": {
            "name": "FilterAtSource",
            "shape_name": "PathRequestFilter",
            "type": "structure"
          },
          "Protocol": {
            "name": "Protocol",
            "shape_name": "Protocol",
            "type": "string"
          },
          "Source": {
            "name": "Source",
            "shape_name": "NetworkInsightsResourceId",
            "type": "string"
          },
          "SourceIp": {
            "name": "SourceIp",
            "shape_name": "IpAddress",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "Source",
          "Protocol",
          "ClientToken"
        ]
      },
      "name": "CreateNetworkInsightsPath",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsPath": {
            "name": "NetworkInsightsPath",
            "shape_name": "NetworkInsightsPath",
            "type": "structure"
          }
        }
      }
    },
    "CreateNetworkInterface": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionTrackingSpecification": {
            "name": "ConnectionTrackingSpecification",
            "shape_name": "ConnectionTrackingSpecificationRequest",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnablePrimaryIpv6": {
            "name": "EnablePrimaryIpv6",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "SecurityGroupIdStringList",
            "type": "list"
          },
          "InterfaceType": {
            "name": "InterfaceType",
            "shape_name": "NetworkInterfaceCreationType",
            "type": "string"
          },
          "Ipv4PrefixCount": {
            "name": "Ipv4PrefixCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv4Prefixes": {
            "name": "Ipv4Prefixes",
            "shape_name": "Ipv4PrefixList",
            "type": "list"
          },
          "Ipv6AddressCount": {
            "name": "Ipv6AddressCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv6Addresses": {
            "name": "Ipv6Addresses",
            "shape_name": "InstanceIpv6AddressList",
            "type": "list"
          },
          "Ipv6PrefixCount": {
            "name": "Ipv6PrefixCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv6Prefixes": {
            "name": "Ipv6Prefixes",
            "shape_name": "Ipv6PrefixList",
            "type": "list"
          },
          "PrivateIpAddress": {
            "name": "PrivateIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "PrivateIpAddressSpecificationList",
            "type": "list"
          },
          "SecondaryPrivateIpAddressCount": {
            "name": "SecondaryPrivateIpAddressCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "CreateNetworkInterface",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkInterface": {
            "name": "NetworkInterface",
            "shape_name": "NetworkInterface",
            "type": "structure"
          }
        }
      }
    },
    "CreateNetworkInterfacePermission": {
      "input": {
        "markers": [],
        "members": {
          "AwsAccountId": {
            "name": "AwsAccountId",
            "shape_name": "String",
            "type": "string"
          },
          "AwsService": {
            "name": "AwsService",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "Permission": {
            "name": "Permission",
            "shape_name": "InterfacePermissionType",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId",
          "Permission"
        ]
      },
      "name": "CreateNetworkInterfacePermission",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InterfacePermission": {
            "name": "InterfacePermission",
            "shape_name": "NetworkInterfacePermission",
            "type": "structure"
          }
        }
      }
    },
    "CreatePlacementGroup": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "String",
            "type": "string"
          },
          "PartitionCount": {
            "name": "PartitionCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SpreadLevel": {
            "name": "SpreadLevel",
            "shape_name": "SpreadLevel",
            "type": "string"
          },
          "Strategy": {
            "name": "Strategy",
            "shape_name": "PlacementStrategy",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreatePlacementGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PlacementGroup": {
            "name": "PlacementGroup",
            "shape_name": "PlacementGroup",
            "type": "structure"
          }
        }
      }
    },
    "CreatePublicIpv4Pool": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreatePublicIpv4Pool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        }
      }
    },
    "CreateReplaceRootVolumeTask": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DeleteReplacedRootVolume": {
            "name": "DeleteReplacedRootVolume",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "CreateReplaceRootVolumeTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReplaceRootVolumeTask": {
            "name": "ReplaceRootVolumeTask",
            "shape_name": "ReplaceRootVolumeTask",
            "type": "structure"
          }
        }
      }
    },
    "CreateReservedInstancesListing": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "PriceSchedules": {
            "name": "PriceSchedules",
            "shape_name": "PriceScheduleSpecificationList",
            "type": "list"
          },
          "ReservedInstancesId": {
            "name": "ReservedInstancesId",
            "shape_name": "ReservationId",
            "type": "string"
          }
        },
        "required": [
          "ClientToken",
          "InstanceCount",
          "PriceSchedules",
          "ReservedInstancesId"
        ]
      },
      "name": "CreateReservedInstancesListing",
      "output": {
        "lists": {
          "ReservedInstancesListings": {
            "all_fields": [
              "ClientToken",
              "CreateDate",
              "InstanceCounts",
              "PriceSchedules",
              "ReservedInstancesId",
              "ReservedInstancesListingId",
              "Status",
              "StatusMessage",
              "Tags",
              "UpdateDate"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId",
              "ReservedInstancesListingId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ReservedInstancesListings": {
            "name": "ReservedInstancesListings",
            "shape_name": "ReservedInstancesListingList",
            "type": "list"
          }
        }
      }
    },
    "CreateRestoreImageTask": {
      "input": {
        "markers": [],
        "members": {
          "Bucket": {
            "name": "Bucket",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "ObjectKey": {
            "name": "ObjectKey",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "Bucket",
          "ObjectKey"
        ]
      },
      "name": "CreateRestoreImageTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CreateRoute": {
      "input": {
        "markers": [],
        "members": {
          "CarrierGatewayId": {
            "name": "CarrierGatewayId",
            "shape_name": "CarrierGatewayId",
            "type": "string"
          },
          "CoreNetworkArn": {
            "name": "CoreNetworkArn",
            "shape_name": "CoreNetworkArn",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationIpv6CidrBlock": {
            "name": "DestinationIpv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EgressOnlyInternetGatewayId": {
            "name": "EgressOnlyInternetGatewayId",
            "shape_name": "EgressOnlyInternetGatewayId",
            "type": "string"
          },
          "GatewayId": {
            "name": "GatewayId",
            "shape_name": "RouteGatewayId",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "LocalGatewayId": {
            "name": "LocalGatewayId",
            "shape_name": "LocalGatewayId",
            "type": "string"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "VpcEndpointId": {
            "name": "VpcEndpointId",
            "shape_name": "VpcEndpointId",
            "type": "string"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionId",
            "type": "string"
          }
        },
        "required": [
          "RouteTableId"
        ]
      },
      "name": "CreateRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "CreateRouteTable": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateRouteTable",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "RouteTable": {
            "name": "RouteTable",
            "shape_name": "RouteTable",
            "type": "structure"
          }
        }
      }
    },
    "CreateSecurityGroup": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "Description",
          "GroupName"
        ]
      },
      "name": "CreateSecurityGroup",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "GroupId": {
            "name": "GroupId",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "CreateSnapshot": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "CreateSnapshot",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "DataEncryptionKeyId": {
            "name": "DataEncryptionKeyId",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "String",
            "type": "string"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "OwnerAlias": {
            "name": "OwnerAlias",
            "shape_name": "String",
            "type": "string"
          },
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "Progress": {
            "name": "Progress",
            "shape_name": "String",
            "type": "string"
          },
          "RestoreExpiryTime": {
            "name": "RestoreExpiryTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "SseType": {
            "name": "SseType",
            "shape_name": "SSEType",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "State": {
            "name": "State",
            "shape_name": "SnapshotState",
            "type": "string"
          },
          "StateMessage": {
            "name": "StateMessage",
            "shape_name": "String",
            "type": "string"
          },
          "StorageTier": {
            "name": "StorageTier",
            "shape_name": "StorageTier",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeSize": {
            "name": "VolumeSize",
            "shape_name": "Integer",
            "type": "integer"
          }
        }
      }
    },
    "CreateSnapshots": {
      "input": {
        "markers": [],
        "members": {
          "CopyTagsFromSource": {
            "name": "CopyTagsFromSource",
            "shape_name": "CopyTagsFromSource",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceSpecification": {
            "name": "InstanceSpecification",
            "shape_name": "InstanceSpecification",
            "type": "structure"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "InstanceSpecification"
        ]
      },
      "name": "CreateSnapshots",
      "output": {
        "lists": {
          "Snapshots": {
            "all_fields": [
              "Description",
              "Encrypted",
              "OutpostArn",
              "OwnerId",
              "Progress",
              "SnapshotId",
              "SseType",
              "StartTime",
              "State",
              "Tags",
              "VolumeId",
              "VolumeSize"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "OwnerId",
              "SnapshotId",
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Snapshots": {
            "name": "Snapshots",
            "shape_name": "SnapshotSet",
            "type": "list"
          }
        }
      }
    },
    "CreateSpotDatafeedSubscription": {
      "input": {
        "markers": [],
        "members": {
          "Bucket": {
            "name": "Bucket",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Prefix": {
            "name": "Prefix",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "Bucket"
        ]
      },
      "name": "CreateSpotDatafeedSubscription",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SpotDatafeedSubscription": {
            "name": "SpotDatafeedSubscription",
            "shape_name": "SpotDatafeedSubscription",
            "type": "structure"
          }
        }
      }
    },
    "CreateStoreImageTask": {
      "input": {
        "markers": [],
        "members": {
          "Bucket": {
            "name": "Bucket",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "S3ObjectTags": {
            "name": "S3ObjectTags",
            "shape_name": "S3ObjectTagList",
            "type": "list"
          }
        },
        "required": [
          "ImageId",
          "Bucket"
        ]
      },
      "name": "CreateStoreImageTask",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ObjectKey": {
            "name": "ObjectKey",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "CreateSubnet": {
      "input": {
        "markers": [],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "AvailabilityZoneId": {
            "name": "AvailabilityZoneId",
            "shape_name": "String",
            "type": "string"
          },
          "CidrBlock": {
            "name": "CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Ipv4IpamPoolId": {
            "name": "Ipv4IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv4NetmaskLength": {
            "name": "Ipv4NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6IpamPoolId": {
            "name": "Ipv6IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv6Native": {
            "name": "Ipv6Native",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Ipv6NetmaskLength": {
            "name": "Ipv6NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateSubnet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Subnet": {
            "name": "Subnet",
            "shape_name": "Subnet",
            "type": "structure"
          }
        }
      }
    },
    "CreateSubnetCidrReservation": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ReservationType": {
            "name": "ReservationType",
            "shape_name": "SubnetCidrReservationType",
            "type": "string"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "SubnetId",
          "Cidr",
          "ReservationType"
        ]
      },
      "name": "CreateSubnetCidrReservation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SubnetCidrReservation": {
            "name": "SubnetCidrReservation",
            "shape_name": "SubnetCidrReservation",
            "type": "structure"
          }
        }
      }
    },
    "CreateTags": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Resources": {
            "name": "Resources",
            "shape_name": "ResourceIdList",
            "type": "list"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        },
        "required": [
          "Resources",
          "Tags"
        ]
      },
      "name": "CreateTags",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "CreateTrafficMirrorFilter": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateTrafficMirrorFilter",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorFilter": {
            "name": "TrafficMirrorFilter",
            "shape_name": "TrafficMirrorFilter",
            "type": "structure"
          }
        }
      }
    },
    "CreateTrafficMirrorFilterRule": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPortRange": {
            "name": "DestinationPortRange",
            "shape_name": "TrafficMirrorPortRangeRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Protocol": {
            "name": "Protocol",
            "shape_name": "Integer",
            "type": "integer"
          },
          "RuleAction": {
            "name": "RuleAction",
            "shape_name": "TrafficMirrorRuleAction",
            "type": "string"
          },
          "RuleNumber": {
            "name": "RuleNumber",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SourceCidrBlock": {
            "name": "SourceCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "SourcePortRange": {
            "name": "SourcePortRange",
            "shape_name": "TrafficMirrorPortRangeRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TrafficDirection": {
            "name": "TrafficDirection",
            "shape_name": "TrafficDirection",
            "type": "string"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorFilterId",
          "TrafficDirection",
          "RuleNumber",
          "RuleAction",
          "DestinationCidrBlock",
          "SourceCidrBlock"
        ]
      },
      "name": "CreateTrafficMirrorFilterRule",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorFilterRule": {
            "name": "TrafficMirrorFilterRule",
            "shape_name": "TrafficMirrorFilterRule",
            "type": "structure"
          }
        }
      }
    },
    "CreateTrafficMirrorSession": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "PacketLength": {
            "name": "PacketLength",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SessionNumber": {
            "name": "SessionNumber",
            "shape_name": "Integer",
            "type": "integer"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          },
          "TrafficMirrorTargetId": {
            "name": "TrafficMirrorTargetId",
            "shape_name": "TrafficMirrorTargetId",
            "type": "string"
          },
          "VirtualNetworkId": {
            "name": "VirtualNetworkId",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "NetworkInterfaceId",
          "TrafficMirrorTargetId",
          "TrafficMirrorFilterId",
          "SessionNumber"
        ]
      },
      "name": "CreateTrafficMirrorSession",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorSession": {
            "name": "TrafficMirrorSession",
            "shape_name": "TrafficMirrorSession",
            "type": "structure"
          }
        }
      }
    },
    "CreateTrafficMirrorTarget": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GatewayLoadBalancerEndpointId": {
            "name": "GatewayLoadBalancerEndpointId",
            "shape_name": "VpcEndpointId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "NetworkLoadBalancerArn": {
            "name": "NetworkLoadBalancerArn",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateTrafficMirrorTarget",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorTarget": {
            "name": "TrafficMirrorTarget",
            "shape_name": "TrafficMirrorTarget",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGateway": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "TransitGatewayRequestOptions",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateTransitGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGateway": {
            "name": "TransitGateway",
            "shape_name": "TransitGateway",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayConnect": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "CreateTransitGatewayConnectRequestOptions",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransportTransitGatewayAttachmentId": {
            "name": "TransportTransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransportTransitGatewayAttachmentId",
          "Options"
        ]
      },
      "name": "CreateTransitGatewayConnect",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayConnect": {
            "name": "TransitGatewayConnect",
            "shape_name": "TransitGatewayConnect",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayConnectPeer": {
      "input": {
        "markers": [],
        "members": {
          "BgpOptions": {
            "name": "BgpOptions",
            "shape_name": "TransitGatewayConnectRequestBgpOptions",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InsideCidrBlocks": {
            "name": "InsideCidrBlocks",
            "shape_name": "InsideCidrBlocksStringList",
            "type": "list"
          },
          "PeerAddress": {
            "name": "PeerAddress",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayAddress": {
            "name": "TransitGatewayAddress",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId",
          "PeerAddress",
          "InsideCidrBlocks"
        ]
      },
      "name": "CreateTransitGatewayConnectPeer",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayConnectPeer": {
            "name": "TransitGatewayConnectPeer",
            "shape_name": "TransitGatewayConnectPeer",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayMulticastDomain": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "CreateTransitGatewayMulticastDomainRequestOptions",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId"
        ]
      },
      "name": "CreateTransitGatewayMulticastDomain",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayMulticastDomain": {
            "name": "TransitGatewayMulticastDomain",
            "shape_name": "TransitGatewayMulticastDomain",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayPeeringAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "CreateTransitGatewayPeeringAttachmentRequestOptions",
            "type": "structure"
          },
          "PeerAccountId": {
            "name": "PeerAccountId",
            "shape_name": "String",
            "type": "string"
          },
          "PeerRegion": {
            "name": "PeerRegion",
            "shape_name": "String",
            "type": "string"
          },
          "PeerTransitGatewayId": {
            "name": "PeerTransitGatewayId",
            "shape_name": "TransitAssociationGatewayId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId",
          "PeerTransitGatewayId",
          "PeerAccountId",
          "PeerRegion"
        ]
      },
      "name": "CreateTransitGatewayPeeringAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPeeringAttachment": {
            "name": "TransitGatewayPeeringAttachment",
            "shape_name": "TransitGatewayPeeringAttachment",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayPolicyTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId"
        ]
      },
      "name": "CreateTransitGatewayPolicyTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPolicyTable": {
            "name": "TransitGatewayPolicyTable",
            "shape_name": "TransitGatewayPolicyTable",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayPrefixListReference": {
      "input": {
        "markers": [],
        "members": {
          "Blackhole": {
            "name": "Blackhole",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "PrefixListId"
        ]
      },
      "name": "CreateTransitGatewayPrefixListReference",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPrefixListReference": {
            "name": "TransitGatewayPrefixListReference",
            "shape_name": "TransitGatewayPrefixListReference",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "Blackhole": {
            "name": "Blackhole",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "DestinationCidrBlock",
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "CreateTransitGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "TransitGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId"
        ]
      },
      "name": "CreateTransitGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayRouteTable": {
            "name": "TransitGatewayRouteTable",
            "shape_name": "TransitGatewayRouteTable",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayRouteTableAnnouncement": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PeeringAttachmentId": {
            "name": "PeeringAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "PeeringAttachmentId"
        ]
      },
      "name": "CreateTransitGatewayRouteTableAnnouncement",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayRouteTableAnnouncement": {
            "name": "TransitGatewayRouteTableAnnouncement",
            "shape_name": "TransitGatewayRouteTableAnnouncement",
            "type": "structure"
          }
        }
      }
    },
    "CreateTransitGatewayVpcAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "CreateTransitGatewayVpcAttachmentRequestOptions",
            "type": "structure"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "TransitGatewaySubnetIdList",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId",
          "VpcId",
          "SubnetIds"
        ]
      },
      "name": "CreateTransitGatewayVpcAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayVpcAttachment": {
            "name": "TransitGatewayVpcAttachment",
            "shape_name": "TransitGatewayVpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "CreateVerifiedAccessEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ApplicationDomain": {
            "name": "ApplicationDomain",
            "shape_name": "String",
            "type": "string"
          },
          "AttachmentType": {
            "name": "AttachmentType",
            "shape_name": "VerifiedAccessEndpointAttachmentType",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DomainCertificateArn": {
            "name": "DomainCertificateArn",
            "shape_name": "CertificateArn",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndpointDomainPrefix": {
            "name": "EndpointDomainPrefix",
            "shape_name": "String",
            "type": "string"
          },
          "EndpointType": {
            "name": "EndpointType",
            "shape_name": "VerifiedAccessEndpointType",
            "type": "string"
          },
          "LoadBalancerOptions": {
            "name": "LoadBalancerOptions",
            "shape_name": "CreateVerifiedAccessEndpointLoadBalancerOptions",
            "type": "structure"
          },
          "NetworkInterfaceOptions": {
            "name": "NetworkInterfaceOptions",
            "shape_name": "CreateVerifiedAccessEndpointEniOptions",
            "type": "structure"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "SecurityGroupIdList",
            "type": "list"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessGroupId",
          "EndpointType",
          "AttachmentType",
          "DomainCertificateArn",
          "ApplicationDomain",
          "EndpointDomainPrefix"
        ]
      },
      "name": "CreateVerifiedAccessEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessEndpoint": {
            "name": "VerifiedAccessEndpoint",
            "shape_name": "VerifiedAccessEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "CreateVerifiedAccessGroup": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId"
        ]
      },
      "name": "CreateVerifiedAccessGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessGroup": {
            "name": "VerifiedAccessGroup",
            "shape_name": "VerifiedAccessGroup",
            "type": "structure"
          }
        }
      }
    },
    "CreateVerifiedAccessInstance": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FIPSEnabled": {
            "name": "FIPSEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateVerifiedAccessInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessInstance": {
            "name": "VerifiedAccessInstance",
            "shape_name": "VerifiedAccessInstance",
            "type": "structure"
          }
        }
      }
    },
    "CreateVerifiedAccessTrustProvider": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DeviceOptions": {
            "name": "DeviceOptions",
            "shape_name": "CreateVerifiedAccessTrustProviderDeviceOptions",
            "type": "structure"
          },
          "DeviceTrustProviderType": {
            "name": "DeviceTrustProviderType",
            "shape_name": "DeviceTrustProviderType",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OidcOptions": {
            "name": "OidcOptions",
            "shape_name": "CreateVerifiedAccessTrustProviderOidcOptions",
            "type": "structure"
          },
          "PolicyReferenceName": {
            "name": "PolicyReferenceName",
            "shape_name": "String",
            "type": "string"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TrustProviderType": {
            "name": "TrustProviderType",
            "shape_name": "TrustProviderType",
            "type": "string"
          },
          "UserTrustProviderType": {
            "name": "UserTrustProviderType",
            "shape_name": "UserTrustProviderType",
            "type": "string"
          }
        },
        "required": [
          "TrustProviderType",
          "PolicyReferenceName"
        ]
      },
      "name": "CreateVerifiedAccessTrustProvider",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessTrustProvider": {
            "name": "VerifiedAccessTrustProvider",
            "shape_name": "VerifiedAccessTrustProvider",
            "type": "structure"
          }
        }
      }
    },
    "CreateVolume": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "AvailabilityZoneName",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Iops": {
            "name": "Iops",
            "shape_name": "Integer",
            "type": "integer"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "MultiAttachEnabled": {
            "name": "MultiAttachEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "Size": {
            "name": "Size",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Throughput": {
            "name": "Throughput",
            "shape_name": "Integer",
            "type": "integer"
          },
          "VolumeType": {
            "name": "VolumeType",
            "shape_name": "VolumeType",
            "type": "string"
          }
        },
        "required": [
          "AvailabilityZone"
        ]
      },
      "name": "CreateVolume",
      "output": {
        "lists": {
          "Attachments": {
            "all_fields": [
              "AssociatedResource",
              "AttachTime",
              "DeleteOnTermination",
              "Device",
              "InstanceId",
              "InstanceOwningService",
              "State",
              "VolumeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "VolumeId"
            ],
            "name_fields": []
          },
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Attachments": {
            "name": "Attachments",
            "shape_name": "VolumeAttachmentList",
            "type": "list"
          },
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "CreateTime": {
            "name": "CreateTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FastRestored": {
            "name": "FastRestored",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Iops": {
            "name": "Iops",
            "shape_name": "Integer",
            "type": "integer"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "String",
            "type": "string"
          },
          "MultiAttachEnabled": {
            "name": "MultiAttachEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "Size": {
            "name": "Size",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "SseType": {
            "name": "SseType",
            "shape_name": "SSEType",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "VolumeState",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          },
          "Throughput": {
            "name": "Throughput",
            "shape_name": "Integer",
            "type": "integer"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeType": {
            "name": "VolumeType",
            "shape_name": "VolumeType",
            "type": "string"
          }
        }
      }
    },
    "CreateVpc": {
      "input": {
        "markers": [],
        "members": {
          "AmazonProvidedIpv6CidrBlock": {
            "name": "AmazonProvidedIpv6CidrBlock",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "CidrBlock": {
            "name": "CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceTenancy": {
            "name": "InstanceTenancy",
            "shape_name": "Tenancy",
            "type": "string"
          },
          "Ipv4IpamPoolId": {
            "name": "Ipv4IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv4NetmaskLength": {
            "name": "Ipv4NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6CidrBlockNetworkBorderGroup": {
            "name": "Ipv6CidrBlockNetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "Ipv6IpamPoolId": {
            "name": "Ipv6IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "Ipv6NetmaskLength": {
            "name": "Ipv6NetmaskLength",
            "shape_name": "NetmaskLength",
            "type": "integer"
          },
          "Ipv6Pool": {
            "name": "Ipv6Pool",
            "shape_name": "Ipv6PoolEc2Id",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Vpc": {
            "name": "Vpc",
            "shape_name": "Vpc",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpcEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DnsOptions": {
            "name": "DnsOptions",
            "shape_name": "DnsOptionsSpecification",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpAddressType": {
            "name": "IpAddressType",
            "shape_name": "IpAddressType",
            "type": "string"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PrivateDnsEnabled": {
            "name": "PrivateDnsEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RouteTableIds": {
            "name": "RouteTableIds",
            "shape_name": "VpcEndpointRouteTableIdList",
            "type": "list"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "VpcEndpointSecurityGroupIdList",
            "type": "list"
          },
          "ServiceName": {
            "name": "ServiceName",
            "shape_name": "String",
            "type": "string"
          },
          "SubnetConfigurations": {
            "name": "SubnetConfigurations",
            "shape_name": "SubnetConfigurationsList",
            "type": "list"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "VpcEndpointSubnetIdList",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcEndpointType": {
            "name": "VpcEndpointType",
            "shape_name": "VpcEndpointType",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId",
          "ServiceName"
        ]
      },
      "name": "CreateVpcEndpoint",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcEndpoint": {
            "name": "VpcEndpoint",
            "shape_name": "VpcEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpcEndpointConnectionNotification": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionEvents": {
            "name": "ConnectionEvents",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ConnectionNotificationArn": {
            "name": "ConnectionNotificationArn",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          },
          "VpcEndpointId": {
            "name": "VpcEndpointId",
            "shape_name": "VpcEndpointId",
            "type": "string"
          }
        },
        "required": [
          "ConnectionNotificationArn",
          "ConnectionEvents"
        ]
      },
      "name": "CreateVpcEndpointConnectionNotification",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionNotification": {
            "name": "ConnectionNotification",
            "shape_name": "ConnectionNotification",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpcEndpointServiceConfiguration": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AcceptanceRequired": {
            "name": "AcceptanceRequired",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GatewayLoadBalancerArns": {
            "name": "GatewayLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "NetworkLoadBalancerArns": {
            "name": "NetworkLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "PrivateDnsName": {
            "name": "PrivateDnsName",
            "shape_name": "String",
            "type": "string"
          },
          "SupportedIpAddressTypes": {
            "name": "SupportedIpAddressTypes",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "CreateVpcEndpointServiceConfiguration",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceConfiguration": {
            "name": "ServiceConfiguration",
            "shape_name": "ServiceConfiguration",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpcPeeringConnection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PeerOwnerId": {
            "name": "PeerOwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "PeerRegion": {
            "name": "PeerRegion",
            "shape_name": "String",
            "type": "string"
          },
          "PeerVpcId": {
            "name": "PeerVpcId",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "CreateVpcPeeringConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpcPeeringConnection": {
            "name": "VpcPeeringConnection",
            "shape_name": "VpcPeeringConnection",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpnConnection": {
      "input": {
        "markers": [],
        "members": {
          "CustomerGatewayId": {
            "name": "CustomerGatewayId",
            "shape_name": "CustomerGatewayId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "VpnConnectionOptionsSpecification",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "Type": {
            "name": "Type",
            "shape_name": "String",
            "type": "string"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          }
        },
        "required": [
          "CustomerGatewayId",
          "Type"
        ]
      },
      "name": "CreateVpnConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnection": {
            "name": "VpnConnection",
            "shape_name": "VpnConnection",
            "type": "structure"
          }
        }
      }
    },
    "CreateVpnConnectionRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          }
        },
        "required": [
          "DestinationCidrBlock",
          "VpnConnectionId"
        ]
      },
      "name": "CreateVpnConnectionRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "CreateVpnGateway": {
      "input": {
        "markers": [],
        "members": {
          "AmazonSideAsn": {
            "name": "AmazonSideAsn",
            "shape_name": "Long",
            "type": "long"
          },
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Type": {
            "name": "Type",
            "shape_name": "GatewayType",
            "type": "string"
          }
        },
        "required": [
          "Type"
        ]
      },
      "name": "CreateVpnGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnGateway": {
            "name": "VpnGateway",
            "shape_name": "VpnGateway",
            "type": "structure"
          }
        }
      }
    },
    "DeleteCarrierGateway": {
      "input": {
        "markers": [],
        "members": {
          "CarrierGatewayId": {
            "name": "CarrierGatewayId",
            "shape_name": "CarrierGatewayId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CarrierGatewayId"
        ]
      },
      "name": "DeleteCarrierGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CarrierGateway": {
            "name": "CarrierGateway",
            "shape_name": "CarrierGateway",
            "type": "structure"
          }
        }
      }
    },
    "DeleteClientVpnEndpoint": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "DeleteClientVpnEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnEndpointStatus",
            "type": "structure"
          }
        }
      }
    },
    "DeleteClientVpnRoute": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TargetVpcSubnetId": {
            "name": "TargetVpcSubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "DestinationCidrBlock"
        ]
      },
      "name": "DeleteClientVpnRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnRouteStatus",
            "type": "structure"
          }
        }
      }
    },
    "DeleteCoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "CoipPoolId": {
            "name": "CoipPoolId",
            "shape_name": "Ipv4PoolCoipId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Cidr",
          "CoipPoolId"
        ]
      },
      "name": "DeleteCoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CoipCidr": {
            "name": "CoipCidr",
            "shape_name": "CoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "DeleteCoipPool": {
      "input": {
        "markers": [],
        "members": {
          "CoipPoolId": {
            "name": "CoipPoolId",
            "shape_name": "Ipv4PoolCoipId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CoipPoolId"
        ]
      },
      "name": "DeleteCoipPool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CoipPool": {
            "name": "CoipPool",
            "shape_name": "CoipPool",
            "type": "structure"
          }
        }
      }
    },
    "DeleteCustomerGateway": {
      "input": {
        "markers": [],
        "members": {
          "CustomerGatewayId": {
            "name": "CustomerGatewayId",
            "shape_name": "CustomerGatewayId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CustomerGatewayId"
        ]
      },
      "name": "DeleteCustomerGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteDhcpOptions": {
      "input": {
        "markers": [],
        "members": {
          "DhcpOptionsId": {
            "name": "DhcpOptionsId",
            "shape_name": "DhcpOptionsId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "DhcpOptionsId"
        ]
      },
      "name": "DeleteDhcpOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteEgressOnlyInternetGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EgressOnlyInternetGatewayId": {
            "name": "EgressOnlyInternetGatewayId",
            "shape_name": "EgressOnlyInternetGatewayId",
            "type": "string"
          }
        },
        "required": [
          "EgressOnlyInternetGatewayId"
        ]
      },
      "name": "DeleteEgressOnlyInternetGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnCode": {
            "name": "ReturnCode",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeleteFleets": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FleetIds": {
            "name": "FleetIds",
            "shape_name": "FleetIdSet",
            "type": "list"
          },
          "TerminateInstances": {
            "name": "TerminateInstances",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "FleetIds",
          "TerminateInstances"
        ]
      },
      "name": "DeleteFleets",
      "output": {
        "lists": {
          "SuccessfulFleetDeletions": {
            "all_fields": [
              "CurrentFleetState",
              "FleetId",
              "PreviousFleetState"
            ],
            "arn_fields": [],
            "id_fields": [
              "FleetId"
            ],
            "name_fields": []
          },
          "UnsuccessfulFleetDeletions": {
            "all_fields": [
              "Error",
              "FleetId"
            ],
            "arn_fields": [],
            "id_fields": [
              "FleetId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SuccessfulFleetDeletions": {
            "name": "SuccessfulFleetDeletions",
            "shape_name": "DeleteFleetSuccessSet",
            "type": "list"
          },
          "UnsuccessfulFleetDeletions": {
            "name": "UnsuccessfulFleetDeletions",
            "shape_name": "DeleteFleetErrorSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteFlowLogs": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FlowLogIds": {
            "name": "FlowLogIds",
            "shape_name": "FlowLogIdList",
            "type": "list"
          }
        },
        "required": [
          "FlowLogIds"
        ]
      },
      "name": "DeleteFlowLogs",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteFpgaImage": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "FpgaImageId",
            "type": "string"
          }
        },
        "required": [
          "FpgaImageId"
        ]
      },
      "name": "DeleteFpgaImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeleteInstanceConnectEndpoint": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceConnectEndpointId": {
            "name": "InstanceConnectEndpointId",
            "shape_name": "InstanceConnectEndpointId",
            "type": "string"
          }
        },
        "required": [
          "InstanceConnectEndpointId"
        ]
      },
      "name": "DeleteInstanceConnectEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceConnectEndpoint": {
            "name": "InstanceConnectEndpoint",
            "shape_name": "Ec2InstanceConnectEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "DeleteInstanceEventWindow": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ForceDelete": {
            "name": "ForceDelete",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceEventWindowId": {
            "name": "InstanceEventWindowId",
            "shape_name": "InstanceEventWindowId",
            "type": "string"
          }
        },
        "required": [
          "InstanceEventWindowId"
        ]
      },
      "name": "DeleteInstanceEventWindow",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceEventWindowState": {
            "name": "InstanceEventWindowState",
            "shape_name": "InstanceEventWindowStateChange",
            "type": "structure"
          }
        }
      }
    },
    "DeleteInternetGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InternetGatewayId": {
            "name": "InternetGatewayId",
            "shape_name": "InternetGatewayId",
            "type": "string"
          }
        },
        "required": [
          "InternetGatewayId"
        ]
      },
      "name": "DeleteInternetGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteIpam": {
      "input": {
        "markers": [],
        "members": {
          "Cascade": {
            "name": "Cascade",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          }
        },
        "required": [
          "IpamId"
        ]
      },
      "name": "DeleteIpam",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Ipam": {
            "name": "Ipam",
            "shape_name": "Ipam",
            "type": "structure"
          }
        }
      }
    },
    "DeleteIpamExternalResourceVerificationToken": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamExternalResourceVerificationTokenId": {
            "name": "IpamExternalResourceVerificationTokenId",
            "shape_name": "IpamExternalResourceVerificationTokenId",
            "type": "string"
          }
        },
        "required": [
          "IpamExternalResourceVerificationTokenId"
        ]
      },
      "name": "DeleteIpamExternalResourceVerificationToken",
      "output": {
        "lists": {},
        "markers": [
          "IpamExternalResourceVerificationToken"
        ],
        "members": {
          "IpamExternalResourceVerificationToken": {
            "name": "IpamExternalResourceVerificationToken",
            "shape_name": "IpamExternalResourceVerificationToken",
            "type": "structure"
          }
        }
      }
    },
    "DeleteIpamPool": {
      "input": {
        "markers": [],
        "members": {
          "Cascade": {
            "name": "Cascade",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "DeleteIpamPool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPool": {
            "name": "IpamPool",
            "shape_name": "IpamPool",
            "type": "structure"
          }
        }
      }
    },
    "DeleteIpamResourceDiscovery": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          }
        },
        "required": [
          "IpamResourceDiscoveryId"
        ]
      },
      "name": "DeleteIpamResourceDiscovery",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceDiscovery": {
            "name": "IpamResourceDiscovery",
            "shape_name": "IpamResourceDiscovery",
            "type": "structure"
          }
        }
      }
    },
    "DeleteIpamScope": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamScopeId": {
            "name": "IpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          }
        },
        "required": [
          "IpamScopeId"
        ]
      },
      "name": "DeleteIpamScope",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamScope": {
            "name": "IpamScope",
            "shape_name": "IpamScope",
            "type": "structure"
          }
        }
      }
    },
    "DeleteKeyPair": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "KeyPairName",
            "type": "string"
          },
          "KeyPairId": {
            "name": "KeyPairId",
            "shape_name": "KeyPairId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DeleteKeyPair",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "KeyPairId": {
            "name": "KeyPairId",
            "shape_name": "String",
            "type": "string"
          },
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeleteLaunchTemplate": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchTemplateId": {
            "name": "LaunchTemplateId",
            "shape_name": "LaunchTemplateId",
            "type": "string"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DeleteLaunchTemplate",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "LaunchTemplate",
            "type": "structure"
          }
        }
      }
    },
    "DeleteLaunchTemplateVersions": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchTemplateId": {
            "name": "LaunchTemplateId",
            "shape_name": "LaunchTemplateId",
            "type": "string"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          },
          "Versions": {
            "name": "Versions",
            "shape_name": "VersionStringList",
            "type": "list"
          }
        },
        "required": [
          "Versions"
        ]
      },
      "name": "DeleteLaunchTemplateVersions",
      "output": {
        "lists": {
          "SuccessfullyDeletedLaunchTemplateVersions": {
            "all_fields": [
              "LaunchTemplateId",
              "LaunchTemplateName",
              "VersionNumber"
            ],
            "arn_fields": [],
            "id_fields": [
              "LaunchTemplateId"
            ],
            "name_fields": [
              "LaunchTemplateName"
            ]
          },
          "UnsuccessfullyDeletedLaunchTemplateVersions": {
            "all_fields": [
              "LaunchTemplateId",
              "LaunchTemplateName",
              "ResponseError",
              "VersionNumber"
            ],
            "arn_fields": [],
            "id_fields": [
              "LaunchTemplateId"
            ],
            "name_fields": [
              "LaunchTemplateName"
            ]
          }
        },
        "markers": [],
        "members": {
          "SuccessfullyDeletedLaunchTemplateVersions": {
            "name": "SuccessfullyDeletedLaunchTemplateVersions",
            "shape_name": "DeleteLaunchTemplateVersionsResponseSuccessSet",
            "type": "list"
          },
          "UnsuccessfullyDeletedLaunchTemplateVersions": {
            "name": "UnsuccessfullyDeletedLaunchTemplateVersions",
            "shape_name": "DeleteLaunchTemplateVersionsResponseErrorSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteLocalGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "DeleteLocalGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "LocalGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "DeleteLocalGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "DeleteLocalGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTable": {
            "name": "LocalGatewayRouteTable",
            "shape_name": "LocalGatewayRouteTable",
            "type": "structure"
          }
        }
      }
    },
    "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
            "shape_name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
        ]
      },
      "name": "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
            "name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "shape_name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DeleteLocalGatewayRouteTableVpcAssociation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableVpcAssociationId": {
            "name": "LocalGatewayRouteTableVpcAssociationId",
            "shape_name": "LocalGatewayRouteTableVpcAssociationId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableVpcAssociationId"
        ]
      },
      "name": "DeleteLocalGatewayRouteTableVpcAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LocalGatewayRouteTableVpcAssociation": {
            "name": "LocalGatewayRouteTableVpcAssociation",
            "shape_name": "LocalGatewayRouteTableVpcAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DeleteManagedPrefixList": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          }
        },
        "required": [
          "PrefixListId"
        ]
      },
      "name": "DeleteManagedPrefixList",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PrefixList": {
            "name": "PrefixList",
            "shape_name": "ManagedPrefixList",
            "type": "structure"
          }
        }
      }
    },
    "DeleteNatGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        },
        "required": [
          "NatGatewayId"
        ]
      },
      "name": "DeleteNatGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DeleteNetworkAcl": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkAclId": {
            "name": "NetworkAclId",
            "shape_name": "NetworkAclId",
            "type": "string"
          }
        },
        "required": [
          "NetworkAclId"
        ]
      },
      "name": "DeleteNetworkAcl",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteNetworkAclEntry": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Egress": {
            "name": "Egress",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkAclId": {
            "name": "NetworkAclId",
            "shape_name": "NetworkAclId",
            "type": "string"
          },
          "RuleNumber": {
            "name": "RuleNumber",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "Egress",
          "NetworkAclId",
          "RuleNumber"
        ]
      },
      "name": "DeleteNetworkAclEntry",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteNetworkInsightsAccessScope": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsAccessScopeId": {
            "name": "NetworkInsightsAccessScopeId",
            "shape_name": "NetworkInsightsAccessScopeId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsAccessScopeId"
        ]
      },
      "name": "DeleteNetworkInsightsAccessScope",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAccessScopeId": {
            "name": "NetworkInsightsAccessScopeId",
            "shape_name": "NetworkInsightsAccessScopeId",
            "type": "string"
          }
        }
      }
    },
    "DeleteNetworkInsightsAccessScopeAnalysis": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "name": "NetworkInsightsAccessScopeAnalysisId",
            "shape_name": "NetworkInsightsAccessScopeAnalysisId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsAccessScopeAnalysisId"
        ]
      },
      "name": "DeleteNetworkInsightsAccessScopeAnalysis",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAccessScopeAnalysisId": {
            "name": "NetworkInsightsAccessScopeAnalysisId",
            "shape_name": "NetworkInsightsAccessScopeAnalysisId",
            "type": "string"
          }
        }
      }
    },
    "DeleteNetworkInsightsAnalysis": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsAnalysisId": {
            "name": "NetworkInsightsAnalysisId",
            "shape_name": "NetworkInsightsAnalysisId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsAnalysisId"
        ]
      },
      "name": "DeleteNetworkInsightsAnalysis",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAnalysisId": {
            "name": "NetworkInsightsAnalysisId",
            "shape_name": "NetworkInsightsAnalysisId",
            "type": "string"
          }
        }
      }
    },
    "DeleteNetworkInsightsPath": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsPathId": {
            "name": "NetworkInsightsPathId",
            "shape_name": "NetworkInsightsPathId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsPathId"
        ]
      },
      "name": "DeleteNetworkInsightsPath",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsPathId": {
            "name": "NetworkInsightsPathId",
            "shape_name": "NetworkInsightsPathId",
            "type": "string"
          }
        }
      }
    },
    "DeleteNetworkInterface": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "DeleteNetworkInterface",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteNetworkInterfacePermission": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Force": {
            "name": "Force",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfacePermissionId": {
            "name": "NetworkInterfacePermissionId",
            "shape_name": "NetworkInterfacePermissionId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfacePermissionId"
        ]
      },
      "name": "DeleteNetworkInterfacePermission",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeletePlacementGroup": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "PlacementGroupName",
            "type": "string"
          }
        },
        "required": [
          "GroupName"
        ]
      },
      "name": "DeletePlacementGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeletePublicIpv4Pool": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        },
        "required": [
          "PoolId"
        ]
      },
      "name": "DeletePublicIpv4Pool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeleteQueuedReservedInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ReservedInstancesIds": {
            "name": "ReservedInstancesIds",
            "shape_name": "DeleteQueuedReservedInstancesIdList",
            "type": "list"
          }
        },
        "required": [
          "ReservedInstancesIds"
        ]
      },
      "name": "DeleteQueuedReservedInstances",
      "output": {
        "lists": {
          "FailedQueuedPurchaseDeletions": {
            "all_fields": [
              "Error",
              "ReservedInstancesId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId"
            ],
            "name_fields": []
          },
          "SuccessfulQueuedPurchaseDeletions": {
            "all_fields": [
              "ReservedInstancesId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "FailedQueuedPurchaseDeletions": {
            "name": "FailedQueuedPurchaseDeletions",
            "shape_name": "FailedQueuedPurchaseDeletionSet",
            "type": "list"
          },
          "SuccessfulQueuedPurchaseDeletions": {
            "name": "SuccessfulQueuedPurchaseDeletions",
            "shape_name": "SuccessfulQueuedPurchaseDeletionSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationIpv6CidrBlock": {
            "name": "DestinationIpv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          }
        },
        "required": [
          "RouteTableId"
        ]
      },
      "name": "DeleteRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          }
        },
        "required": [
          "RouteTableId"
        ]
      },
      "name": "DeleteRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteSecurityGroup": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "SecurityGroupName",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DeleteSecurityGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteSnapshot": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "DeleteSnapshot",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteSpotDatafeedSubscription": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DeleteSpotDatafeedSubscription",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteSubnet": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "DeleteSubnet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteSubnetCidrReservation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetCidrReservationId": {
            "name": "SubnetCidrReservationId",
            "shape_name": "SubnetCidrReservationId",
            "type": "string"
          }
        },
        "required": [
          "SubnetCidrReservationId"
        ]
      },
      "name": "DeleteSubnetCidrReservation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "DeletedSubnetCidrReservation": {
            "name": "DeletedSubnetCidrReservation",
            "shape_name": "SubnetCidrReservation",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTags": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Resources": {
            "name": "Resources",
            "shape_name": "ResourceIdList",
            "type": "list"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        },
        "required": [
          "Resources"
        ]
      },
      "name": "DeleteTags",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteTrafficMirrorFilter": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorFilterId"
        ]
      },
      "name": "DeleteTrafficMirrorFilter",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DeleteTrafficMirrorFilterRule": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TrafficMirrorFilterRuleId": {
            "name": "TrafficMirrorFilterRuleId",
            "shape_name": "TrafficMirrorFilterRuleIdWithResolver",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorFilterRuleId"
        ]
      },
      "name": "DeleteTrafficMirrorFilterRule",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorFilterRuleId": {
            "name": "TrafficMirrorFilterRuleId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DeleteTrafficMirrorSession": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TrafficMirrorSessionId": {
            "name": "TrafficMirrorSessionId",
            "shape_name": "TrafficMirrorSessionId",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorSessionId"
        ]
      },
      "name": "DeleteTrafficMirrorSession",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorSessionId": {
            "name": "TrafficMirrorSessionId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DeleteTrafficMirrorTarget": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TrafficMirrorTargetId": {
            "name": "TrafficMirrorTargetId",
            "shape_name": "TrafficMirrorTargetId",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorTargetId"
        ]
      },
      "name": "DeleteTrafficMirrorTarget",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorTargetId": {
            "name": "TrafficMirrorTargetId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DeleteTransitGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId"
        ]
      },
      "name": "DeleteTransitGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGateway": {
            "name": "TransitGateway",
            "shape_name": "TransitGateway",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayConnect": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "DeleteTransitGatewayConnect",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayConnect": {
            "name": "TransitGatewayConnect",
            "shape_name": "TransitGatewayConnect",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayConnectPeer": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayConnectPeerId": {
            "name": "TransitGatewayConnectPeerId",
            "shape_name": "TransitGatewayConnectPeerId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayConnectPeerId"
        ]
      },
      "name": "DeleteTransitGatewayConnectPeer",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayConnectPeer": {
            "name": "TransitGatewayConnectPeer",
            "shape_name": "TransitGatewayConnectPeer",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayMulticastDomain": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId"
        ]
      },
      "name": "DeleteTransitGatewayMulticastDomain",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayMulticastDomain": {
            "name": "TransitGatewayMulticastDomain",
            "shape_name": "TransitGatewayMulticastDomain",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayPeeringAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "DeleteTransitGatewayPeeringAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPeeringAttachment": {
            "name": "TransitGatewayPeeringAttachment",
            "shape_name": "TransitGatewayPeeringAttachment",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayPolicyTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayPolicyTableId": {
            "name": "TransitGatewayPolicyTableId",
            "shape_name": "TransitGatewayPolicyTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayPolicyTableId"
        ]
      },
      "name": "DeleteTransitGatewayPolicyTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPolicyTable": {
            "name": "TransitGatewayPolicyTable",
            "shape_name": "TransitGatewayPolicyTable",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayPrefixListReference": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "PrefixListId"
        ]
      },
      "name": "DeleteTransitGatewayPrefixListReference",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPrefixListReference": {
            "name": "TransitGatewayPrefixListReference",
            "shape_name": "TransitGatewayPrefixListReference",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "DestinationCidrBlock"
        ]
      },
      "name": "DeleteTransitGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "TransitGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "DeleteTransitGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayRouteTable": {
            "name": "TransitGatewayRouteTable",
            "shape_name": "TransitGatewayRouteTable",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayRouteTableAnnouncement": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "name": "TransitGatewayRouteTableAnnouncementId",
            "shape_name": "TransitGatewayRouteTableAnnouncementId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableAnnouncementId"
        ]
      },
      "name": "DeleteTransitGatewayRouteTableAnnouncement",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayRouteTableAnnouncement": {
            "name": "TransitGatewayRouteTableAnnouncement",
            "shape_name": "TransitGatewayRouteTableAnnouncement",
            "type": "structure"
          }
        }
      }
    },
    "DeleteTransitGatewayVpcAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "DeleteTransitGatewayVpcAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayVpcAttachment": {
            "name": "TransitGatewayVpcAttachment",
            "shape_name": "TransitGatewayVpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "DeleteVerifiedAccessEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessEndpointId": {
            "name": "VerifiedAccessEndpointId",
            "shape_name": "VerifiedAccessEndpointId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessEndpointId"
        ]
      },
      "name": "DeleteVerifiedAccessEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessEndpoint": {
            "name": "VerifiedAccessEndpoint",
            "shape_name": "VerifiedAccessEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "DeleteVerifiedAccessGroup": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessGroupId"
        ]
      },
      "name": "DeleteVerifiedAccessGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessGroup": {
            "name": "VerifiedAccessGroup",
            "shape_name": "VerifiedAccessGroup",
            "type": "structure"
          }
        }
      }
    },
    "DeleteVerifiedAccessInstance": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId"
        ]
      },
      "name": "DeleteVerifiedAccessInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessInstance": {
            "name": "VerifiedAccessInstance",
            "shape_name": "VerifiedAccessInstance",
            "type": "structure"
          }
        }
      }
    },
    "DeleteVerifiedAccessTrustProvider": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessTrustProviderId": {
            "name": "VerifiedAccessTrustProviderId",
            "shape_name": "VerifiedAccessTrustProviderId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessTrustProviderId"
        ]
      },
      "name": "DeleteVerifiedAccessTrustProvider",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessTrustProvider": {
            "name": "VerifiedAccessTrustProvider",
            "shape_name": "VerifiedAccessTrustProvider",
            "type": "structure"
          }
        }
      }
    },
    "DeleteVolume": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "DeleteVolume",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteVpc": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "DeleteVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteVpcEndpointConnectionNotifications": {
      "input": {
        "markers": [],
        "members": {
          "ConnectionNotificationIds": {
            "name": "ConnectionNotificationIds",
            "shape_name": "ConnectionNotificationIdsList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ConnectionNotificationIds"
        ]
      },
      "name": "DeleteVpcEndpointConnectionNotifications",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteVpcEndpointServiceConfigurations": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ServiceIds": {
            "name": "ServiceIds",
            "shape_name": "VpcEndpointServiceIdList",
            "type": "list"
          }
        },
        "required": [
          "ServiceIds"
        ]
      },
      "name": "DeleteVpcEndpointServiceConfigurations",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteVpcEndpoints": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcEndpointIds": {
            "name": "VpcEndpointIds",
            "shape_name": "VpcEndpointIdList",
            "type": "list"
          }
        },
        "required": [
          "VpcEndpointIds"
        ]
      },
      "name": "DeleteVpcEndpoints",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "DeleteVpcPeeringConnection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpcPeeringConnectionId"
        ]
      },
      "name": "DeleteVpcPeeringConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DeleteVpnConnection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId"
        ]
      },
      "name": "DeleteVpnConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteVpnConnectionRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          }
        },
        "required": [
          "DestinationCidrBlock",
          "VpnConnectionId"
        ]
      },
      "name": "DeleteVpnConnectionRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeleteVpnGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          }
        },
        "required": [
          "VpnGatewayId"
        ]
      },
      "name": "DeleteVpnGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeprovisionByoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Cidr"
        ]
      },
      "name": "DeprovisionByoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ByoipCidr": {
            "name": "ByoipCidr",
            "shape_name": "ByoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "DeprovisionIpamByoasn": {
      "input": {
        "markers": [],
        "members": {
          "Asn": {
            "name": "Asn",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          }
        },
        "required": [
          "IpamId",
          "Asn"
        ]
      },
      "name": "DeprovisionIpamByoasn",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Byoasn": {
            "name": "Byoasn",
            "shape_name": "Byoasn",
            "type": "structure"
          }
        }
      }
    },
    "DeprovisionIpamPoolCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "DeprovisionIpamPoolCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPoolCidr": {
            "name": "IpamPoolCidr",
            "shape_name": "IpamPoolCidr",
            "type": "structure"
          }
        }
      }
    },
    "DeprovisionPublicIpv4PoolCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        },
        "required": [
          "PoolId",
          "Cidr"
        ]
      },
      "name": "DeprovisionPublicIpv4PoolCidr",
      "output": {
        "lists": {
          "DeprovisionedAddresses": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "DeprovisionedAddresses": {
            "name": "DeprovisionedAddresses",
            "shape_name": "DeprovisionedAddressSet",
            "type": "list"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        }
      }
    },
    "DeregisterImage": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "DeregisterImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DeregisterInstanceEventNotificationAttributes": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceTagAttribute": {
            "name": "InstanceTagAttribute",
            "shape_name": "DeregisterInstanceTagAttributeRequest",
            "type": "structure"
          }
        },
        "required": [
          "InstanceTagAttribute"
        ]
      },
      "name": "DeregisterInstanceEventNotificationAttributes",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceTagAttribute": {
            "name": "InstanceTagAttribute",
            "shape_name": "InstanceTagNotificationAttribute",
            "type": "structure"
          }
        }
      }
    },
    "DeregisterTransitGatewayMulticastGroupMembers": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupIpAddress": {
            "name": "GroupIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkInterfaceIds": {
            "name": "NetworkInterfaceIds",
            "shape_name": "TransitGatewayNetworkInterfaceIdList",
            "type": "list"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DeregisterTransitGatewayMulticastGroupMembers",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "DeregisteredMulticastGroupMembers": {
            "name": "DeregisteredMulticastGroupMembers",
            "shape_name": "TransitGatewayMulticastDeregisteredGroupMembers",
            "type": "structure"
          }
        }
      }
    },
    "DeregisterTransitGatewayMulticastGroupSources": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupIpAddress": {
            "name": "GroupIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkInterfaceIds": {
            "name": "NetworkInterfaceIds",
            "shape_name": "TransitGatewayNetworkInterfaceIdList",
            "type": "list"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DeregisterTransitGatewayMulticastGroupSources",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "DeregisteredMulticastGroupSources": {
            "name": "DeregisteredMulticastGroupSources",
            "shape_name": "TransitGatewayMulticastDeregisteredGroupSources",
            "type": "structure"
          }
        }
      }
    },
    "DescribeAccountAttributes": {
      "input": {
        "markers": [],
        "members": {
          "AttributeNames": {
            "name": "AttributeNames",
            "shape_name": "AccountAttributeNameStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DescribeAccountAttributes",
      "output": {
        "lists": {
          "AccountAttributes": {
            "all_fields": [
              "AttributeName",
              "AttributeValues"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": [
              "AttributeName"
            ]
          }
        },
        "markers": [],
        "members": {
          "AccountAttributes": {
            "name": "AccountAttributes",
            "shape_name": "AccountAttributeList",
            "type": "list"
          }
        }
      }
    },
    "DescribeAddressTransfers": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AllocationIds": {
            "name": "AllocationIds",
            "shape_name": "AllocationIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeAddressTransfersMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeAddressTransfers",
      "output": {
        "lists": {
          "AddressTransfers": {
            "all_fields": [
              "AddressTransferStatus",
              "AllocationId",
              "PublicIp",
              "TransferAccountId",
              "TransferOfferAcceptedTimestamp",
              "TransferOfferExpirationTimestamp"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "TransferAccountId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "AddressTransfers": {
            "name": "AddressTransfers",
            "shape_name": "AddressTransferList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeAddresses": {
      "input": {
        "markers": [],
        "members": {
          "AllocationIds": {
            "name": "AllocationIds",
            "shape_name": "AllocationIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "PublicIps": {
            "name": "PublicIps",
            "shape_name": "PublicIpStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeAddresses",
      "output": {
        "lists": {
          "Addresses": {
            "all_fields": [
              "AllocationId",
              "AssociationId",
              "CarrierIp",
              "CustomerOwnedIp",
              "CustomerOwnedIpv4Pool",
              "Domain",
              "InstanceId",
              "NetworkBorderGroup",
              "NetworkInterfaceId",
              "NetworkInterfaceOwnerId",
              "PrivateIpAddress",
              "PublicIp",
              "PublicIpv4Pool",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AssociationId",
              "InstanceId",
              "NetworkInterfaceId",
              "NetworkInterfaceOwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Addresses": {
            "name": "Addresses",
            "shape_name": "AddressList",
            "type": "list"
          }
        }
      }
    },
    "DescribeAddressesAttribute": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AllocationIds": {
            "name": "AllocationIds",
            "shape_name": "AllocationIds",
            "type": "list"
          },
          "Attribute": {
            "name": "Attribute",
            "shape_name": "AddressAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "AddressMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeAddressesAttribute",
      "output": {
        "lists": {
          "Addresses": {
            "all_fields": [
              "AllocationId",
              "PtrRecord",
              "PtrRecordUpdate",
              "PublicIp"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Addresses": {
            "name": "Addresses",
            "shape_name": "AddressSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeAggregateIdFormat": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DescribeAggregateIdFormat",
      "output": {
        "lists": {
          "Statuses": {
            "all_fields": [
              "Deadline",
              "Resource",
              "UseLongIds"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Statuses": {
            "name": "Statuses",
            "shape_name": "IdFormatList",
            "type": "list"
          },
          "UseLongIdsAggregated": {
            "name": "UseLongIdsAggregated",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DescribeAvailabilityZones": {
      "input": {
        "markers": [],
        "members": {
          "AllAvailabilityZones": {
            "name": "AllAvailabilityZones",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ZoneIds": {
            "name": "ZoneIds",
            "shape_name": "ZoneIdStringList",
            "type": "list"
          },
          "ZoneNames": {
            "name": "ZoneNames",
            "shape_name": "ZoneNameStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeAvailabilityZones",
      "output": {
        "lists": {
          "AvailabilityZones": {
            "all_fields": [
              "GroupName",
              "Messages",
              "NetworkBorderGroup",
              "OptInStatus",
              "ParentZoneId",
              "ParentZoneName",
              "RegionName",
              "State",
              "ZoneId",
              "ZoneName",
              "ZoneType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ParentZoneId",
              "ZoneId"
            ],
            "name_fields": [
              "GroupName",
              "ParentZoneName",
              "RegionName",
              "ZoneName"
            ]
          }
        },
        "markers": [],
        "members": {
          "AvailabilityZones": {
            "name": "AvailabilityZones",
            "shape_name": "AvailabilityZoneList",
            "type": "list"
          }
        }
      }
    },
    "DescribeAwsNetworkPerformanceMetricSubscriptions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "MaxResultsParam",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeAwsNetworkPerformanceMetricSubscriptions",
      "output": {
        "lists": {
          "Subscriptions": {
            "all_fields": [
              "Destination",
              "Metric",
              "Period",
              "Source",
              "Statistic"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Subscriptions": {
            "name": "Subscriptions",
            "shape_name": "SubscriptionList",
            "type": "list"
          }
        }
      }
    },
    "DescribeBundleTasks": {
      "input": {
        "markers": [],
        "members": {
          "BundleIds": {
            "name": "BundleIds",
            "shape_name": "BundleIdStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeBundleTasks",
      "output": {
        "lists": {
          "BundleTasks": {
            "all_fields": [
              "BundleId",
              "BundleTaskError",
              "InstanceId",
              "Progress",
              "StartTime",
              "State",
              "Storage",
              "UpdateTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "BundleId",
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "BundleTasks": {
            "name": "BundleTasks",
            "shape_name": "BundleTaskList",
            "type": "list"
          }
        }
      }
    },
    "DescribeByoipCidrs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeByoipCidrsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "MaxResults"
        ]
      },
      "name": "DescribeByoipCidrs",
      "output": {
        "lists": {
          "ByoipCidrs": {
            "all_fields": [
              "AsnAssociations",
              "Cidr",
              "Description",
              "NetworkBorderGroup",
              "State",
              "StatusMessage"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ByoipCidrs": {
            "name": "ByoipCidrs",
            "shape_name": "ByoipCidrSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeCapacityBlockOfferings": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityDurationHours": {
            "name": "CapacityDurationHours",
            "shape_name": "Integer",
            "type": "integer"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndDateRange": {
            "name": "EndDateRange",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "String",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeCapacityBlockOfferingsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StartDateRange": {
            "name": "StartDateRange",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        },
        "required": [
          "InstanceType",
          "InstanceCount",
          "CapacityDurationHours"
        ]
      },
      "name": "DescribeCapacityBlockOfferings",
      "output": {
        "lists": {
          "CapacityBlockOfferings": {
            "all_fields": [
              "AvailabilityZone",
              "CapacityBlockDurationHours",
              "CapacityBlockOfferingId",
              "CurrencyCode",
              "EndDate",
              "InstanceCount",
              "InstanceType",
              "StartDate",
              "Tenancy",
              "UpfrontFee"
            ],
            "arn_fields": [],
            "id_fields": [
              "CapacityBlockOfferingId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityBlockOfferings": {
            "name": "CapacityBlockOfferings",
            "shape_name": "CapacityBlockOfferingSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeCapacityReservationFleets": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationFleetIds": {
            "name": "CapacityReservationFleetIds",
            "shape_name": "CapacityReservationFleetIdSet",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeCapacityReservationFleetsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeCapacityReservationFleets",
      "output": {
        "lists": {
          "CapacityReservationFleets": {
            "all_fields": [
              "AllocationStrategy",
              "CapacityReservationFleetArn",
              "CapacityReservationFleetId",
              "CreateTime",
              "EndDate",
              "InstanceMatchCriteria",
              "InstanceTypeSpecifications",
              "State",
              "Tags",
              "Tenancy",
              "TotalFulfilledCapacity",
              "TotalTargetCapacity"
            ],
            "arn_fields": [
              "CapacityReservationFleetArn"
            ],
            "id_fields": [
              "CapacityReservationFleetId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationFleets": {
            "name": "CapacityReservationFleets",
            "shape_name": "CapacityReservationFleetSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeCapacityReservations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationIds": {
            "name": "CapacityReservationIds",
            "shape_name": "CapacityReservationIdSet",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeCapacityReservationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeCapacityReservations",
      "output": {
        "lists": {
          "CapacityReservations": {
            "all_fields": [
              "AvailabilityZone",
              "AvailabilityZoneId",
              "AvailableInstanceCount",
              "CapacityAllocations",
              "CapacityReservationArn",
              "CapacityReservationFleetId",
              "CapacityReservationId",
              "CreateDate",
              "EbsOptimized",
              "EndDate",
              "EndDateType",
              "EphemeralStorage",
              "InstanceMatchCriteria",
              "InstancePlatform",
              "InstanceType",
              "OutpostArn",
              "OwnerId",
              "PlacementGroupArn",
              "ReservationType",
              "StartDate",
              "State",
              "Tags",
              "Tenancy",
              "TotalInstanceCount"
            ],
            "arn_fields": [
              "CapacityReservationArn",
              "OutpostArn",
              "PlacementGroupArn"
            ],
            "id_fields": [
              "AvailabilityZoneId",
              "CapacityReservationFleetId",
              "CapacityReservationId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservations": {
            "name": "CapacityReservations",
            "shape_name": "CapacityReservationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeCarrierGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CarrierGatewayIds": {
            "name": "CarrierGatewayIds",
            "shape_name": "CarrierGatewayIdSet",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "CarrierGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeCarrierGateways",
      "output": {
        "lists": {
          "CarrierGateways": {
            "all_fields": [
              "CarrierGatewayId",
              "OwnerId",
              "State",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "CarrierGatewayId",
              "OwnerId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CarrierGateways": {
            "name": "CarrierGateways",
            "shape_name": "CarrierGatewaySet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeClassicLinkInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClassicLinkInstancesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeClassicLinkInstances",
      "output": {
        "lists": {
          "Instances": {
            "all_fields": [
              "Groups",
              "InstanceId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Instances": {
            "name": "Instances",
            "shape_name": "ClassicLinkInstanceList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeClientVpnAuthorizationRules": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClientVpnAuthorizationRulesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "DescribeClientVpnAuthorizationRules",
      "output": {
        "lists": {
          "AuthorizationRules": {
            "all_fields": [
              "AccessAll",
              "ClientVpnEndpointId",
              "Description",
              "DestinationCidr",
              "GroupId",
              "Status"
            ],
            "arn_fields": [],
            "id_fields": [
              "ClientVpnEndpointId",
              "GroupId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "AuthorizationRules": {
            "name": "AuthorizationRules",
            "shape_name": "AuthorizationRuleSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeClientVpnConnections": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClientVpnConnectionsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "DescribeClientVpnConnections",
      "output": {
        "lists": {
          "Connections": {
            "all_fields": [
              "ClientIp",
              "ClientVpnEndpointId",
              "CommonName",
              "ConnectionEndTime",
              "ConnectionEstablishedTime",
              "ConnectionId",
              "EgressBytes",
              "EgressPackets",
              "IngressBytes",
              "IngressPackets",
              "PostureComplianceStatuses",
              "Status",
              "Timestamp",
              "Username"
            ],
            "arn_fields": [],
            "id_fields": [
              "ClientVpnEndpointId",
              "ConnectionId"
            ],
            "name_fields": [
              "CommonName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Connections": {
            "name": "Connections",
            "shape_name": "ClientVpnConnectionSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeClientVpnEndpoints": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnEndpointIds": {
            "name": "ClientVpnEndpointIds",
            "shape_name": "ClientVpnEndpointIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClientVpnEndpointMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeClientVpnEndpoints",
      "output": {
        "lists": {
          "ClientVpnEndpoints": {
            "all_fields": [
              "AssociatedTargetNetworks",
              "AuthenticationOptions",
              "ClientCidrBlock",
              "ClientConnectOptions",
              "ClientLoginBannerOptions",
              "ClientVpnEndpointId",
              "ConnectionLogOptions",
              "CreationTime",
              "DeletionTime",
              "Description",
              "DnsName",
              "DnsServers",
              "SecurityGroupIds",
              "SelfServicePortalUrl",
              "ServerCertificateArn",
              "SessionTimeoutHours",
              "SplitTunnel",
              "Status",
              "Tags",
              "TransportProtocol",
              "VpcId",
              "VpnPort",
              "VpnProtocol"
            ],
            "arn_fields": [
              "ServerCertificateArn"
            ],
            "id_fields": [
              "ClientVpnEndpointId",
              "VpcId"
            ],
            "name_fields": [
              "DnsName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnEndpoints": {
            "name": "ClientVpnEndpoints",
            "shape_name": "EndpointSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeClientVpnRoutes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClientVpnRoutesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "DescribeClientVpnRoutes",
      "output": {
        "lists": {
          "Routes": {
            "all_fields": [
              "ClientVpnEndpointId",
              "Description",
              "DestinationCidr",
              "Origin",
              "Status",
              "TargetSubnet",
              "Type"
            ],
            "arn_fields": [],
            "id_fields": [
              "ClientVpnEndpointId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "Routes": {
            "name": "Routes",
            "shape_name": "ClientVpnRouteSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeClientVpnTargetNetworks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AssociationIds": {
            "name": "AssociationIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeClientVpnTargetNetworksMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "DescribeClientVpnTargetNetworks",
      "output": {
        "lists": {
          "ClientVpnTargetNetworks": {
            "all_fields": [
              "AssociationId",
              "ClientVpnEndpointId",
              "SecurityGroups",
              "Status",
              "TargetNetworkId",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AssociationId",
              "ClientVpnEndpointId",
              "TargetNetworkId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ClientVpnTargetNetworks": {
            "name": "ClientVpnTargetNetworks",
            "shape_name": "TargetNetworkSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeCoipPools": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "CoipPoolMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PoolIds": {
            "name": "PoolIds",
            "shape_name": "CoipPoolIdSet",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeCoipPools",
      "output": {
        "lists": {
          "CoipPools": {
            "all_fields": [
              "LocalGatewayRouteTableId",
              "PoolArn",
              "PoolCidrs",
              "PoolId",
              "Tags"
            ],
            "arn_fields": [
              "PoolArn"
            ],
            "id_fields": [
              "LocalGatewayRouteTableId",
              "PoolId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CoipPools": {
            "name": "CoipPools",
            "shape_name": "CoipPoolSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeConversionTasks": {
      "input": {
        "markers": [],
        "members": {
          "ConversionTaskIds": {
            "name": "ConversionTaskIds",
            "shape_name": "ConversionIdStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DescribeConversionTasks",
      "output": {
        "lists": {
          "ConversionTasks": {
            "all_fields": [
              "ConversionTaskId",
              "ExpirationTime",
              "ImportInstance",
              "ImportVolume",
              "State",
              "StatusMessage",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ConversionTaskId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ConversionTasks": {
            "name": "ConversionTasks",
            "shape_name": "DescribeConversionTaskList",
            "type": "list"
          }
        }
      }
    },
    "DescribeCustomerGateways": {
      "input": {
        "markers": [],
        "members": {
          "CustomerGatewayIds": {
            "name": "CustomerGatewayIds",
            "shape_name": "CustomerGatewayIdStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeCustomerGateways",
      "output": {
        "lists": {
          "CustomerGateways": {
            "all_fields": [
              "BgpAsn",
              "BgpAsnExtended",
              "CertificateArn",
              "CustomerGatewayId",
              "DeviceName",
              "IpAddress",
              "State",
              "Tags",
              "Type"
            ],
            "arn_fields": [
              "CertificateArn"
            ],
            "id_fields": [
              "CustomerGatewayId"
            ],
            "name_fields": [
              "DeviceName"
            ]
          }
        },
        "markers": [],
        "members": {
          "CustomerGateways": {
            "name": "CustomerGateways",
            "shape_name": "CustomerGatewayList",
            "type": "list"
          }
        }
      }
    },
    "DescribeDhcpOptions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DhcpOptionsIds": {
            "name": "DhcpOptionsIds",
            "shape_name": "DhcpOptionsIdStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeDhcpOptionsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeDhcpOptions",
      "output": {
        "lists": {
          "DhcpOptions": {
            "all_fields": [
              "DhcpConfigurations",
              "DhcpOptionsId",
              "OwnerId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "DhcpOptionsId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "DhcpOptions": {
            "name": "DhcpOptions",
            "shape_name": "DhcpOptionsList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeEgressOnlyInternetGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EgressOnlyInternetGatewayIds": {
            "name": "EgressOnlyInternetGatewayIds",
            "shape_name": "EgressOnlyInternetGatewayIdList",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeEgressOnlyInternetGatewaysMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeEgressOnlyInternetGateways",
      "output": {
        "lists": {
          "EgressOnlyInternetGateways": {
            "all_fields": [
              "Attachments",
              "EgressOnlyInternetGatewayId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "EgressOnlyInternetGatewayId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "EgressOnlyInternetGateways": {
            "name": "EgressOnlyInternetGateways",
            "shape_name": "EgressOnlyInternetGatewayList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeElasticGpus": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ElasticGpuIds": {
            "name": "ElasticGpuIds",
            "shape_name": "ElasticGpuIdSet",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeElasticGpusMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeElasticGpus",
      "output": {
        "lists": {
          "ElasticGpuSet": {
            "all_fields": [
              "AvailabilityZone",
              "ElasticGpuHealth",
              "ElasticGpuId",
              "ElasticGpuState",
              "ElasticGpuType",
              "InstanceId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ElasticGpuId",
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ElasticGpuSet": {
            "name": "ElasticGpuSet",
            "shape_name": "ElasticGpuSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeExportImageTasks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExportImageTaskIds": {
            "name": "ExportImageTaskIds",
            "shape_name": "ExportImageTaskIdList",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeExportImageTasksMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeExportImageTasks",
      "output": {
        "lists": {
          "ExportImageTasks": {
            "all_fields": [
              "Description",
              "ExportImageTaskId",
              "ImageId",
              "Progress",
              "S3ExportLocation",
              "Status",
              "StatusMessage",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ExportImageTaskId",
              "ImageId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ExportImageTasks": {
            "name": "ExportImageTasks",
            "shape_name": "ExportImageTaskList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeExportTasks": {
      "input": {
        "markers": [],
        "members": {
          "ExportTaskIds": {
            "name": "ExportTaskIds",
            "shape_name": "ExportTaskIdStringList",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeExportTasks",
      "output": {
        "lists": {
          "ExportTasks": {
            "all_fields": [
              "Description",
              "ExportTaskId",
              "ExportToS3Task",
              "InstanceExportDetails",
              "State",
              "StatusMessage",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ExportTaskId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ExportTasks": {
            "name": "ExportTasks",
            "shape_name": "ExportTaskList",
            "type": "list"
          }
        }
      }
    },
    "DescribeFastLaunchImages": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ImageIds": {
            "name": "ImageIds",
            "shape_name": "FastLaunchImageIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeFastLaunchImagesRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeFastLaunchImages",
      "output": {
        "lists": {
          "FastLaunchImages": {
            "all_fields": [
              "ImageId",
              "LaunchTemplate",
              "MaxParallelLaunches",
              "OwnerId",
              "ResourceType",
              "SnapshotConfiguration",
              "State",
              "StateTransitionReason",
              "StateTransitionTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImageId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "FastLaunchImages": {
            "name": "FastLaunchImages",
            "shape_name": "DescribeFastLaunchImagesSuccessSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeFastSnapshotRestores": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeFastSnapshotRestoresMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeFastSnapshotRestores",
      "output": {
        "lists": {
          "FastSnapshotRestores": {
            "all_fields": [
              "AvailabilityZone",
              "DisabledTime",
              "DisablingTime",
              "EnabledTime",
              "EnablingTime",
              "OptimizingTime",
              "OwnerAlias",
              "OwnerId",
              "SnapshotId",
              "State",
              "StateTransitionReason"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SnapshotId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "FastSnapshotRestores": {
            "name": "FastSnapshotRestores",
            "shape_name": "DescribeFastSnapshotRestoreSuccessSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeFleetHistory": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EventType": {
            "name": "EventType",
            "shape_name": "FleetEventType",
            "type": "string"
          },
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": [
          "FleetId",
          "StartTime"
        ]
      },
      "name": "DescribeFleetHistory",
      "output": {
        "lists": {
          "HistoryRecords": {
            "all_fields": [
              "EventInformation",
              "EventType",
              "Timestamp"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "HistoryRecords": {
            "name": "HistoryRecords",
            "shape_name": "HistoryRecordSet",
            "type": "list"
          },
          "LastEvaluatedTime": {
            "name": "LastEvaluatedTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "DescribeFleetInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "FleetId"
        ]
      },
      "name": "DescribeFleetInstances",
      "output": {
        "lists": {
          "ActiveInstances": {
            "all_fields": [
              "InstanceHealth",
              "InstanceId",
              "InstanceType",
              "SpotInstanceRequestId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "SpotInstanceRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ActiveInstances": {
            "name": "ActiveInstances",
            "shape_name": "ActiveInstanceSet",
            "type": "list"
          },
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeFleets": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "FleetIds": {
            "name": "FleetIds",
            "shape_name": "FleetIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeFleets",
      "output": {
        "lists": {
          "Fleets": {
            "all_fields": [
              "ActivityStatus",
              "ClientToken",
              "Context",
              "CreateTime",
              "Errors",
              "ExcessCapacityTerminationPolicy",
              "FleetId",
              "FleetState",
              "FulfilledCapacity",
              "FulfilledOnDemandCapacity",
              "Instances",
              "LaunchTemplateConfigs",
              "OnDemandOptions",
              "ReplaceUnhealthyInstances",
              "SpotOptions",
              "Tags",
              "TargetCapacitySpecification",
              "TerminateInstancesWithExpiration",
              "Type",
              "ValidFrom",
              "ValidUntil"
            ],
            "arn_fields": [],
            "id_fields": [
              "FleetId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Fleets": {
            "name": "Fleets",
            "shape_name": "FleetSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeFlowLogs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filter": {
            "name": "Filter",
            "shape_name": "FilterList",
            "type": "list"
          },
          "FlowLogIds": {
            "name": "FlowLogIds",
            "shape_name": "FlowLogIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeFlowLogs",
      "output": {
        "lists": {
          "FlowLogs": {
            "all_fields": [
              "CreationTime",
              "DeliverCrossAccountRole",
              "DeliverLogsErrorMessage",
              "DeliverLogsPermissionArn",
              "DeliverLogsStatus",
              "DestinationOptions",
              "FlowLogId",
              "FlowLogStatus",
              "LogDestination",
              "LogDestinationType",
              "LogFormat",
              "LogGroupName",
              "MaxAggregationInterval",
              "ResourceId",
              "Tags",
              "TrafficType"
            ],
            "arn_fields": [
              "DeliverLogsPermissionArn"
            ],
            "id_fields": [
              "FlowLogId",
              "ResourceId"
            ],
            "name_fields": [
              "LogGroupName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "FlowLogs": {
            "name": "FlowLogs",
            "shape_name": "FlowLogSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeFpgaImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "FpgaImageAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "FpgaImageId",
            "type": "string"
          }
        },
        "required": [
          "FpgaImageId",
          "Attribute"
        ]
      },
      "name": "DescribeFpgaImageAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "FpgaImageAttribute": {
            "name": "FpgaImageAttribute",
            "shape_name": "FpgaImageAttribute",
            "type": "structure"
          }
        }
      }
    },
    "DescribeFpgaImages": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "FpgaImageIds": {
            "name": "FpgaImageIds",
            "shape_name": "FpgaImageIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeFpgaImagesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "Owners": {
            "name": "Owners",
            "shape_name": "OwnerStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeFpgaImages",
      "output": {
        "lists": {
          "FpgaImages": {
            "all_fields": [
              "CreateTime",
              "DataRetentionSupport",
              "Description",
              "FpgaImageGlobalId",
              "FpgaImageId",
              "InstanceTypes",
              "Name",
              "OwnerAlias",
              "OwnerId",
              "PciId",
              "ProductCodes",
              "Public",
              "ShellVersion",
              "State",
              "Tags",
              "UpdateTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "FpgaImageGlobalId",
              "FpgaImageId",
              "OwnerId",
              "PciId"
            ],
            "name_fields": [
              "Name"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "FpgaImages": {
            "name": "FpgaImages",
            "shape_name": "FpgaImageList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeHostReservationOfferings": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filter": {
            "name": "Filter",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxDuration": {
            "name": "MaxDuration",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeHostReservationsMaxResults",
            "type": "integer"
          },
          "MinDuration": {
            "name": "MinDuration",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "OfferingId": {
            "name": "OfferingId",
            "shape_name": "OfferingId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeHostReservationOfferings",
      "output": {
        "lists": {
          "OfferingSet": {
            "all_fields": [
              "CurrencyCode",
              "Duration",
              "HourlyPrice",
              "InstanceFamily",
              "OfferingId",
              "PaymentOption",
              "UpfrontPrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "OfferingId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "OfferingSet": {
            "name": "OfferingSet",
            "shape_name": "HostOfferingSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeHostReservations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filter": {
            "name": "Filter",
            "shape_name": "FilterList",
            "type": "list"
          },
          "HostReservationIdSet": {
            "name": "HostReservationIdSet",
            "shape_name": "HostReservationIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeHostReservations",
      "output": {
        "lists": {
          "HostReservationSet": {
            "all_fields": [
              "Count",
              "CurrencyCode",
              "Duration",
              "End",
              "HostIdSet",
              "HostReservationId",
              "HourlyPrice",
              "InstanceFamily",
              "OfferingId",
              "PaymentOption",
              "Start",
              "State",
              "Tags",
              "UpfrontPrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "HostReservationId",
              "OfferingId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "HostReservationSet": {
            "name": "HostReservationSet",
            "shape_name": "HostReservationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeHosts": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filter": {
            "name": "Filter",
            "shape_name": "FilterList",
            "type": "list"
          },
          "HostIds": {
            "name": "HostIds",
            "shape_name": "RequestHostIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeHosts",
      "output": {
        "lists": {
          "Hosts": {
            "all_fields": [
              "AllocationTime",
              "AllowsMultipleInstanceTypes",
              "AssetId",
              "AutoPlacement",
              "AvailabilityZone",
              "AvailabilityZoneId",
              "AvailableCapacity",
              "ClientToken",
              "HostId",
              "HostMaintenance",
              "HostProperties",
              "HostRecovery",
              "HostReservationId",
              "Instances",
              "MemberOfServiceLinkedResourceGroup",
              "OutpostArn",
              "OwnerId",
              "ReleaseTime",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "AssetId",
              "AvailabilityZoneId",
              "HostId",
              "HostReservationId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Hosts": {
            "name": "Hosts",
            "shape_name": "HostList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeIamInstanceProfileAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AssociationIds": {
            "name": "AssociationIds",
            "shape_name": "AssociationIdList",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeIamInstanceProfileAssociationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIamInstanceProfileAssociations",
      "output": {
        "lists": {
          "IamInstanceProfileAssociations": {
            "all_fields": [
              "AssociationId",
              "IamInstanceProfile",
              "InstanceId",
              "State",
              "Timestamp"
            ],
            "arn_fields": [],
            "id_fields": [
              "AssociationId",
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IamInstanceProfileAssociations": {
            "name": "IamInstanceProfileAssociations",
            "shape_name": "IamInstanceProfileAssociationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIdFormat": {
      "input": {
        "markers": [],
        "members": {
          "Resource": {
            "name": "Resource",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIdFormat",
      "output": {
        "lists": {
          "Statuses": {
            "all_fields": [
              "Deadline",
              "Resource",
              "UseLongIds"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Statuses": {
            "name": "Statuses",
            "shape_name": "IdFormatList",
            "type": "list"
          }
        }
      }
    },
    "DescribeIdentityIdFormat": {
      "input": {
        "markers": [],
        "members": {
          "PrincipalArn": {
            "name": "PrincipalArn",
            "shape_name": "String",
            "type": "string"
          },
          "Resource": {
            "name": "Resource",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "PrincipalArn"
        ]
      },
      "name": "DescribeIdentityIdFormat",
      "output": {
        "lists": {
          "Statuses": {
            "all_fields": [
              "Deadline",
              "Resource",
              "UseLongIds"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Statuses": {
            "name": "Statuses",
            "shape_name": "IdFormatList",
            "type": "list"
          }
        }
      }
    },
    "DescribeImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "ImageAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "ImageId"
        ]
      },
      "name": "DescribeImageAttribute",
      "output": {
        "lists": {
          "BlockDeviceMappings": {
            "all_fields": [
              "DeviceName",
              "Ebs",
              "NoDevice",
              "VirtualName"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": [
              "DeviceName",
              "VirtualName"
            ]
          },
          "LaunchPermissions": {
            "all_fields": [
              "Group",
              "OrganizationArn",
              "OrganizationalUnitArn",
              "UserId"
            ],
            "arn_fields": [
              "OrganizationArn",
              "OrganizationalUnitArn"
            ],
            "id_fields": [
              "UserId"
            ],
            "name_fields": []
          },
          "ProductCodes": {
            "all_fields": [
              "ProductCodeId",
              "ProductCodeType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ProductCodeId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "BlockDeviceMappingList",
            "type": "list"
          },
          "BootMode": {
            "name": "BootMode",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "DeregistrationProtection": {
            "name": "DeregistrationProtection",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          },
          "ImdsSupport": {
            "name": "ImdsSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "KernelId": {
            "name": "KernelId",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "LastLaunchedTime": {
            "name": "LastLaunchedTime",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "LaunchPermissions": {
            "name": "LaunchPermissions",
            "shape_name": "LaunchPermissionList",
            "type": "list"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeList",
            "type": "list"
          },
          "RamdiskId": {
            "name": "RamdiskId",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "SriovNetSupport": {
            "name": "SriovNetSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "TpmSupport": {
            "name": "TpmSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "UefiData": {
            "name": "UefiData",
            "shape_name": "AttributeValue",
            "type": "structure"
          }
        }
      }
    },
    "DescribeImages": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExecutableUsers": {
            "name": "ExecutableUsers",
            "shape_name": "ExecutableByStringList",
            "type": "list"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ImageIds": {
            "name": "ImageIds",
            "shape_name": "ImageIdStringList",
            "type": "list"
          },
          "IncludeDeprecated": {
            "name": "IncludeDeprecated",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IncludeDisabled": {
            "name": "IncludeDisabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Owners": {
            "name": "Owners",
            "shape_name": "OwnerStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeImages",
      "output": {
        "lists": {
          "Images": {
            "all_fields": [
              "Architecture",
              "BlockDeviceMappings",
              "BootMode",
              "CreationDate",
              "DeprecationTime",
              "DeregistrationProtection",
              "Description",
              "EnaSupport",
              "Hypervisor",
              "ImageId",
              "ImageLocation",
              "ImageOwnerAlias",
              "ImageType",
              "ImdsSupport",
              "KernelId",
              "LastLaunchedTime",
              "Name",
              "OwnerId",
              "Platform",
              "PlatformDetails",
              "ProductCodes",
              "Public",
              "RamdiskId",
              "RootDeviceName",
              "RootDeviceType",
              "SourceInstanceId",
              "SriovNetSupport",
              "State",
              "StateReason",
              "Tags",
              "TpmSupport",
              "UsageOperation",
              "VirtualizationType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImageId",
              "KernelId",
              "OwnerId",
              "RamdiskId",
              "SourceInstanceId"
            ],
            "name_fields": [
              "Name",
              "RootDeviceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Images": {
            "name": "Images",
            "shape_name": "ImageList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeImportImageTasks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ImportTaskIds": {
            "name": "ImportTaskIds",
            "shape_name": "ImportTaskIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeImportImageTasks",
      "output": {
        "lists": {
          "ImportImageTasks": {
            "all_fields": [
              "Architecture",
              "BootMode",
              "Description",
              "Encrypted",
              "Hypervisor",
              "ImageId",
              "ImportTaskId",
              "KmsKeyId",
              "LicenseSpecifications",
              "LicenseType",
              "Platform",
              "Progress",
              "SnapshotDetails",
              "Status",
              "StatusMessage",
              "Tags",
              "UsageOperation"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImageId",
              "ImportTaskId",
              "KmsKeyId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ImportImageTasks": {
            "name": "ImportImageTasks",
            "shape_name": "ImportImageTaskList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeImportSnapshotTasks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ImportTaskIds": {
            "name": "ImportTaskIds",
            "shape_name": "ImportSnapshotTaskIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeImportSnapshotTasks",
      "output": {
        "lists": {
          "ImportSnapshotTasks": {
            "all_fields": [
              "Description",
              "ImportTaskId",
              "SnapshotTaskDetail",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImportTaskId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ImportSnapshotTasks": {
            "name": "ImportSnapshotTasks",
            "shape_name": "ImportSnapshotTaskList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "InstanceAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "InstanceId"
        ]
      },
      "name": "DescribeInstanceAttribute",
      "output": {
        "lists": {
          "BlockDeviceMappings": {
            "all_fields": [
              "DeviceName",
              "Ebs"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": [
              "DeviceName"
            ]
          },
          "Groups": {
            "all_fields": [
              "GroupId",
              "GroupName"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId"
            ],
            "name_fields": [
              "GroupName"
            ]
          },
          "ProductCodes": {
            "all_fields": [
              "ProductCodeId",
              "ProductCodeType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ProductCodeId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "InstanceBlockDeviceMappingList",
            "type": "list"
          },
          "DisableApiStop": {
            "name": "DisableApiStop",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "DisableApiTermination": {
            "name": "DisableApiTermination",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EbsOptimized": {
            "name": "EbsOptimized",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnaSupport": {
            "name": "EnaSupport",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnclaveOptions": {
            "name": "EnclaveOptions",
            "shape_name": "EnclaveOptions",
            "type": "structure"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "GroupIdentifierList",
            "type": "list"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceInitiatedShutdownBehavior": {
            "name": "InstanceInitiatedShutdownBehavior",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "KernelId": {
            "name": "KernelId",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeList",
            "type": "list"
          },
          "RamdiskId": {
            "name": "RamdiskId",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "RootDeviceName": {
            "name": "RootDeviceName",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "SourceDestCheck": {
            "name": "SourceDestCheck",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "SriovNetSupport": {
            "name": "SriovNetSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "UserData": {
            "name": "UserData",
            "shape_name": "AttributeValue",
            "type": "structure"
          }
        }
      }
    },
    "DescribeInstanceConnectEndpoints": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceConnectEndpointIds": {
            "name": "InstanceConnectEndpointIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "InstanceConnectEndpointMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceConnectEndpoints",
      "output": {
        "lists": {
          "InstanceConnectEndpoints": {
            "all_fields": [
              "AvailabilityZone",
              "CreatedAt",
              "DnsName",
              "FipsDnsName",
              "InstanceConnectEndpointArn",
              "InstanceConnectEndpointId",
              "NetworkInterfaceIds",
              "OwnerId",
              "PreserveClientIp",
              "SecurityGroupIds",
              "State",
              "StateMessage",
              "SubnetId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [
              "InstanceConnectEndpointArn"
            ],
            "id_fields": [
              "InstanceConnectEndpointId",
              "OwnerId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": [
              "DnsName",
              "FipsDnsName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceConnectEndpoints": {
            "name": "InstanceConnectEndpoints",
            "shape_name": "InstanceConnectEndpointSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceCreditSpecifications": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeInstanceCreditSpecificationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceCreditSpecifications",
      "output": {
        "lists": {
          "InstanceCreditSpecifications": {
            "all_fields": [
              "CpuCredits",
              "InstanceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceCreditSpecifications": {
            "name": "InstanceCreditSpecifications",
            "shape_name": "InstanceCreditSpecificationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceEventNotificationAttributes": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceEventNotificationAttributes",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceTagAttribute": {
            "name": "InstanceTagAttribute",
            "shape_name": "InstanceTagNotificationAttribute",
            "type": "structure"
          }
        }
      }
    },
    "DescribeInstanceEventWindows": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceEventWindowIds": {
            "name": "InstanceEventWindowIds",
            "shape_name": "InstanceEventWindowIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "ResultRange",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceEventWindows",
      "output": {
        "lists": {
          "InstanceEventWindows": {
            "all_fields": [
              "AssociationTarget",
              "CronExpression",
              "InstanceEventWindowId",
              "Name",
              "State",
              "Tags",
              "TimeRanges"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceEventWindowId"
            ],
            "name_fields": [
              "Name"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceEventWindows": {
            "name": "InstanceEventWindows",
            "shape_name": "InstanceEventWindowSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceStatus": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IncludeAllInstances": {
            "name": "IncludeAllInstances",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceStatus",
      "output": {
        "lists": {
          "InstanceStatuses": {
            "all_fields": [
              "AvailabilityZone",
              "Events",
              "InstanceId",
              "InstanceState",
              "InstanceStatus",
              "OutpostArn",
              "SystemStatus"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceStatuses": {
            "name": "InstanceStatuses",
            "shape_name": "InstanceStatusList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceTopology": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "GroupNames": {
            "name": "GroupNames",
            "shape_name": "DescribeInstanceTopologyGroupNameSet",
            "type": "list"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "DescribeInstanceTopologyInstanceIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeInstanceTopologyMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceTopology",
      "output": {
        "lists": {
          "Instances": {
            "all_fields": [
              "AvailabilityZone",
              "GroupName",
              "InstanceId",
              "InstanceType",
              "NetworkNodes",
              "ZoneId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "ZoneId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Instances": {
            "name": "Instances",
            "shape_name": "InstanceSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceTypeOfferings": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocationType": {
            "name": "LocationType",
            "shape_name": "LocationType",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DITOMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceTypeOfferings",
      "output": {
        "lists": {
          "InstanceTypeOfferings": {
            "all_fields": [
              "InstanceType",
              "Location",
              "LocationType"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceTypeOfferings": {
            "name": "InstanceTypeOfferings",
            "shape_name": "InstanceTypeOfferingsList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstanceTypes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceTypes": {
            "name": "InstanceTypes",
            "shape_name": "RequestInstanceTypeList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DITMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstanceTypes",
      "output": {
        "lists": {
          "InstanceTypes": {
            "all_fields": [
              "AutoRecoverySupported",
              "BareMetal",
              "BurstablePerformanceSupported",
              "CurrentGeneration",
              "DedicatedHostsSupported",
              "EbsInfo",
              "FpgaInfo",
              "FreeTierEligible",
              "GpuInfo",
              "HibernationSupported",
              "Hypervisor",
              "InferenceAcceleratorInfo",
              "InstanceStorageInfo",
              "InstanceStorageSupported",
              "InstanceType",
              "MediaAcceleratorInfo",
              "MemoryInfo",
              "NetworkInfo",
              "NeuronInfo",
              "NitroEnclavesSupport",
              "NitroTpmInfo",
              "NitroTpmSupport",
              "PhcSupport",
              "PlacementGroupInfo",
              "ProcessorInfo",
              "SupportedBootModes",
              "SupportedRootDeviceTypes",
              "SupportedUsageClasses",
              "SupportedVirtualizationTypes",
              "VCpuInfo"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceTypes": {
            "name": "InstanceTypes",
            "shape_name": "InstanceTypeInfoList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInstances",
      "output": {
        "jq": "# Save the reservation details to $reservation\n.Reservations[] | {ReservationId, OwnerId, RequesterId, Groups} as $reservation |\n# Output each instance and then append the Reservation details at the end \n.Instances[] |\n# Convert Tags to a Map\n.Tags = (.Tags//[] | from_entries) |\n# Add common properties\n{\n  Id: .InstanceId,\n  Name: .Tags.Name//\"\",\n  Arn: \"arn:\\($partition//\"aws\"):ec2:\\(.Region//$region//\"oops\"):\\($reservation.OwnerId//$account//\"\"):instance/\\(.InstanceId)\",\n  Reservation: $reservation\n} + .",
        "lists": {
          "Reservations": {
            "all_fields": [
              "Groups",
              "Instances",
              "OwnerId",
              "RequesterId",
              "ReservationId"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "RequesterId",
              "ReservationId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Reservations": {
            "name": "Reservations",
            "shape_name": "ReservationList",
            "type": "list"
          }
        }
      }
    },
    "DescribeInternetGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InternetGatewayIds": {
            "name": "InternetGatewayIds",
            "shape_name": "InternetGatewayIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeInternetGatewaysMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeInternetGateways",
      "output": {
        "lists": {
          "InternetGateways": {
            "all_fields": [
              "Attachments",
              "InternetGatewayId",
              "OwnerId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "InternetGatewayId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InternetGateways": {
            "name": "InternetGateways",
            "shape_name": "InternetGatewayList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamByoasn": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeIpamByoasnMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamByoasn",
      "output": {
        "lists": {
          "Byoasns": {
            "all_fields": [
              "Asn",
              "IpamId",
              "State",
              "StatusMessage"
            ],
            "arn_fields": [],
            "id_fields": [
              "IpamId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Byoasns": {
            "name": "Byoasns",
            "shape_name": "ByoasnSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamExternalResourceVerificationTokens": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamExternalResourceVerificationTokenIds": {
            "name": "IpamExternalResourceVerificationTokenIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamExternalResourceVerificationTokens",
      "output": {
        "lists": {
          "IpamExternalResourceVerificationTokens": {
            "all_fields": [
              "IpamArn",
              "IpamExternalResourceVerificationTokenArn",
              "IpamExternalResourceVerificationTokenId",
              "IpamId",
              "IpamRegion",
              "NotAfter",
              "State",
              "Status",
              "Tags",
              "TokenName",
              "TokenValue"
            ],
            "arn_fields": [
              "IpamArn",
              "IpamExternalResourceVerificationTokenArn"
            ],
            "id_fields": [
              "IpamExternalResourceVerificationTokenId",
              "IpamId"
            ],
            "name_fields": [
              "TokenName"
            ]
          }
        },
        "markers": [
          "IpamExternalResourceVerificationTokens",
          "NextToken"
        ],
        "members": {
          "IpamExternalResourceVerificationTokens": {
            "name": "IpamExternalResourceVerificationTokens",
            "shape_name": "IpamExternalResourceVerificationTokenSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamPools": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamPoolIds": {
            "name": "IpamPoolIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamPools",
      "output": {
        "lists": {
          "IpamPools": {
            "all_fields": [
              "AddressFamily",
              "AllocationDefaultNetmaskLength",
              "AllocationMaxNetmaskLength",
              "AllocationMinNetmaskLength",
              "AllocationResourceTags",
              "AutoImport",
              "AwsService",
              "Description",
              "IpamArn",
              "IpamPoolArn",
              "IpamPoolId",
              "IpamRegion",
              "IpamScopeArn",
              "IpamScopeType",
              "Locale",
              "OwnerId",
              "PoolDepth",
              "PublicIpSource",
              "PubliclyAdvertisable",
              "SourceIpamPoolId",
              "SourceResource",
              "State",
              "StateMessage",
              "Tags"
            ],
            "arn_fields": [
              "IpamArn",
              "IpamPoolArn",
              "IpamScopeArn"
            ],
            "id_fields": [
              "IpamPoolId",
              "OwnerId",
              "SourceIpamPoolId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamPools": {
            "name": "IpamPools",
            "shape_name": "IpamPoolSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamResourceDiscoveries": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamResourceDiscoveryIds": {
            "name": "IpamResourceDiscoveryIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamResourceDiscoveries",
      "output": {
        "lists": {
          "IpamResourceDiscoveries": {
            "all_fields": [
              "Description",
              "IpamResourceDiscoveryArn",
              "IpamResourceDiscoveryId",
              "IpamResourceDiscoveryRegion",
              "IsDefault",
              "OperatingRegions",
              "OwnerId",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "IpamResourceDiscoveryArn"
            ],
            "id_fields": [
              "IpamResourceDiscoveryId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamResourceDiscoveries": {
            "name": "IpamResourceDiscoveries",
            "shape_name": "IpamResourceDiscoverySet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamResourceDiscoveryAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamResourceDiscoveryAssociationIds": {
            "name": "IpamResourceDiscoveryAssociationIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamResourceDiscoveryAssociations",
      "output": {
        "lists": {
          "IpamResourceDiscoveryAssociations": {
            "all_fields": [
              "IpamArn",
              "IpamId",
              "IpamRegion",
              "IpamResourceDiscoveryAssociationArn",
              "IpamResourceDiscoveryAssociationId",
              "IpamResourceDiscoveryId",
              "IsDefault",
              "OwnerId",
              "ResourceDiscoveryStatus",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "IpamArn",
              "IpamResourceDiscoveryAssociationArn"
            ],
            "id_fields": [
              "IpamId",
              "IpamResourceDiscoveryAssociationId",
              "IpamResourceDiscoveryId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamResourceDiscoveryAssociations": {
            "name": "IpamResourceDiscoveryAssociations",
            "shape_name": "IpamResourceDiscoveryAssociationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpamScopes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamScopeIds": {
            "name": "IpamScopeIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpamScopes",
      "output": {
        "lists": {
          "IpamScopes": {
            "all_fields": [
              "Description",
              "IpamArn",
              "IpamRegion",
              "IpamScopeArn",
              "IpamScopeId",
              "IpamScopeType",
              "IsDefault",
              "OwnerId",
              "PoolCount",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "IpamArn",
              "IpamScopeArn"
            ],
            "id_fields": [
              "IpamScopeId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamScopes": {
            "name": "IpamScopes",
            "shape_name": "IpamScopeSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpams": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamIds": {
            "name": "IpamIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeIpams",
      "output": {
        "lists": {
          "Ipams": {
            "all_fields": [
              "DefaultResourceDiscoveryAssociationId",
              "DefaultResourceDiscoveryId",
              "Description",
              "IpamArn",
              "IpamId",
              "IpamRegion",
              "OperatingRegions",
              "OwnerId",
              "PrivateDefaultScopeId",
              "PublicDefaultScopeId",
              "ResourceDiscoveryAssociationCount",
              "ScopeCount",
              "State",
              "StateMessage",
              "Tags",
              "Tier"
            ],
            "arn_fields": [
              "IpamArn"
            ],
            "id_fields": [
              "DefaultResourceDiscoveryAssociationId",
              "DefaultResourceDiscoveryId",
              "IpamId",
              "OwnerId",
              "PrivateDefaultScopeId",
              "PublicDefaultScopeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Ipams": {
            "name": "Ipams",
            "shape_name": "IpamSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeIpv6Pools": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Ipv6PoolMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PoolIds": {
            "name": "PoolIds",
            "shape_name": "Ipv6PoolIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeIpv6Pools",
      "output": {
        "lists": {
          "Ipv6Pools": {
            "all_fields": [
              "Description",
              "PoolCidrBlocks",
              "PoolId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "PoolId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Ipv6Pools": {
            "name": "Ipv6Pools",
            "shape_name": "Ipv6PoolSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeKeyPairs": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IncludePublicKey": {
            "name": "IncludePublicKey",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KeyNames": {
            "name": "KeyNames",
            "shape_name": "KeyNameStringList",
            "type": "list"
          },
          "KeyPairIds": {
            "name": "KeyPairIds",
            "shape_name": "KeyPairIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeKeyPairs",
      "output": {
        "lists": {
          "KeyPairs": {
            "all_fields": [
              "CreateTime",
              "KeyFingerprint",
              "KeyName",
              "KeyPairId",
              "KeyType",
              "PublicKey",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "KeyPairId"
            ],
            "name_fields": [
              "KeyName"
            ]
          }
        },
        "markers": [],
        "members": {
          "KeyPairs": {
            "name": "KeyPairs",
            "shape_name": "KeyPairList",
            "type": "list"
          }
        }
      }
    },
    "DescribeLaunchTemplateVersions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LaunchTemplateId": {
            "name": "LaunchTemplateId",
            "shape_name": "LaunchTemplateId",
            "type": "string"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MaxVersion": {
            "name": "MaxVersion",
            "shape_name": "String",
            "type": "string"
          },
          "MinVersion": {
            "name": "MinVersion",
            "shape_name": "String",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ResolveAlias": {
            "name": "ResolveAlias",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Versions": {
            "name": "Versions",
            "shape_name": "VersionStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeLaunchTemplateVersions",
      "output": {
        "lists": {
          "LaunchTemplateVersions": {
            "all_fields": [
              "CreateTime",
              "CreatedBy",
              "DefaultVersion",
              "LaunchTemplateData",
              "LaunchTemplateId",
              "LaunchTemplateName",
              "VersionDescription",
              "VersionNumber"
            ],
            "arn_fields": [],
            "id_fields": [
              "LaunchTemplateId"
            ],
            "name_fields": [
              "LaunchTemplateName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LaunchTemplateVersions": {
            "name": "LaunchTemplateVersions",
            "shape_name": "LaunchTemplateVersionSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLaunchTemplates": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LaunchTemplateIds": {
            "name": "LaunchTemplateIds",
            "shape_name": "LaunchTemplateIdStringList",
            "type": "list"
          },
          "LaunchTemplateNames": {
            "name": "LaunchTemplateNames",
            "shape_name": "LaunchTemplateNameStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeLaunchTemplatesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLaunchTemplates",
      "output": {
        "lists": {
          "LaunchTemplates": {
            "all_fields": [
              "CreateTime",
              "CreatedBy",
              "DefaultVersionNumber",
              "LatestVersionNumber",
              "LaunchTemplateId",
              "LaunchTemplateName",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "LaunchTemplateId"
            ],
            "name_fields": [
              "LaunchTemplateName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LaunchTemplates": {
            "name": "LaunchTemplates",
            "shape_name": "LaunchTemplateSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds": {
            "name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds",
            "shape_name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "output": {
        "lists": {
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
            "all_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableArn",
              "LocalGatewayRouteTableId",
              "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
              "LocalGatewayVirtualInterfaceGroupId",
              "OwnerId",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "LocalGatewayRouteTableArn"
            ],
            "id_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableId",
              "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId",
              "LocalGatewayVirtualInterfaceGroupId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
            "name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociations",
            "shape_name": "LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGatewayRouteTableVpcAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayRouteTableVpcAssociationIds": {
            "name": "LocalGatewayRouteTableVpcAssociationIds",
            "shape_name": "LocalGatewayRouteTableVpcAssociationIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGatewayRouteTableVpcAssociations",
      "output": {
        "lists": {
          "LocalGatewayRouteTableVpcAssociations": {
            "all_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableArn",
              "LocalGatewayRouteTableId",
              "LocalGatewayRouteTableVpcAssociationId",
              "OwnerId",
              "State",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [
              "LocalGatewayRouteTableArn"
            ],
            "id_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableId",
              "LocalGatewayRouteTableVpcAssociationId",
              "OwnerId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGatewayRouteTableVpcAssociations": {
            "name": "LocalGatewayRouteTableVpcAssociations",
            "shape_name": "LocalGatewayRouteTableVpcAssociationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGatewayRouteTables": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayRouteTableIds": {
            "name": "LocalGatewayRouteTableIds",
            "shape_name": "LocalGatewayRouteTableIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGatewayRouteTables",
      "output": {
        "lists": {
          "LocalGatewayRouteTables": {
            "all_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableArn",
              "LocalGatewayRouteTableId",
              "Mode",
              "OutpostArn",
              "OwnerId",
              "State",
              "StateReason",
              "Tags"
            ],
            "arn_fields": [
              "LocalGatewayRouteTableArn",
              "OutpostArn"
            ],
            "id_fields": [
              "LocalGatewayId",
              "LocalGatewayRouteTableId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGatewayRouteTables": {
            "name": "LocalGatewayRouteTables",
            "shape_name": "LocalGatewayRouteTableSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGatewayVirtualInterfaceGroups": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayVirtualInterfaceGroupIds": {
            "name": "LocalGatewayVirtualInterfaceGroupIds",
            "shape_name": "LocalGatewayVirtualInterfaceGroupIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGatewayVirtualInterfaceGroups",
      "output": {
        "lists": {
          "LocalGatewayVirtualInterfaceGroups": {
            "all_fields": [
              "LocalGatewayId",
              "LocalGatewayVirtualInterfaceGroupId",
              "LocalGatewayVirtualInterfaceIds",
              "OwnerId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "LocalGatewayId",
              "LocalGatewayVirtualInterfaceGroupId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGatewayVirtualInterfaceGroups": {
            "name": "LocalGatewayVirtualInterfaceGroups",
            "shape_name": "LocalGatewayVirtualInterfaceGroupSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGatewayVirtualInterfaces": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayVirtualInterfaceIds": {
            "name": "LocalGatewayVirtualInterfaceIds",
            "shape_name": "LocalGatewayVirtualInterfaceIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGatewayVirtualInterfaces",
      "output": {
        "lists": {
          "LocalGatewayVirtualInterfaces": {
            "all_fields": [
              "LocalAddress",
              "LocalBgpAsn",
              "LocalGatewayId",
              "LocalGatewayVirtualInterfaceId",
              "OwnerId",
              "PeerAddress",
              "PeerBgpAsn",
              "Tags",
              "Vlan"
            ],
            "arn_fields": [],
            "id_fields": [
              "LocalGatewayId",
              "LocalGatewayVirtualInterfaceId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGatewayVirtualInterfaces": {
            "name": "LocalGatewayVirtualInterfaces",
            "shape_name": "LocalGatewayVirtualInterfaceSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLocalGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayIds": {
            "name": "LocalGatewayIds",
            "shape_name": "LocalGatewayIdSet",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "LocalGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeLocalGateways",
      "output": {
        "lists": {
          "LocalGateways": {
            "all_fields": [
              "LocalGatewayId",
              "OutpostArn",
              "OwnerId",
              "State",
              "Tags"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "LocalGatewayId",
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LocalGateways": {
            "name": "LocalGateways",
            "shape_name": "LocalGatewaySet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeLockedSnapshots": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeLockedSnapshotsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotIds": {
            "name": "SnapshotIds",
            "shape_name": "SnapshotIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeLockedSnapshots",
      "output": {
        "lists": {
          "Snapshots": {
            "all_fields": [
              "CoolOffPeriod",
              "CoolOffPeriodExpiresOn",
              "LockCreatedOn",
              "LockDuration",
              "LockDurationStartTime",
              "LockExpiresOn",
              "LockState",
              "OwnerId",
              "SnapshotId"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SnapshotId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Snapshots": {
            "name": "Snapshots",
            "shape_name": "LockedSnapshotsInfoList",
            "type": "list"
          }
        }
      }
    },
    "DescribeMacHosts": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "HostIds": {
            "name": "HostIds",
            "shape_name": "RequestHostIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeMacHostsRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeMacHosts",
      "output": {
        "lists": {
          "MacHosts": {
            "all_fields": [
              "HostId",
              "MacOSLatestSupportedVersions"
            ],
            "arn_fields": [],
            "id_fields": [
              "HostId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "MacHosts": {
            "name": "MacHosts",
            "shape_name": "MacHostList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeManagedPrefixLists": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "PrefixListMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PrefixListIds": {
            "name": "PrefixListIds",
            "shape_name": "ValueStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeManagedPrefixLists",
      "output": {
        "lists": {
          "PrefixLists": {
            "all_fields": [
              "AddressFamily",
              "MaxEntries",
              "OwnerId",
              "PrefixListArn",
              "PrefixListId",
              "PrefixListName",
              "State",
              "StateMessage",
              "Tags",
              "Version"
            ],
            "arn_fields": [
              "PrefixListArn"
            ],
            "id_fields": [
              "OwnerId",
              "PrefixListId"
            ],
            "name_fields": [
              "PrefixListName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PrefixLists": {
            "name": "PrefixLists",
            "shape_name": "ManagedPrefixListSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeMovingAddresses": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeMovingAddressesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIps": {
            "name": "PublicIps",
            "shape_name": "ValueStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeMovingAddresses",
      "output": {
        "lists": {
          "MovingAddressStatuses": {
            "all_fields": [
              "MoveStatus",
              "PublicIp"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "MovingAddressStatuses": {
            "name": "MovingAddressStatuses",
            "shape_name": "MovingAddressStatusSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNatGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filter": {
            "name": "Filter",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeNatGatewaysMaxResults",
            "type": "integer"
          },
          "NatGatewayIds": {
            "name": "NatGatewayIds",
            "shape_name": "NatGatewayIdStringList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNatGateways",
      "output": {
        "lists": {
          "NatGateways": {
            "all_fields": [
              "ConnectivityType",
              "CreateTime",
              "DeleteTime",
              "FailureCode",
              "FailureMessage",
              "NatGatewayAddresses",
              "NatGatewayId",
              "ProvisionedBandwidth",
              "State",
              "SubnetId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "NatGatewayId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NatGateways": {
            "name": "NatGateways",
            "shape_name": "NatGatewayList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkAcls": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeNetworkAclsMaxResults",
            "type": "integer"
          },
          "NetworkAclIds": {
            "name": "NetworkAclIds",
            "shape_name": "NetworkAclIdStringList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkAcls",
      "output": {
        "lists": {
          "NetworkAcls": {
            "all_fields": [
              "Associations",
              "Entries",
              "IsDefault",
              "NetworkAclId",
              "OwnerId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "NetworkAclId",
              "OwnerId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkAcls": {
            "name": "NetworkAcls",
            "shape_name": "NetworkAclList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInsightsAccessScopeAnalyses": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AnalysisStartTimeBegin": {
            "name": "AnalysisStartTimeBegin",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "AnalysisStartTimeEnd": {
            "name": "AnalysisStartTimeEnd",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "NetworkInsightsMaxResults",
            "type": "integer"
          },
          "NetworkInsightsAccessScopeAnalysisIds": {
            "name": "NetworkInsightsAccessScopeAnalysisIds",
            "shape_name": "NetworkInsightsAccessScopeAnalysisIdList",
            "type": "list"
          },
          "NetworkInsightsAccessScopeId": {
            "name": "NetworkInsightsAccessScopeId",
            "shape_name": "NetworkInsightsAccessScopeId",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInsightsAccessScopeAnalyses",
      "output": {
        "lists": {
          "NetworkInsightsAccessScopeAnalyses": {
            "all_fields": [
              "AnalyzedEniCount",
              "EndDate",
              "FindingsFound",
              "NetworkInsightsAccessScopeAnalysisArn",
              "NetworkInsightsAccessScopeAnalysisId",
              "NetworkInsightsAccessScopeId",
              "StartDate",
              "Status",
              "StatusMessage",
              "Tags",
              "WarningMessage"
            ],
            "arn_fields": [
              "NetworkInsightsAccessScopeAnalysisArn"
            ],
            "id_fields": [
              "NetworkInsightsAccessScopeAnalysisId",
              "NetworkInsightsAccessScopeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInsightsAccessScopeAnalyses": {
            "name": "NetworkInsightsAccessScopeAnalyses",
            "shape_name": "NetworkInsightsAccessScopeAnalysisList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInsightsAccessScopes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "NetworkInsightsMaxResults",
            "type": "integer"
          },
          "NetworkInsightsAccessScopeIds": {
            "name": "NetworkInsightsAccessScopeIds",
            "shape_name": "NetworkInsightsAccessScopeIdList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInsightsAccessScopes",
      "output": {
        "lists": {
          "NetworkInsightsAccessScopes": {
            "all_fields": [
              "CreatedDate",
              "NetworkInsightsAccessScopeArn",
              "NetworkInsightsAccessScopeId",
              "Tags",
              "UpdatedDate"
            ],
            "arn_fields": [
              "NetworkInsightsAccessScopeArn"
            ],
            "id_fields": [
              "NetworkInsightsAccessScopeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInsightsAccessScopes": {
            "name": "NetworkInsightsAccessScopes",
            "shape_name": "NetworkInsightsAccessScopeList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInsightsAnalyses": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AnalysisEndTime": {
            "name": "AnalysisEndTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "AnalysisStartTime": {
            "name": "AnalysisStartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "NetworkInsightsMaxResults",
            "type": "integer"
          },
          "NetworkInsightsAnalysisIds": {
            "name": "NetworkInsightsAnalysisIds",
            "shape_name": "NetworkInsightsAnalysisIdList",
            "type": "list"
          },
          "NetworkInsightsPathId": {
            "name": "NetworkInsightsPathId",
            "shape_name": "NetworkInsightsPathId",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInsightsAnalyses",
      "output": {
        "lists": {
          "NetworkInsightsAnalyses": {
            "all_fields": [
              "AdditionalAccounts",
              "AlternatePathHints",
              "Explanations",
              "FilterInArns",
              "ForwardPathComponents",
              "NetworkInsightsAnalysisArn",
              "NetworkInsightsAnalysisId",
              "NetworkInsightsPathId",
              "NetworkPathFound",
              "ReturnPathComponents",
              "StartDate",
              "Status",
              "StatusMessage",
              "SuggestedAccounts",
              "Tags",
              "WarningMessage"
            ],
            "arn_fields": [
              "NetworkInsightsAnalysisArn"
            ],
            "id_fields": [
              "NetworkInsightsAnalysisId",
              "NetworkInsightsPathId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInsightsAnalyses": {
            "name": "NetworkInsightsAnalyses",
            "shape_name": "NetworkInsightsAnalysisList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInsightsPaths": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "NetworkInsightsMaxResults",
            "type": "integer"
          },
          "NetworkInsightsPathIds": {
            "name": "NetworkInsightsPathIds",
            "shape_name": "NetworkInsightsPathIdList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInsightsPaths",
      "output": {
        "lists": {
          "NetworkInsightsPaths": {
            "all_fields": [
              "CreatedDate",
              "Destination",
              "DestinationArn",
              "DestinationIp",
              "DestinationPort",
              "FilterAtDestination",
              "FilterAtSource",
              "NetworkInsightsPathArn",
              "NetworkInsightsPathId",
              "Protocol",
              "Source",
              "SourceArn",
              "SourceIp",
              "Tags"
            ],
            "arn_fields": [
              "DestinationArn",
              "NetworkInsightsPathArn",
              "SourceArn"
            ],
            "id_fields": [
              "NetworkInsightsPathId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInsightsPaths": {
            "name": "NetworkInsightsPaths",
            "shape_name": "NetworkInsightsPathList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInterfaceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "NetworkInterfaceAttribute",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "DescribeNetworkInterfaceAttribute",
      "output": {
        "lists": {
          "Groups": {
            "all_fields": [
              "GroupId",
              "GroupName"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [],
        "members": {
          "AssociatePublicIpAddress": {
            "name": "AssociatePublicIpAddress",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Attachment": {
            "name": "Attachment",
            "shape_name": "NetworkInterfaceAttachment",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "GroupIdentifierList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "String",
            "type": "string"
          },
          "SourceDestCheck": {
            "name": "SourceDestCheck",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          }
        }
      }
    },
    "DescribeNetworkInterfacePermissions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeNetworkInterfacePermissionsMaxResults",
            "type": "integer"
          },
          "NetworkInterfacePermissionIds": {
            "name": "NetworkInterfacePermissionIds",
            "shape_name": "NetworkInterfacePermissionIdList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInterfacePermissions",
      "output": {
        "lists": {
          "NetworkInterfacePermissions": {
            "all_fields": [
              "AwsAccountId",
              "AwsService",
              "NetworkInterfaceId",
              "NetworkInterfacePermissionId",
              "Permission",
              "PermissionState"
            ],
            "arn_fields": [],
            "id_fields": [
              "AwsAccountId",
              "NetworkInterfaceId",
              "NetworkInterfacePermissionId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInterfacePermissions": {
            "name": "NetworkInterfacePermissions",
            "shape_name": "NetworkInterfacePermissionList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeNetworkInterfaces": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeNetworkInterfacesMaxResults",
            "type": "integer"
          },
          "NetworkInterfaceIds": {
            "name": "NetworkInterfaceIds",
            "shape_name": "NetworkInterfaceIdList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeNetworkInterfaces",
      "output": {
        "lists": {
          "NetworkInterfaces": {
            "all_fields": [
              "Association",
              "Attachment",
              "AvailabilityZone",
              "ConnectionTrackingConfiguration",
              "DenyAllIgwTraffic",
              "Description",
              "Groups",
              "InterfaceType",
              "Ipv4Prefixes",
              "Ipv6Address",
              "Ipv6Addresses",
              "Ipv6Native",
              "Ipv6Prefixes",
              "MacAddress",
              "NetworkInterfaceId",
              "OutpostArn",
              "OwnerId",
              "PrivateDnsName",
              "PrivateIpAddress",
              "PrivateIpAddresses",
              "RequesterId",
              "RequesterManaged",
              "SourceDestCheck",
              "Status",
              "SubnetId",
              "TagSet",
              "VpcId"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "NetworkInterfaceId",
              "OwnerId",
              "RequesterId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": [
              "PrivateDnsName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NetworkInterfaces": {
            "name": "NetworkInterfaces",
            "shape_name": "NetworkInterfaceList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribePlacementGroups": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "GroupIds": {
            "name": "GroupIds",
            "shape_name": "PlacementGroupIdStringList",
            "type": "list"
          },
          "GroupNames": {
            "name": "GroupNames",
            "shape_name": "PlacementGroupStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribePlacementGroups",
      "output": {
        "lists": {
          "PlacementGroups": {
            "all_fields": [
              "GroupArn",
              "GroupId",
              "GroupName",
              "PartitionCount",
              "SpreadLevel",
              "State",
              "Strategy",
              "Tags"
            ],
            "arn_fields": [
              "GroupArn"
            ],
            "id_fields": [
              "GroupId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [],
        "members": {
          "PlacementGroups": {
            "name": "PlacementGroups",
            "shape_name": "PlacementGroupList",
            "type": "list"
          }
        }
      }
    },
    "DescribePrefixLists": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PrefixListIds": {
            "name": "PrefixListIds",
            "shape_name": "PrefixListResourceIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribePrefixLists",
      "output": {
        "lists": {
          "PrefixLists": {
            "all_fields": [
              "Cidrs",
              "PrefixListId",
              "PrefixListName"
            ],
            "arn_fields": [],
            "id_fields": [
              "PrefixListId"
            ],
            "name_fields": [
              "PrefixListName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PrefixLists": {
            "name": "PrefixLists",
            "shape_name": "PrefixListSet",
            "type": "list"
          }
        }
      }
    },
    "DescribePrincipalIdFormat": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribePrincipalIdFormatMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Resources": {
            "name": "Resources",
            "shape_name": "ResourceList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribePrincipalIdFormat",
      "output": {
        "lists": {
          "Principals": {
            "all_fields": [
              "Arn",
              "Statuses"
            ],
            "arn_fields": [
              "Arn"
            ],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Principals": {
            "name": "Principals",
            "shape_name": "PrincipalIdFormatList",
            "type": "list"
          }
        }
      }
    },
    "DescribePublicIpv4Pools": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "PoolMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PoolIds": {
            "name": "PoolIds",
            "shape_name": "PublicIpv4PoolIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribePublicIpv4Pools",
      "output": {
        "lists": {
          "PublicIpv4Pools": {
            "all_fields": [
              "Description",
              "NetworkBorderGroup",
              "PoolAddressRanges",
              "PoolId",
              "Tags",
              "TotalAddressCount",
              "TotalAvailableAddressCount"
            ],
            "arn_fields": [],
            "id_fields": [
              "PoolId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIpv4Pools": {
            "name": "PublicIpv4Pools",
            "shape_name": "PublicIpv4PoolSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeRegions": {
      "input": {
        "markers": [],
        "members": {
          "AllRegions": {
            "name": "AllRegions",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "RegionNames": {
            "name": "RegionNames",
            "shape_name": "RegionNameStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeRegions",
      "output": {
        "lists": {
          "Regions": {
            "all_fields": [
              "Endpoint",
              "OptInStatus",
              "RegionName"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": [
              "RegionName"
            ]
          }
        },
        "markers": [],
        "members": {
          "Regions": {
            "name": "Regions",
            "shape_name": "RegionList",
            "type": "list"
          }
        }
      }
    },
    "DescribeReplaceRootVolumeTasks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeReplaceRootVolumeTasksMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "ReplaceRootVolumeTaskIds": {
            "name": "ReplaceRootVolumeTaskIds",
            "shape_name": "ReplaceRootVolumeTaskIds",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeReplaceRootVolumeTasks",
      "output": {
        "lists": {
          "ReplaceRootVolumeTasks": {
            "all_fields": [
              "CompleteTime",
              "DeleteReplacedRootVolume",
              "ImageId",
              "InstanceId",
              "ReplaceRootVolumeTaskId",
              "SnapshotId",
              "StartTime",
              "Tags",
              "TaskState"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImageId",
              "InstanceId",
              "ReplaceRootVolumeTaskId",
              "SnapshotId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ReplaceRootVolumeTasks": {
            "name": "ReplaceRootVolumeTasks",
            "shape_name": "ReplaceRootVolumeTasks",
            "type": "list"
          }
        }
      }
    },
    "DescribeReservedInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "OfferingClass": {
            "name": "OfferingClass",
            "shape_name": "OfferingClassType",
            "type": "string"
          },
          "OfferingType": {
            "name": "OfferingType",
            "shape_name": "OfferingTypeValues",
            "type": "string"
          },
          "ReservedInstancesIds": {
            "name": "ReservedInstancesIds",
            "shape_name": "ReservedInstancesIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeReservedInstances",
      "output": {
        "lists": {
          "ReservedInstances": {
            "all_fields": [
              "AvailabilityZone",
              "CurrencyCode",
              "Duration",
              "End",
              "FixedPrice",
              "InstanceCount",
              "InstanceTenancy",
              "InstanceType",
              "OfferingClass",
              "OfferingType",
              "ProductDescription",
              "RecurringCharges",
              "ReservedInstancesId",
              "Scope",
              "Start",
              "State",
              "Tags",
              "UsagePrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ReservedInstances": {
            "name": "ReservedInstances",
            "shape_name": "ReservedInstancesList",
            "type": "list"
          }
        }
      }
    },
    "DescribeReservedInstancesListings": {
      "input": {
        "markers": [],
        "members": {
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ReservedInstancesId": {
            "name": "ReservedInstancesId",
            "shape_name": "ReservationId",
            "type": "string"
          },
          "ReservedInstancesListingId": {
            "name": "ReservedInstancesListingId",
            "shape_name": "ReservedInstancesListingId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeReservedInstancesListings",
      "output": {
        "lists": {
          "ReservedInstancesListings": {
            "all_fields": [
              "ClientToken",
              "CreateDate",
              "InstanceCounts",
              "PriceSchedules",
              "ReservedInstancesId",
              "ReservedInstancesListingId",
              "Status",
              "StatusMessage",
              "Tags",
              "UpdateDate"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesId",
              "ReservedInstancesListingId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ReservedInstancesListings": {
            "name": "ReservedInstancesListings",
            "shape_name": "ReservedInstancesListingList",
            "type": "list"
          }
        }
      }
    },
    "DescribeReservedInstancesModifications": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ReservedInstancesModificationIds": {
            "name": "ReservedInstancesModificationIds",
            "shape_name": "ReservedInstancesModificationIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeReservedInstancesModifications",
      "output": {
        "lists": {
          "ReservedInstancesModifications": {
            "all_fields": [
              "ClientToken",
              "CreateDate",
              "EffectiveDate",
              "ModificationResults",
              "ReservedInstancesIds",
              "ReservedInstancesModificationId",
              "Status",
              "StatusMessage",
              "UpdateDate"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesModificationId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ReservedInstancesModifications": {
            "name": "ReservedInstancesModifications",
            "shape_name": "ReservedInstancesModificationList",
            "type": "list"
          }
        }
      }
    },
    "DescribeReservedInstancesOfferings": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IncludeMarketplace": {
            "name": "IncludeMarketplace",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceTenancy": {
            "name": "InstanceTenancy",
            "shape_name": "Tenancy",
            "type": "string"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "InstanceType",
            "type": "string"
          },
          "MaxDuration": {
            "name": "MaxDuration",
            "shape_name": "Long",
            "type": "long"
          },
          "MaxInstanceCount": {
            "name": "MaxInstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MinDuration": {
            "name": "MinDuration",
            "shape_name": "Long",
            "type": "long"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "OfferingClass": {
            "name": "OfferingClass",
            "shape_name": "OfferingClassType",
            "type": "string"
          },
          "OfferingType": {
            "name": "OfferingType",
            "shape_name": "OfferingTypeValues",
            "type": "string"
          },
          "ProductDescription": {
            "name": "ProductDescription",
            "shape_name": "RIProductDescription",
            "type": "string"
          },
          "ReservedInstancesOfferingIds": {
            "name": "ReservedInstancesOfferingIds",
            "shape_name": "ReservedInstancesOfferingIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeReservedInstancesOfferings",
      "output": {
        "lists": {
          "ReservedInstancesOfferings": {
            "all_fields": [
              "AvailabilityZone",
              "CurrencyCode",
              "Duration",
              "FixedPrice",
              "InstanceTenancy",
              "InstanceType",
              "Marketplace",
              "OfferingClass",
              "OfferingType",
              "PricingDetails",
              "ProductDescription",
              "RecurringCharges",
              "ReservedInstancesOfferingId",
              "Scope",
              "UsagePrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstancesOfferingId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ReservedInstancesOfferings": {
            "name": "ReservedInstancesOfferings",
            "shape_name": "ReservedInstancesOfferingList",
            "type": "list"
          }
        }
      }
    },
    "DescribeRouteTables": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeRouteTablesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "RouteTableIds": {
            "name": "RouteTableIds",
            "shape_name": "RouteTableIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeRouteTables",
      "output": {
        "lists": {
          "RouteTables": {
            "all_fields": [
              "Associations",
              "OwnerId",
              "PropagatingVgws",
              "RouteTableId",
              "Routes",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "RouteTableId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "RouteTables": {
            "name": "RouteTables",
            "shape_name": "RouteTableList",
            "type": "list"
          }
        }
      }
    },
    "DescribeScheduledInstanceAvailability": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "FirstSlotStartTimeRange": {
            "name": "FirstSlotStartTimeRange",
            "shape_name": "SlotDateTimeRangeRequest",
            "type": "structure"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeScheduledInstanceAvailabilityMaxResults",
            "type": "integer"
          },
          "MaxSlotDurationInHours": {
            "name": "MaxSlotDurationInHours",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MinSlotDurationInHours": {
            "name": "MinSlotDurationInHours",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Recurrence": {
            "name": "Recurrence",
            "shape_name": "ScheduledInstanceRecurrenceRequest",
            "type": "structure"
          }
        },
        "required": [
          "FirstSlotStartTimeRange",
          "Recurrence"
        ]
      },
      "name": "DescribeScheduledInstanceAvailability",
      "output": {
        "lists": {
          "ScheduledInstanceAvailabilitySet": {
            "all_fields": [
              "AvailabilityZone",
              "AvailableInstanceCount",
              "FirstSlotStartTime",
              "HourlyPrice",
              "InstanceType",
              "MaxTermDurationInDays",
              "MinTermDurationInDays",
              "NetworkPlatform",
              "Platform",
              "PurchaseToken",
              "Recurrence",
              "SlotDurationInHours",
              "TotalScheduledInstanceHours"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ScheduledInstanceAvailabilitySet": {
            "name": "ScheduledInstanceAvailabilitySet",
            "shape_name": "ScheduledInstanceAvailabilitySet",
            "type": "list"
          }
        }
      }
    },
    "DescribeScheduledInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ScheduledInstanceIds": {
            "name": "ScheduledInstanceIds",
            "shape_name": "ScheduledInstanceIdRequestSet",
            "type": "list"
          },
          "SlotStartTimeRange": {
            "name": "SlotStartTimeRange",
            "shape_name": "SlotStartTimeRangeRequest",
            "type": "structure"
          }
        },
        "required": null
      },
      "name": "DescribeScheduledInstances",
      "output": {
        "lists": {
          "ScheduledInstanceSet": {
            "all_fields": [
              "AvailabilityZone",
              "CreateDate",
              "HourlyPrice",
              "InstanceCount",
              "InstanceType",
              "NetworkPlatform",
              "NextSlotStartTime",
              "Platform",
              "PreviousSlotEndTime",
              "Recurrence",
              "ScheduledInstanceId",
              "SlotDurationInHours",
              "TermEndDate",
              "TermStartDate",
              "TotalScheduledInstanceHours"
            ],
            "arn_fields": [],
            "id_fields": [
              "ScheduledInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ScheduledInstanceSet": {
            "name": "ScheduledInstanceSet",
            "shape_name": "ScheduledInstanceSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeSecurityGroupReferences": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "GroupIds",
            "type": "list"
          }
        },
        "required": [
          "GroupId"
        ]
      },
      "name": "DescribeSecurityGroupReferences",
      "output": {
        "lists": {
          "SecurityGroupReferenceSet": {
            "all_fields": [
              "GroupId",
              "ReferencingVpcId",
              "TransitGatewayId",
              "VpcPeeringConnectionId"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "ReferencingVpcId",
              "TransitGatewayId",
              "VpcPeeringConnectionId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SecurityGroupReferenceSet": {
            "name": "SecurityGroupReferenceSet",
            "shape_name": "SecurityGroupReferences",
            "type": "list"
          }
        }
      }
    },
    "DescribeSecurityGroupRules": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSecurityGroupRulesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupRuleIds": {
            "name": "SecurityGroupRuleIds",
            "shape_name": "SecurityGroupRuleIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeSecurityGroupRules",
      "output": {
        "lists": {
          "SecurityGroupRules": {
            "all_fields": [
              "CidrIpv4",
              "CidrIpv6",
              "Description",
              "FromPort",
              "GroupId",
              "GroupOwnerId",
              "IpProtocol",
              "IsEgress",
              "PrefixListId",
              "ReferencedGroupInfo",
              "SecurityGroupRuleId",
              "Tags",
              "ToPort"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "GroupOwnerId",
              "PrefixListId",
              "SecurityGroupRuleId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupRules": {
            "name": "SecurityGroupRules",
            "shape_name": "SecurityGroupRuleList",
            "type": "list"
          }
        }
      }
    },
    "DescribeSecurityGroups": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "GroupIds": {
            "name": "GroupIds",
            "shape_name": "GroupIdStringList",
            "type": "list"
          },
          "GroupNames": {
            "name": "GroupNames",
            "shape_name": "GroupNameStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSecurityGroupsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeSecurityGroups",
      "output": {
        "lists": {
          "SecurityGroups": {
            "all_fields": [
              "Description",
              "GroupId",
              "GroupName",
              "IpPermissions",
              "IpPermissionsEgress",
              "OwnerId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "OwnerId",
              "VpcId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroups": {
            "name": "SecurityGroups",
            "shape_name": "SecurityGroupList",
            "type": "list"
          }
        }
      }
    },
    "DescribeSnapshotAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "SnapshotAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "SnapshotId"
        ]
      },
      "name": "DescribeSnapshotAttribute",
      "output": {
        "lists": {
          "CreateVolumePermissions": {
            "all_fields": [
              "Group",
              "UserId"
            ],
            "arn_fields": [],
            "id_fields": [
              "UserId"
            ],
            "name_fields": []
          },
          "ProductCodes": {
            "all_fields": [
              "ProductCodeId",
              "ProductCodeType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ProductCodeId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "CreateVolumePermissions": {
            "name": "CreateVolumePermissions",
            "shape_name": "CreateVolumePermissionList",
            "type": "list"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeList",
            "type": "list"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeSnapshotTierStatus": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSnapshotTierStatusMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeSnapshotTierStatus",
      "output": {
        "lists": {
          "SnapshotTierStatuses": {
            "all_fields": [
              "ArchivalCompleteTime",
              "LastTieringOperationStatus",
              "LastTieringOperationStatusDetail",
              "LastTieringProgress",
              "LastTieringStartTime",
              "OwnerId",
              "RestoreExpiryTime",
              "SnapshotId",
              "Status",
              "StorageTier",
              "Tags",
              "VolumeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SnapshotId",
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotTierStatuses": {
            "name": "SnapshotTierStatuses",
            "shape_name": "snapshotTierStatusSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeSnapshots": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "OwnerIds": {
            "name": "OwnerIds",
            "shape_name": "OwnerStringList",
            "type": "list"
          },
          "RestorableByUserIds": {
            "name": "RestorableByUserIds",
            "shape_name": "RestorableByStringList",
            "type": "list"
          },
          "SnapshotIds": {
            "name": "SnapshotIds",
            "shape_name": "SnapshotIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeSnapshots",
      "output": {
        "lists": {
          "Snapshots": {
            "all_fields": [
              "DataEncryptionKeyId",
              "Description",
              "Encrypted",
              "KmsKeyId",
              "OutpostArn",
              "OwnerAlias",
              "OwnerId",
              "Progress",
              "RestoreExpiryTime",
              "SnapshotId",
              "SseType",
              "StartTime",
              "State",
              "StateMessage",
              "StorageTier",
              "Tags",
              "VolumeId",
              "VolumeSize"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "DataEncryptionKeyId",
              "KmsKeyId",
              "OwnerId",
              "SnapshotId",
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Snapshots": {
            "name": "Snapshots",
            "shape_name": "SnapshotList",
            "type": "list"
          }
        }
      }
    },
    "DescribeSpotDatafeedSubscription": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DescribeSpotDatafeedSubscription",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SpotDatafeedSubscription": {
            "name": "SpotDatafeedSubscription",
            "shape_name": "SpotDatafeedSubscription",
            "type": "structure"
          }
        }
      }
    },
    "DescribeSpotFleetInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSpotFleetInstancesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "SpotFleetRequestId",
            "type": "string"
          }
        },
        "required": [
          "SpotFleetRequestId"
        ]
      },
      "name": "DescribeSpotFleetInstances",
      "output": {
        "lists": {
          "ActiveInstances": {
            "all_fields": [
              "InstanceHealth",
              "InstanceId",
              "InstanceType",
              "SpotInstanceRequestId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "SpotInstanceRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ActiveInstances": {
            "name": "ActiveInstances",
            "shape_name": "ActiveInstanceSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeSpotFleetRequestHistory": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EventType": {
            "name": "EventType",
            "shape_name": "EventType",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSpotFleetRequestHistoryMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "SpotFleetRequestId",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": [
          "SpotFleetRequestId",
          "StartTime"
        ]
      },
      "name": "DescribeSpotFleetRequestHistory",
      "output": {
        "lists": {
          "HistoryRecords": {
            "all_fields": [
              "EventInformation",
              "EventType",
              "Timestamp"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "HistoryRecords": {
            "name": "HistoryRecords",
            "shape_name": "HistoryRecords",
            "type": "list"
          },
          "LastEvaluatedTime": {
            "name": "LastEvaluatedTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "String",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "DescribeSpotFleetRequests": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestIds": {
            "name": "SpotFleetRequestIds",
            "shape_name": "SpotFleetRequestIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeSpotFleetRequests",
      "output": {
        "lists": {
          "SpotFleetRequestConfigs": {
            "all_fields": [
              "ActivityStatus",
              "CreateTime",
              "SpotFleetRequestConfig",
              "SpotFleetRequestId",
              "SpotFleetRequestState",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "SpotFleetRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotFleetRequestConfigs": {
            "name": "SpotFleetRequestConfigs",
            "shape_name": "SpotFleetRequestConfigSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeSpotInstanceRequests": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotInstanceRequestIds": {
            "name": "SpotInstanceRequestIds",
            "shape_name": "SpotInstanceRequestIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeSpotInstanceRequests",
      "output": {
        "lists": {
          "SpotInstanceRequests": {
            "all_fields": [
              "ActualBlockHourlyPrice",
              "AvailabilityZoneGroup",
              "BlockDurationMinutes",
              "CreateTime",
              "Fault",
              "InstanceId",
              "InstanceInterruptionBehavior",
              "LaunchGroup",
              "LaunchSpecification",
              "LaunchedAvailabilityZone",
              "ProductDescription",
              "SpotInstanceRequestId",
              "SpotPrice",
              "State",
              "Status",
              "Tags",
              "Type",
              "ValidFrom",
              "ValidUntil"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "SpotInstanceRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotInstanceRequests": {
            "name": "SpotInstanceRequests",
            "shape_name": "SpotInstanceRequestList",
            "type": "list"
          }
        }
      }
    },
    "DescribeSpotPriceHistory": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndTime": {
            "name": "EndTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "InstanceTypes": {
            "name": "InstanceTypes",
            "shape_name": "InstanceTypeList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ProductDescriptions": {
            "name": "ProductDescriptions",
            "shape_name": "ProductDescriptionList",
            "type": "list"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": null
      },
      "name": "DescribeSpotPriceHistory",
      "output": {
        "lists": {
          "SpotPriceHistory": {
            "all_fields": [
              "AvailabilityZone",
              "InstanceType",
              "ProductDescription",
              "SpotPrice",
              "Timestamp"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotPriceHistory": {
            "name": "SpotPriceHistory",
            "shape_name": "SpotPriceHistoryList",
            "type": "list"
          }
        }
      }
    },
    "DescribeStaleSecurityGroups": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeStaleSecurityGroupsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "DescribeStaleSecurityGroupsNextToken",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "DescribeStaleSecurityGroups",
      "output": {
        "lists": {
          "StaleSecurityGroupSet": {
            "all_fields": [
              "Description",
              "GroupId",
              "GroupName",
              "StaleIpPermissions",
              "StaleIpPermissionsEgress",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "VpcId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StaleSecurityGroupSet": {
            "name": "StaleSecurityGroupSet",
            "shape_name": "StaleSecurityGroupSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeStoreImageTasks": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "ImageIds": {
            "name": "ImageIds",
            "shape_name": "ImageIdList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeStoreImageTasksRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeStoreImageTasks",
      "output": {
        "lists": {
          "StoreImageTaskResults": {
            "all_fields": [
              "AmiId",
              "Bucket",
              "ProgressPercentage",
              "S3objectKey",
              "StoreTaskFailureReason",
              "StoreTaskState",
              "TaskStartTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "AmiId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StoreImageTaskResults": {
            "name": "StoreImageTaskResults",
            "shape_name": "StoreImageTaskResultSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeSubnets": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeSubnetsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "SubnetIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeSubnets",
      "output": {
        "lists": {
          "Subnets": {
            "all_fields": [
              "AssignIpv6AddressOnCreation",
              "AvailabilityZone",
              "AvailabilityZoneId",
              "AvailableIpAddressCount",
              "CidrBlock",
              "CustomerOwnedIpv4Pool",
              "DefaultForAz",
              "EnableDns64",
              "EnableLniAtDeviceIndex",
              "Ipv6CidrBlockAssociationSet",
              "Ipv6Native",
              "MapCustomerOwnedIpOnLaunch",
              "MapPublicIpOnLaunch",
              "OutpostArn",
              "OwnerId",
              "PrivateDnsNameOptionsOnLaunch",
              "State",
              "SubnetArn",
              "SubnetId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [
              "OutpostArn",
              "SubnetArn"
            ],
            "id_fields": [
              "AvailabilityZoneId",
              "OwnerId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Subnets": {
            "name": "Subnets",
            "shape_name": "SubnetList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTags": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeTags",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "ResourceId",
              "ResourceType",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagDescriptionList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTrafficMirrorFilterRules": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TrafficMirroringMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          },
          "TrafficMirrorFilterRuleIds": {
            "name": "TrafficMirrorFilterRuleIds",
            "shape_name": "TrafficMirrorFilterRuleIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTrafficMirrorFilterRules",
      "output": {
        "lists": {
          "TrafficMirrorFilterRules": {
            "all_fields": [
              "Description",
              "DestinationCidrBlock",
              "DestinationPortRange",
              "Protocol",
              "RuleAction",
              "RuleNumber",
              "SourceCidrBlock",
              "SourcePortRange",
              "Tags",
              "TrafficDirection",
              "TrafficMirrorFilterId",
              "TrafficMirrorFilterRuleId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TrafficMirrorFilterId",
              "TrafficMirrorFilterRuleId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorFilterRules": {
            "name": "TrafficMirrorFilterRules",
            "shape_name": "TrafficMirrorFilterRuleSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeTrafficMirrorFilters": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TrafficMirroringMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "TrafficMirrorFilterIds": {
            "name": "TrafficMirrorFilterIds",
            "shape_name": "TrafficMirrorFilterIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTrafficMirrorFilters",
      "output": {
        "lists": {
          "TrafficMirrorFilters": {
            "all_fields": [
              "Description",
              "EgressFilterRules",
              "IngressFilterRules",
              "NetworkServices",
              "Tags",
              "TrafficMirrorFilterId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TrafficMirrorFilterId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorFilters": {
            "name": "TrafficMirrorFilters",
            "shape_name": "TrafficMirrorFilterSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeTrafficMirrorSessions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TrafficMirroringMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "TrafficMirrorSessionIds": {
            "name": "TrafficMirrorSessionIds",
            "shape_name": "TrafficMirrorSessionIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTrafficMirrorSessions",
      "output": {
        "lists": {
          "TrafficMirrorSessions": {
            "all_fields": [
              "Description",
              "NetworkInterfaceId",
              "OwnerId",
              "PacketLength",
              "SessionNumber",
              "Tags",
              "TrafficMirrorFilterId",
              "TrafficMirrorSessionId",
              "TrafficMirrorTargetId",
              "VirtualNetworkId"
            ],
            "arn_fields": [],
            "id_fields": [
              "NetworkInterfaceId",
              "OwnerId",
              "TrafficMirrorFilterId",
              "TrafficMirrorSessionId",
              "TrafficMirrorTargetId",
              "VirtualNetworkId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorSessions": {
            "name": "TrafficMirrorSessions",
            "shape_name": "TrafficMirrorSessionSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeTrafficMirrorTargets": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TrafficMirroringMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "TrafficMirrorTargetIds": {
            "name": "TrafficMirrorTargetIds",
            "shape_name": "TrafficMirrorTargetIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTrafficMirrorTargets",
      "output": {
        "lists": {
          "TrafficMirrorTargets": {
            "all_fields": [
              "Description",
              "GatewayLoadBalancerEndpointId",
              "NetworkInterfaceId",
              "NetworkLoadBalancerArn",
              "OwnerId",
              "Tags",
              "TrafficMirrorTargetId",
              "Type"
            ],
            "arn_fields": [
              "NetworkLoadBalancerArn"
            ],
            "id_fields": [
              "GatewayLoadBalancerEndpointId",
              "NetworkInterfaceId",
              "OwnerId",
              "TrafficMirrorTargetId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TrafficMirrorTargets": {
            "name": "TrafficMirrorTargets",
            "shape_name": "TrafficMirrorTargetSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayAttachments": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentIds": {
            "name": "TransitGatewayAttachmentIds",
            "shape_name": "TransitGatewayAttachmentIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayAttachments",
      "output": {
        "lists": {
          "TransitGatewayAttachments": {
            "all_fields": [
              "Association",
              "CreationTime",
              "ResourceId",
              "ResourceOwnerId",
              "ResourceType",
              "State",
              "Tags",
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "TransitGatewayOwnerId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "ResourceOwnerId",
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "TransitGatewayOwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachments": {
            "name": "TransitGatewayAttachments",
            "shape_name": "TransitGatewayAttachmentList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayConnectPeers": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayConnectPeerIds": {
            "name": "TransitGatewayConnectPeerIds",
            "shape_name": "TransitGatewayConnectPeerIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayConnectPeers",
      "output": {
        "lists": {
          "TransitGatewayConnectPeers": {
            "all_fields": [
              "ConnectPeerConfiguration",
              "CreationTime",
              "State",
              "Tags",
              "TransitGatewayAttachmentId",
              "TransitGatewayConnectPeerId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayAttachmentId",
              "TransitGatewayConnectPeerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayConnectPeers": {
            "name": "TransitGatewayConnectPeers",
            "shape_name": "TransitGatewayConnectPeerList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayConnects": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentIds": {
            "name": "TransitGatewayAttachmentIds",
            "shape_name": "TransitGatewayAttachmentIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayConnects",
      "output": {
        "lists": {
          "TransitGatewayConnects": {
            "all_fields": [
              "CreationTime",
              "Options",
              "State",
              "Tags",
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "TransportTransitGatewayAttachmentId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "TransportTransitGatewayAttachmentId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayConnects": {
            "name": "TransitGatewayConnects",
            "shape_name": "TransitGatewayConnectList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayMulticastDomains": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayMulticastDomainIds": {
            "name": "TransitGatewayMulticastDomainIds",
            "shape_name": "TransitGatewayMulticastDomainIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayMulticastDomains",
      "output": {
        "lists": {
          "TransitGatewayMulticastDomains": {
            "all_fields": [
              "CreationTime",
              "Options",
              "OwnerId",
              "State",
              "Tags",
              "TransitGatewayId",
              "TransitGatewayMulticastDomainArn",
              "TransitGatewayMulticastDomainId"
            ],
            "arn_fields": [
              "TransitGatewayMulticastDomainArn"
            ],
            "id_fields": [
              "OwnerId",
              "TransitGatewayId",
              "TransitGatewayMulticastDomainId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayMulticastDomains": {
            "name": "TransitGatewayMulticastDomains",
            "shape_name": "TransitGatewayMulticastDomainList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayPeeringAttachments": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentIds": {
            "name": "TransitGatewayAttachmentIds",
            "shape_name": "TransitGatewayAttachmentIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayPeeringAttachments",
      "output": {
        "lists": {
          "TransitGatewayPeeringAttachments": {
            "all_fields": [
              "AccepterTgwInfo",
              "AccepterTransitGatewayAttachmentId",
              "CreationTime",
              "Options",
              "RequesterTgwInfo",
              "State",
              "Status",
              "Tags",
              "TransitGatewayAttachmentId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AccepterTransitGatewayAttachmentId",
              "TransitGatewayAttachmentId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPeeringAttachments": {
            "name": "TransitGatewayPeeringAttachments",
            "shape_name": "TransitGatewayPeeringAttachmentList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayPolicyTables": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPolicyTableIds": {
            "name": "TransitGatewayPolicyTableIds",
            "shape_name": "TransitGatewayPolicyTableIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayPolicyTables",
      "output": {
        "lists": {
          "TransitGatewayPolicyTables": {
            "all_fields": [
              "CreationTime",
              "State",
              "Tags",
              "TransitGatewayId",
              "TransitGatewayPolicyTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayId",
              "TransitGatewayPolicyTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPolicyTables": {
            "name": "TransitGatewayPolicyTables",
            "shape_name": "TransitGatewayPolicyTableList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayRouteTableAnnouncements": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableAnnouncementIds": {
            "name": "TransitGatewayRouteTableAnnouncementIds",
            "shape_name": "TransitGatewayRouteTableAnnouncementIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayRouteTableAnnouncements",
      "output": {
        "lists": {
          "TransitGatewayRouteTableAnnouncements": {
            "all_fields": [
              "AnnouncementDirection",
              "CoreNetworkId",
              "CreationTime",
              "PeerCoreNetworkId",
              "PeerTransitGatewayId",
              "PeeringAttachmentId",
              "State",
              "Tags",
              "TransitGatewayId",
              "TransitGatewayRouteTableAnnouncementId",
              "TransitGatewayRouteTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "CoreNetworkId",
              "PeerCoreNetworkId",
              "PeerTransitGatewayId",
              "PeeringAttachmentId",
              "TransitGatewayId",
              "TransitGatewayRouteTableAnnouncementId",
              "TransitGatewayRouteTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableAnnouncements": {
            "name": "TransitGatewayRouteTableAnnouncements",
            "shape_name": "TransitGatewayRouteTableAnnouncementList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayRouteTables": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableIds": {
            "name": "TransitGatewayRouteTableIds",
            "shape_name": "TransitGatewayRouteTableIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayRouteTables",
      "output": {
        "lists": {
          "TransitGatewayRouteTables": {
            "all_fields": [
              "CreationTime",
              "DefaultAssociationRouteTable",
              "DefaultPropagationRouteTable",
              "State",
              "Tags",
              "TransitGatewayId",
              "TransitGatewayRouteTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayId",
              "TransitGatewayRouteTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTables": {
            "name": "TransitGatewayRouteTables",
            "shape_name": "TransitGatewayRouteTableList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGatewayVpcAttachments": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentIds": {
            "name": "TransitGatewayAttachmentIds",
            "shape_name": "TransitGatewayAttachmentIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGatewayVpcAttachments",
      "output": {
        "lists": {
          "TransitGatewayVpcAttachments": {
            "all_fields": [
              "CreationTime",
              "Options",
              "State",
              "SubnetIds",
              "Tags",
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "VpcId",
              "VpcOwnerId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayAttachmentId",
              "TransitGatewayId",
              "VpcId",
              "VpcOwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayVpcAttachments": {
            "name": "TransitGatewayVpcAttachments",
            "shape_name": "TransitGatewayVpcAttachmentList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTransitGateways": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayIds": {
            "name": "TransitGatewayIds",
            "shape_name": "TransitGatewayIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeTransitGateways",
      "output": {
        "lists": {
          "TransitGateways": {
            "all_fields": [
              "CreationTime",
              "Description",
              "Options",
              "OwnerId",
              "State",
              "Tags",
              "TransitGatewayArn",
              "TransitGatewayId"
            ],
            "arn_fields": [
              "TransitGatewayArn"
            ],
            "id_fields": [
              "OwnerId",
              "TransitGatewayId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGateways": {
            "name": "TransitGateways",
            "shape_name": "TransitGatewayList",
            "type": "list"
          }
        }
      }
    },
    "DescribeTrunkInterfaceAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AssociationIds": {
            "name": "AssociationIds",
            "shape_name": "TrunkInterfaceAssociationIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeTrunkInterfaceAssociationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeTrunkInterfaceAssociations",
      "output": {
        "lists": {
          "InterfaceAssociations": {
            "all_fields": [
              "AssociationId",
              "BranchInterfaceId",
              "GreKey",
              "InterfaceProtocol",
              "Tags",
              "TrunkInterfaceId",
              "VlanId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AssociationId",
              "BranchInterfaceId",
              "TrunkInterfaceId",
              "VlanId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InterfaceAssociations": {
            "name": "InterfaceAssociations",
            "shape_name": "TrunkInterfaceAssociationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeVerifiedAccessEndpoints": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVerifiedAccessEndpointsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessEndpointIds": {
            "name": "VerifiedAccessEndpointIds",
            "shape_name": "VerifiedAccessEndpointIdList",
            "type": "list"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeVerifiedAccessEndpoints",
      "output": {
        "lists": {
          "VerifiedAccessEndpoints": {
            "all_fields": [
              "ApplicationDomain",
              "AttachmentType",
              "CreationTime",
              "DeletionTime",
              "Description",
              "DeviceValidationDomain",
              "DomainCertificateArn",
              "EndpointDomain",
              "EndpointType",
              "LastUpdatedTime",
              "LoadBalancerOptions",
              "NetworkInterfaceOptions",
              "SecurityGroupIds",
              "SseSpecification",
              "Status",
              "Tags",
              "VerifiedAccessEndpointId",
              "VerifiedAccessGroupId",
              "VerifiedAccessInstanceId"
            ],
            "arn_fields": [
              "DomainCertificateArn"
            ],
            "id_fields": [
              "VerifiedAccessEndpointId",
              "VerifiedAccessGroupId",
              "VerifiedAccessInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessEndpoints": {
            "name": "VerifiedAccessEndpoints",
            "shape_name": "VerifiedAccessEndpointList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVerifiedAccessGroups": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVerifiedAccessGroupMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessGroupIds": {
            "name": "VerifiedAccessGroupIds",
            "shape_name": "VerifiedAccessGroupIdList",
            "type": "list"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeVerifiedAccessGroups",
      "output": {
        "lists": {
          "VerifiedAccessGroups": {
            "all_fields": [
              "CreationTime",
              "DeletionTime",
              "Description",
              "LastUpdatedTime",
              "Owner",
              "SseSpecification",
              "Tags",
              "VerifiedAccessGroupArn",
              "VerifiedAccessGroupId",
              "VerifiedAccessInstanceId"
            ],
            "arn_fields": [
              "VerifiedAccessGroupArn"
            ],
            "id_fields": [
              "VerifiedAccessGroupId",
              "VerifiedAccessInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessGroups": {
            "name": "VerifiedAccessGroups",
            "shape_name": "VerifiedAccessGroupList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVerifiedAccessInstanceLoggingConfigurations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVerifiedAccessInstanceLoggingConfigurationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessInstanceIds": {
            "name": "VerifiedAccessInstanceIds",
            "shape_name": "VerifiedAccessInstanceIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVerifiedAccessInstanceLoggingConfigurations",
      "output": {
        "lists": {
          "LoggingConfigurations": {
            "all_fields": [
              "AccessLogs",
              "VerifiedAccessInstanceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VerifiedAccessInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "LoggingConfigurations": {
            "name": "LoggingConfigurations",
            "shape_name": "VerifiedAccessInstanceLoggingConfigurationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "DescribeVerifiedAccessInstances": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVerifiedAccessInstancesMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessInstanceIds": {
            "name": "VerifiedAccessInstanceIds",
            "shape_name": "VerifiedAccessInstanceIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVerifiedAccessInstances",
      "output": {
        "lists": {
          "VerifiedAccessInstances": {
            "all_fields": [
              "CreationTime",
              "Description",
              "FipsEnabled",
              "LastUpdatedTime",
              "Tags",
              "VerifiedAccessInstanceId",
              "VerifiedAccessTrustProviders"
            ],
            "arn_fields": [],
            "id_fields": [
              "VerifiedAccessInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessInstances": {
            "name": "VerifiedAccessInstances",
            "shape_name": "VerifiedAccessInstanceList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVerifiedAccessTrustProviders": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVerifiedAccessTrustProvidersMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessTrustProviderIds": {
            "name": "VerifiedAccessTrustProviderIds",
            "shape_name": "VerifiedAccessTrustProviderIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVerifiedAccessTrustProviders",
      "output": {
        "lists": {
          "VerifiedAccessTrustProviders": {
            "all_fields": [
              "CreationTime",
              "Description",
              "DeviceOptions",
              "DeviceTrustProviderType",
              "LastUpdatedTime",
              "OidcOptions",
              "PolicyReferenceName",
              "SseSpecification",
              "Tags",
              "TrustProviderType",
              "UserTrustProviderType",
              "VerifiedAccessTrustProviderId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VerifiedAccessTrustProviderId"
            ],
            "name_fields": [
              "PolicyReferenceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VerifiedAccessTrustProviders": {
            "name": "VerifiedAccessTrustProviders",
            "shape_name": "VerifiedAccessTrustProviderList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVolumeAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "VolumeAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "VolumeId"
        ]
      },
      "name": "DescribeVolumeAttribute",
      "output": {
        "lists": {
          "ProductCodes": {
            "all_fields": [
              "ProductCodeId",
              "ProductCodeType"
            ],
            "arn_fields": [],
            "id_fields": [
              "ProductCodeId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AutoEnableIO": {
            "name": "AutoEnableIO",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeList",
            "type": "list"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeVolumeStatus": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeIds": {
            "name": "VolumeIds",
            "shape_name": "VolumeIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVolumeStatus",
      "output": {
        "lists": {
          "VolumeStatuses": {
            "all_fields": [
              "Actions",
              "AttachmentStatuses",
              "AvailabilityZone",
              "Events",
              "OutpostArn",
              "VolumeId",
              "VolumeStatus"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeStatuses": {
            "name": "VolumeStatuses",
            "shape_name": "VolumeStatusList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVolumes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeIds": {
            "name": "VolumeIds",
            "shape_name": "VolumeIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVolumes",
      "output": {
        "lists": {
          "Volumes": {
            "all_fields": [
              "Attachments",
              "AvailabilityZone",
              "CreateTime",
              "Encrypted",
              "FastRestored",
              "Iops",
              "KmsKeyId",
              "MultiAttachEnabled",
              "OutpostArn",
              "Size",
              "SnapshotId",
              "SseType",
              "State",
              "Tags",
              "Throughput",
              "VolumeId",
              "VolumeType"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "KmsKeyId",
              "SnapshotId",
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Volumes": {
            "name": "Volumes",
            "shape_name": "VolumeList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVolumesModifications": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeIds": {
            "name": "VolumeIds",
            "shape_name": "VolumeIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVolumesModifications",
      "output": {
        "lists": {
          "VolumesModifications": {
            "all_fields": [
              "EndTime",
              "ModificationState",
              "OriginalIops",
              "OriginalMultiAttachEnabled",
              "OriginalSize",
              "OriginalThroughput",
              "OriginalVolumeType",
              "Progress",
              "StartTime",
              "StatusMessage",
              "TargetIops",
              "TargetMultiAttachEnabled",
              "TargetSize",
              "TargetThroughput",
              "TargetVolumeType",
              "VolumeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VolumesModifications": {
            "name": "VolumesModifications",
            "shape_name": "VolumeModificationList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "VpcAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "VpcId"
        ]
      },
      "name": "DescribeVpcAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "EnableDnsHostnames": {
            "name": "EnableDnsHostnames",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableDnsSupport": {
            "name": "EnableDnsSupport",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableNetworkAddressUsageMetrics": {
            "name": "EnableNetworkAddressUsageMetrics",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeVpcClassicLink": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "VpcIds": {
            "name": "VpcIds",
            "shape_name": "VpcClassicLinkIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcClassicLink",
      "output": {
        "lists": {
          "Vpcs": {
            "all_fields": [
              "ClassicLinkEnabled",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Vpcs": {
            "name": "Vpcs",
            "shape_name": "VpcClassicLinkList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcClassicLinkDnsSupport": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVpcClassicLinkDnsSupportMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "DescribeVpcClassicLinkDnsSupportNextToken",
            "type": "string"
          },
          "VpcIds": {
            "name": "VpcIds",
            "shape_name": "VpcClassicLinkIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcClassicLinkDnsSupport",
      "output": {
        "lists": {
          "Vpcs": {
            "all_fields": [
              "ClassicLinkDnsSupported",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "DescribeVpcClassicLinkDnsSupportNextToken",
            "type": "string"
          },
          "Vpcs": {
            "name": "Vpcs",
            "shape_name": "ClassicLinkDnsSupportList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcEndpointConnectionNotifications": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ConnectionNotificationId": {
            "name": "ConnectionNotificationId",
            "shape_name": "ConnectionNotificationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeVpcEndpointConnectionNotifications",
      "output": {
        "lists": {
          "ConnectionNotificationSet": {
            "all_fields": [
              "ConnectionEvents",
              "ConnectionNotificationArn",
              "ConnectionNotificationId",
              "ConnectionNotificationState",
              "ConnectionNotificationType",
              "ServiceId",
              "VpcEndpointId"
            ],
            "arn_fields": [
              "ConnectionNotificationArn"
            ],
            "id_fields": [
              "ConnectionNotificationId",
              "ServiceId",
              "VpcEndpointId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "ConnectionNotificationSet": {
            "name": "ConnectionNotificationSet",
            "shape_name": "ConnectionNotificationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeVpcEndpointConnections": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DescribeVpcEndpointConnections",
      "output": {
        "lists": {
          "VpcEndpointConnections": {
            "all_fields": [
              "CreationTimestamp",
              "DnsEntries",
              "GatewayLoadBalancerArns",
              "IpAddressType",
              "NetworkLoadBalancerArns",
              "ServiceId",
              "Tags",
              "VpcEndpointConnectionId",
              "VpcEndpointId",
              "VpcEndpointOwner",
              "VpcEndpointState"
            ],
            "arn_fields": [],
            "id_fields": [
              "ServiceId",
              "VpcEndpointConnectionId",
              "VpcEndpointId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcEndpointConnections": {
            "name": "VpcEndpointConnections",
            "shape_name": "VpcEndpointConnectionSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcEndpointServiceConfigurations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceIds": {
            "name": "ServiceIds",
            "shape_name": "VpcEndpointServiceIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcEndpointServiceConfigurations",
      "output": {
        "lists": {
          "ServiceConfigurations": {
            "all_fields": [
              "AcceptanceRequired",
              "AvailabilityZones",
              "BaseEndpointDnsNames",
              "GatewayLoadBalancerArns",
              "ManagesVpcEndpoints",
              "NetworkLoadBalancerArns",
              "PayerResponsibility",
              "PrivateDnsName",
              "PrivateDnsNameConfiguration",
              "ServiceId",
              "ServiceName",
              "ServiceState",
              "ServiceType",
              "SupportedIpAddressTypes",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ServiceId"
            ],
            "name_fields": [
              "PrivateDnsName",
              "ServiceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceConfigurations": {
            "name": "ServiceConfigurations",
            "shape_name": "ServiceConfigurationSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcEndpointServicePermissions": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          }
        },
        "required": [
          "ServiceId"
        ]
      },
      "name": "DescribeVpcEndpointServicePermissions",
      "output": {
        "lists": {
          "AllowedPrincipals": {
            "all_fields": [
              "Principal",
              "PrincipalType",
              "ServiceId",
              "ServicePermissionId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "ServiceId",
              "ServicePermissionId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "AllowedPrincipals": {
            "name": "AllowedPrincipals",
            "shape_name": "AllowedPrincipalSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DescribeVpcEndpointServices": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceNames": {
            "name": "ServiceNames",
            "shape_name": "ValueStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcEndpointServices",
      "output": {
        "lists": {
          "ServiceDetails": {
            "all_fields": [
              "AcceptanceRequired",
              "AvailabilityZones",
              "BaseEndpointDnsNames",
              "ManagesVpcEndpoints",
              "Owner",
              "PayerResponsibility",
              "PrivateDnsName",
              "PrivateDnsNameVerificationState",
              "PrivateDnsNames",
              "ServiceId",
              "ServiceName",
              "ServiceType",
              "SupportedIpAddressTypes",
              "Tags",
              "VpcEndpointPolicySupported"
            ],
            "arn_fields": [],
            "id_fields": [
              "ServiceId"
            ],
            "name_fields": [
              "PrivateDnsName",
              "ServiceName"
            ]
          },
          "ServiceNames": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "ServiceDetails": {
            "name": "ServiceDetails",
            "shape_name": "ServiceDetailSet",
            "type": "list"
          },
          "ServiceNames": {
            "name": "ServiceNames",
            "shape_name": "ValueStringList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcEndpoints": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcEndpointIds": {
            "name": "VpcEndpointIds",
            "shape_name": "VpcEndpointIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcEndpoints",
      "output": {
        "lists": {
          "VpcEndpoints": {
            "all_fields": [
              "CreationTimestamp",
              "DnsEntries",
              "DnsOptions",
              "Groups",
              "IpAddressType",
              "LastError",
              "NetworkInterfaceIds",
              "OwnerId",
              "PolicyDocument",
              "PrivateDnsEnabled",
              "RequesterManaged",
              "RouteTableIds",
              "ServiceName",
              "State",
              "SubnetIds",
              "Tags",
              "VpcEndpointId",
              "VpcEndpointType",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "VpcEndpointId",
              "VpcId"
            ],
            "name_fields": [
              "ServiceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcEndpoints": {
            "name": "VpcEndpoints",
            "shape_name": "VpcEndpointSet",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcPeeringConnections": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVpcPeeringConnectionsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcPeeringConnectionIds": {
            "name": "VpcPeeringConnectionIds",
            "shape_name": "VpcPeeringConnectionIdList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcPeeringConnections",
      "output": {
        "lists": {
          "VpcPeeringConnections": {
            "all_fields": [
              "AccepterVpcInfo",
              "ExpirationTime",
              "RequesterVpcInfo",
              "Status",
              "Tags",
              "VpcPeeringConnectionId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VpcPeeringConnectionId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcPeeringConnections": {
            "name": "VpcPeeringConnections",
            "shape_name": "VpcPeeringConnectionList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpcs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "DescribeVpcsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcIds": {
            "name": "VpcIds",
            "shape_name": "VpcIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpcs",
      "output": {
        "lists": {
          "Vpcs": {
            "all_fields": [
              "CidrBlock",
              "CidrBlockAssociationSet",
              "DhcpOptionsId",
              "InstanceTenancy",
              "Ipv6CidrBlockAssociationSet",
              "IsDefault",
              "OwnerId",
              "State",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "DhcpOptionsId",
              "OwnerId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Vpcs": {
            "name": "Vpcs",
            "shape_name": "VpcList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpnConnections": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "VpnConnectionIds": {
            "name": "VpnConnectionIds",
            "shape_name": "VpnConnectionIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpnConnections",
      "output": {
        "lists": {
          "VpnConnections": {
            "all_fields": [
              "Category",
              "CoreNetworkArn",
              "CoreNetworkAttachmentArn",
              "CustomerGatewayConfiguration",
              "CustomerGatewayId",
              "GatewayAssociationState",
              "Options",
              "Routes",
              "State",
              "Tags",
              "TransitGatewayId",
              "Type",
              "VgwTelemetry",
              "VpnConnectionId",
              "VpnGatewayId"
            ],
            "arn_fields": [
              "CoreNetworkArn",
              "CoreNetworkAttachmentArn"
            ],
            "id_fields": [
              "CustomerGatewayId",
              "TransitGatewayId",
              "VpnConnectionId",
              "VpnGatewayId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "VpnConnections": {
            "name": "VpnConnections",
            "shape_name": "VpnConnectionList",
            "type": "list"
          }
        }
      }
    },
    "DescribeVpnGateways": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "VpnGatewayIds": {
            "name": "VpnGatewayIds",
            "shape_name": "VpnGatewayIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "DescribeVpnGateways",
      "output": {
        "lists": {
          "VpnGateways": {
            "all_fields": [
              "AmazonSideAsn",
              "AvailabilityZone",
              "State",
              "Tags",
              "Type",
              "VpcAttachments",
              "VpnGatewayId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VpnGatewayId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "VpnGateways": {
            "name": "VpnGateways",
            "shape_name": "VpnGatewayList",
            "type": "list"
          }
        }
      }
    },
    "DetachClassicLinkVpc": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId",
          "VpcId"
        ]
      },
      "name": "DetachClassicLinkVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DetachInternetGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InternetGatewayId": {
            "name": "InternetGatewayId",
            "shape_name": "InternetGatewayId",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "InternetGatewayId",
          "VpcId"
        ]
      },
      "name": "DetachInternetGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DetachNetworkInterface": {
      "input": {
        "markers": [],
        "members": {
          "AttachmentId": {
            "name": "AttachmentId",
            "shape_name": "NetworkInterfaceAttachmentId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Force": {
            "name": "Force",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AttachmentId"
        ]
      },
      "name": "DetachNetworkInterface",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DetachVerifiedAccessTrustProvider": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          },
          "VerifiedAccessTrustProviderId": {
            "name": "VerifiedAccessTrustProviderId",
            "shape_name": "VerifiedAccessTrustProviderId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId",
          "VerifiedAccessTrustProviderId"
        ]
      },
      "name": "DetachVerifiedAccessTrustProvider",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessInstance": {
            "name": "VerifiedAccessInstance",
            "shape_name": "VerifiedAccessInstance",
            "type": "structure"
          },
          "VerifiedAccessTrustProvider": {
            "name": "VerifiedAccessTrustProvider",
            "shape_name": "VerifiedAccessTrustProvider",
            "type": "structure"
          }
        }
      }
    },
    "DetachVolume": {
      "input": {
        "markers": [],
        "members": {
          "Device": {
            "name": "Device",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Force": {
            "name": "Force",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceIdForResolver",
            "type": "string"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeIdWithResolver",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "DetachVolume",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociatedResource": {
            "name": "AssociatedResource",
            "shape_name": "String",
            "type": "string"
          },
          "AttachTime": {
            "name": "AttachTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "DeleteOnTermination": {
            "name": "DeleteOnTermination",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Device": {
            "name": "Device",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceOwningService": {
            "name": "InstanceOwningService",
            "shape_name": "String",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "VolumeAttachmentState",
            "type": "string"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DetachVpnGateway": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          }
        },
        "required": [
          "VpcId",
          "VpnGatewayId"
        ]
      },
      "name": "DetachVpnGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DisableAddressTransfer": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AllocationId"
        ]
      },
      "name": "DisableAddressTransfer",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AddressTransfer": {
            "name": "AddressTransfer",
            "shape_name": "AddressTransfer",
            "type": "structure"
          }
        }
      }
    },
    "DisableAwsNetworkPerformanceMetricSubscription": {
      "input": {
        "markers": [],
        "members": {
          "Destination": {
            "name": "Destination",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Metric": {
            "name": "Metric",
            "shape_name": "MetricType",
            "type": "string"
          },
          "Source": {
            "name": "Source",
            "shape_name": "String",
            "type": "string"
          },
          "Statistic": {
            "name": "Statistic",
            "shape_name": "StatisticType",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DisableAwsNetworkPerformanceMetricSubscription",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Output": {
            "name": "Output",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableEbsEncryptionByDefault": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DisableEbsEncryptionByDefault",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "EbsEncryptionByDefault": {
            "name": "EbsEncryptionByDefault",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableFastLaunch": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Force": {
            "name": "Force",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "DisableFastLaunch",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "FastLaunchLaunchTemplateSpecificationResponse",
            "type": "structure"
          },
          "MaxParallelLaunches": {
            "name": "MaxParallelLaunches",
            "shape_name": "Integer",
            "type": "integer"
          },
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceType": {
            "name": "ResourceType",
            "shape_name": "FastLaunchResourceType",
            "type": "string"
          },
          "SnapshotConfiguration": {
            "name": "SnapshotConfiguration",
            "shape_name": "FastLaunchSnapshotConfigurationResponse",
            "type": "structure"
          },
          "State": {
            "name": "State",
            "shape_name": "FastLaunchStateCode",
            "type": "string"
          },
          "StateTransitionReason": {
            "name": "StateTransitionReason",
            "shape_name": "String",
            "type": "string"
          },
          "StateTransitionTime": {
            "name": "StateTransitionTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "DisableFastSnapshotRestores": {
      "input": {
        "markers": [],
        "members": {
          "AvailabilityZones": {
            "name": "AvailabilityZones",
            "shape_name": "AvailabilityZoneStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SourceSnapshotIds": {
            "name": "SourceSnapshotIds",
            "shape_name": "SnapshotIdStringList",
            "type": "list"
          }
        },
        "required": [
          "AvailabilityZones",
          "SourceSnapshotIds"
        ]
      },
      "name": "DisableFastSnapshotRestores",
      "output": {
        "lists": {
          "Successful": {
            "all_fields": [
              "AvailabilityZone",
              "DisabledTime",
              "DisablingTime",
              "EnabledTime",
              "EnablingTime",
              "OptimizingTime",
              "OwnerAlias",
              "OwnerId",
              "SnapshotId",
              "State",
              "StateTransitionReason"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SnapshotId"
            ],
            "name_fields": []
          },
          "Unsuccessful": {
            "all_fields": [
              "FastSnapshotRestoreStateErrors",
              "SnapshotId"
            ],
            "arn_fields": [],
            "id_fields": [
              "SnapshotId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Successful": {
            "name": "Successful",
            "shape_name": "DisableFastSnapshotRestoreSuccessSet",
            "type": "list"
          },
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "DisableFastSnapshotRestoreErrorSet",
            "type": "list"
          }
        }
      }
    },
    "DisableImage": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "DisableImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableImageBlockPublicAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DisableImageBlockPublicAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageBlockPublicAccessState": {
            "name": "ImageBlockPublicAccessState",
            "shape_name": "ImageBlockPublicAccessDisabledState",
            "type": "string"
          }
        }
      }
    },
    "DisableImageDeprecation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "DisableImageDeprecation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableImageDeregistrationProtection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "DisableImageDeregistrationProtection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DisableIpamOrganizationAdminAccount": {
      "input": {
        "markers": [],
        "members": {
          "DelegatedAdminAccountId": {
            "name": "DelegatedAdminAccountId",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "DelegatedAdminAccountId"
        ]
      },
      "name": "DisableIpamOrganizationAdminAccount",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Success": {
            "name": "Success",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableSerialConsoleAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DisableSerialConsoleAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SerialConsoleAccessEnabled": {
            "name": "SerialConsoleAccessEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableSnapshotBlockPublicAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "DisableSnapshotBlockPublicAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "State": {
            "name": "State",
            "shape_name": "SnapshotBlockPublicAccessState",
            "type": "string"
          }
        }
      }
    },
    "DisableTransitGatewayRouteTablePropagation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "name": "TransitGatewayRouteTableAnnouncementId",
            "shape_name": "TransitGatewayRouteTableAnnouncementId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "DisableTransitGatewayRouteTablePropagation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Propagation": {
            "name": "Propagation",
            "shape_name": "TransitGatewayPropagation",
            "type": "structure"
          }
        }
      }
    },
    "DisableVgwRoutePropagation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GatewayId": {
            "name": "GatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          }
        },
        "required": [
          "GatewayId",
          "RouteTableId"
        ]
      },
      "name": "DisableVgwRoutePropagation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DisableVpcClassicLink": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "DisableVpcClassicLink",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisableVpcClassicLinkDnsSupport": {
      "input": {
        "markers": [],
        "members": {
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DisableVpcClassicLinkDnsSupport",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisassociateAddress": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "ElasticIpAssociationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "EipAllocationPublicIp",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "DisassociateAddress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DisassociateClientVpnTargetNetwork": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "AssociationId"
        ]
      },
      "name": "DisassociateClientVpnTargetNetwork",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "AssociationStatus",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateEnclaveCertificateIamRole": {
      "input": {
        "markers": [],
        "members": {
          "CertificateArn": {
            "name": "CertificateArn",
            "shape_name": "CertificateId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RoleArn": {
            "name": "RoleArn",
            "shape_name": "RoleId",
            "type": "string"
          }
        },
        "required": [
          "CertificateArn",
          "RoleArn"
        ]
      },
      "name": "DisassociateEnclaveCertificateIamRole",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisassociateIamInstanceProfile": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "IamInstanceProfileAssociationId",
            "type": "string"
          }
        },
        "required": [
          "AssociationId"
        ]
      },
      "name": "DisassociateIamInstanceProfile",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IamInstanceProfileAssociation": {
            "name": "IamInstanceProfileAssociation",
            "shape_name": "IamInstanceProfileAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateInstanceEventWindow": {
      "input": {
        "markers": [],
        "members": {
          "AssociationTarget": {
            "name": "AssociationTarget",
            "shape_name": "InstanceEventWindowDisassociationRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceEventWindowId": {
            "name": "InstanceEventWindowId",
            "shape_name": "InstanceEventWindowId",
            "type": "string"
          }
        },
        "required": [
          "InstanceEventWindowId",
          "AssociationTarget"
        ]
      },
      "name": "DisassociateInstanceEventWindow",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceEventWindow": {
            "name": "InstanceEventWindow",
            "shape_name": "InstanceEventWindow",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateIpamByoasn": {
      "input": {
        "markers": [],
        "members": {
          "Asn": {
            "name": "Asn",
            "shape_name": "String",
            "type": "string"
          },
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Asn",
          "Cidr"
        ]
      },
      "name": "DisassociateIpamByoasn",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AsnAssociation": {
            "name": "AsnAssociation",
            "shape_name": "AsnAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateIpamResourceDiscovery": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamResourceDiscoveryAssociationId": {
            "name": "IpamResourceDiscoveryAssociationId",
            "shape_name": "IpamResourceDiscoveryAssociationId",
            "type": "string"
          }
        },
        "required": [
          "IpamResourceDiscoveryAssociationId"
        ]
      },
      "name": "DisassociateIpamResourceDiscovery",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceDiscoveryAssociation": {
            "name": "IpamResourceDiscoveryAssociation",
            "shape_name": "IpamResourceDiscoveryAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateNatGatewayAddress": {
      "input": {
        "markers": [],
        "members": {
          "AssociationIds": {
            "name": "AssociationIds",
            "shape_name": "EipAssociationIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxDrainDurationSeconds": {
            "name": "MaxDrainDurationSeconds",
            "shape_name": "DrainSeconds",
            "type": "integer"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        },
        "required": [
          "NatGatewayId",
          "AssociationIds"
        ]
      },
      "name": "DisassociateNatGatewayAddress",
      "output": {
        "lists": {
          "NatGatewayAddresses": {
            "all_fields": [
              "AllocationId",
              "AssociationId",
              "FailureMessage",
              "IsPrimary",
              "NetworkInterfaceId",
              "PrivateIp",
              "PublicIp",
              "Status"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AssociationId",
              "NetworkInterfaceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "NatGatewayAddresses": {
            "name": "NatGatewayAddresses",
            "shape_name": "NatGatewayAddressList",
            "type": "list"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        }
      }
    },
    "DisassociateRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "RouteTableAssociationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AssociationId"
        ]
      },
      "name": "DisassociateRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "DisassociateSubnetCidrBlock": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "SubnetCidrAssociationId",
            "type": "string"
          }
        },
        "required": [
          "AssociationId"
        ]
      },
      "name": "DisassociateSubnetCidrBlock",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Ipv6CidrBlockAssociation": {
            "name": "Ipv6CidrBlockAssociation",
            "shape_name": "SubnetIpv6CidrBlockAssociation",
            "type": "structure"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "DisassociateTransitGatewayMulticastDomain": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "TransitGatewaySubnetIdList",
            "type": "list"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId",
          "TransitGatewayAttachmentId",
          "SubnetIds"
        ]
      },
      "name": "DisassociateTransitGatewayMulticastDomain",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayMulticastDomainAssociations",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateTransitGatewayPolicyTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayPolicyTableId": {
            "name": "TransitGatewayPolicyTableId",
            "shape_name": "TransitGatewayPolicyTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayPolicyTableId",
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "DisassociateTransitGatewayPolicyTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Association": {
            "name": "Association",
            "shape_name": "TransitGatewayPolicyTableAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateTransitGatewayRouteTable": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "DisassociateTransitGatewayRouteTable",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Association": {
            "name": "Association",
            "shape_name": "TransitGatewayAssociation",
            "type": "structure"
          }
        }
      }
    },
    "DisassociateTrunkInterface": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "TrunkInterfaceAssociationId",
            "type": "string"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AssociationId"
        ]
      },
      "name": "DisassociateTrunkInterface",
      "output": {
        "lists": {},
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "DisassociateVpcCidrBlock": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "VpcCidrAssociationId",
            "type": "string"
          }
        },
        "required": [
          "AssociationId"
        ]
      },
      "name": "DisassociateVpcCidrBlock",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CidrBlockAssociation": {
            "name": "CidrBlockAssociation",
            "shape_name": "VpcCidrBlockAssociation",
            "type": "structure"
          },
          "Ipv6CidrBlockAssociation": {
            "name": "Ipv6CidrBlockAssociation",
            "shape_name": "VpcIpv6CidrBlockAssociation",
            "type": "structure"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "EnableAddressTransfer": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransferAccountId": {
            "name": "TransferAccountId",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "AllocationId",
          "TransferAccountId"
        ]
      },
      "name": "EnableAddressTransfer",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AddressTransfer": {
            "name": "AddressTransfer",
            "shape_name": "AddressTransfer",
            "type": "structure"
          }
        }
      }
    },
    "EnableAwsNetworkPerformanceMetricSubscription": {
      "input": {
        "markers": [],
        "members": {
          "Destination": {
            "name": "Destination",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Metric": {
            "name": "Metric",
            "shape_name": "MetricType",
            "type": "string"
          },
          "Source": {
            "name": "Source",
            "shape_name": "String",
            "type": "string"
          },
          "Statistic": {
            "name": "Statistic",
            "shape_name": "StatisticType",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "EnableAwsNetworkPerformanceMetricSubscription",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Output": {
            "name": "Output",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableEbsEncryptionByDefault": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "EnableEbsEncryptionByDefault",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "EbsEncryptionByDefault": {
            "name": "EbsEncryptionByDefault",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableFastLaunch": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "FastLaunchLaunchTemplateSpecificationRequest",
            "type": "structure"
          },
          "MaxParallelLaunches": {
            "name": "MaxParallelLaunches",
            "shape_name": "Integer",
            "type": "integer"
          },
          "ResourceType": {
            "name": "ResourceType",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotConfiguration": {
            "name": "SnapshotConfiguration",
            "shape_name": "FastLaunchSnapshotConfigurationRequest",
            "type": "structure"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "EnableFastLaunch",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "FastLaunchLaunchTemplateSpecificationResponse",
            "type": "structure"
          },
          "MaxParallelLaunches": {
            "name": "MaxParallelLaunches",
            "shape_name": "Integer",
            "type": "integer"
          },
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceType": {
            "name": "ResourceType",
            "shape_name": "FastLaunchResourceType",
            "type": "string"
          },
          "SnapshotConfiguration": {
            "name": "SnapshotConfiguration",
            "shape_name": "FastLaunchSnapshotConfigurationResponse",
            "type": "structure"
          },
          "State": {
            "name": "State",
            "shape_name": "FastLaunchStateCode",
            "type": "string"
          },
          "StateTransitionReason": {
            "name": "StateTransitionReason",
            "shape_name": "String",
            "type": "string"
          },
          "StateTransitionTime": {
            "name": "StateTransitionTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "EnableFastSnapshotRestores": {
      "input": {
        "markers": [],
        "members": {
          "AvailabilityZones": {
            "name": "AvailabilityZones",
            "shape_name": "AvailabilityZoneStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SourceSnapshotIds": {
            "name": "SourceSnapshotIds",
            "shape_name": "SnapshotIdStringList",
            "type": "list"
          }
        },
        "required": [
          "AvailabilityZones",
          "SourceSnapshotIds"
        ]
      },
      "name": "EnableFastSnapshotRestores",
      "output": {
        "lists": {
          "Successful": {
            "all_fields": [
              "AvailabilityZone",
              "DisabledTime",
              "DisablingTime",
              "EnabledTime",
              "EnablingTime",
              "OptimizingTime",
              "OwnerAlias",
              "OwnerId",
              "SnapshotId",
              "State",
              "StateTransitionReason"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SnapshotId"
            ],
            "name_fields": []
          },
          "Unsuccessful": {
            "all_fields": [
              "FastSnapshotRestoreStateErrors",
              "SnapshotId"
            ],
            "arn_fields": [],
            "id_fields": [
              "SnapshotId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Successful": {
            "name": "Successful",
            "shape_name": "EnableFastSnapshotRestoreSuccessSet",
            "type": "list"
          },
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "EnableFastSnapshotRestoreErrorSet",
            "type": "list"
          }
        }
      }
    },
    "EnableImage": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "EnableImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableImageBlockPublicAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageBlockPublicAccessState": {
            "name": "ImageBlockPublicAccessState",
            "shape_name": "ImageBlockPublicAccessEnabledState",
            "type": "string"
          }
        },
        "required": [
          "ImageBlockPublicAccessState"
        ]
      },
      "name": "EnableImageBlockPublicAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageBlockPublicAccessState": {
            "name": "ImageBlockPublicAccessState",
            "shape_name": "ImageBlockPublicAccessEnabledState",
            "type": "string"
          }
        }
      }
    },
    "EnableImageDeprecation": {
      "input": {
        "markers": [],
        "members": {
          "DeprecateAt": {
            "name": "DeprecateAt",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId",
          "DeprecateAt"
        ]
      },
      "name": "EnableImageDeprecation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableImageDeregistrationProtection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "WithCooldown": {
            "name": "WithCooldown",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "EnableImageDeregistrationProtection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "EnableIpamOrganizationAdminAccount": {
      "input": {
        "markers": [],
        "members": {
          "DelegatedAdminAccountId": {
            "name": "DelegatedAdminAccountId",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "DelegatedAdminAccountId"
        ]
      },
      "name": "EnableIpamOrganizationAdminAccount",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Success": {
            "name": "Success",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableReachabilityAnalyzerOrganizationSharing": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "EnableReachabilityAnalyzerOrganizationSharing",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableSerialConsoleAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "EnableSerialConsoleAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SerialConsoleAccessEnabled": {
            "name": "SerialConsoleAccessEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableSnapshotBlockPublicAccess": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "State": {
            "name": "State",
            "shape_name": "SnapshotBlockPublicAccessState",
            "type": "string"
          }
        },
        "required": [
          "State"
        ]
      },
      "name": "EnableSnapshotBlockPublicAccess",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "State": {
            "name": "State",
            "shape_name": "SnapshotBlockPublicAccessState",
            "type": "string"
          }
        }
      }
    },
    "EnableTransitGatewayRouteTablePropagation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableAnnouncementId": {
            "name": "TransitGatewayRouteTableAnnouncementId",
            "shape_name": "TransitGatewayRouteTableAnnouncementId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "EnableTransitGatewayRouteTablePropagation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Propagation": {
            "name": "Propagation",
            "shape_name": "TransitGatewayPropagation",
            "type": "structure"
          }
        }
      }
    },
    "EnableVgwRoutePropagation": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GatewayId": {
            "name": "GatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          }
        },
        "required": [
          "GatewayId",
          "RouteTableId"
        ]
      },
      "name": "EnableVgwRoutePropagation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "EnableVolumeIO": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "EnableVolumeIO",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "EnableVpcClassicLink": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "EnableVpcClassicLink",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "EnableVpcClassicLinkDnsSupport": {
      "input": {
        "markers": [],
        "members": {
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "EnableVpcClassicLinkDnsSupport",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ExportClientVpnClientCertificateRevocationList": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "ExportClientVpnClientCertificateRevocationList",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CertificateRevocationList": {
            "name": "CertificateRevocationList",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "ClientCertificateRevocationListStatus",
            "type": "structure"
          }
        }
      }
    },
    "ExportClientVpnClientConfiguration": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "ExportClientVpnClientConfiguration",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ClientConfiguration": {
            "name": "ClientConfiguration",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ExportImage": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DiskImageFormat": {
            "name": "DiskImageFormat",
            "shape_name": "DiskImageFormat",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "RoleName": {
            "name": "RoleName",
            "shape_name": "String",
            "type": "string"
          },
          "S3ExportLocation": {
            "name": "S3ExportLocation",
            "shape_name": "ExportTaskS3LocationRequest",
            "type": "structure"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "DiskImageFormat",
          "ImageId",
          "S3ExportLocation"
        ]
      },
      "name": "ExportImage",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DiskImageFormat": {
            "name": "DiskImageFormat",
            "shape_name": "DiskImageFormat",
            "type": "string"
          },
          "ExportImageTaskId": {
            "name": "ExportImageTaskId",
            "shape_name": "String",
            "type": "string"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          },
          "Progress": {
            "name": "Progress",
            "shape_name": "String",
            "type": "string"
          },
          "RoleName": {
            "name": "RoleName",
            "shape_name": "String",
            "type": "string"
          },
          "S3ExportLocation": {
            "name": "S3ExportLocation",
            "shape_name": "ExportTaskS3Location",
            "type": "structure"
          },
          "Status": {
            "name": "Status",
            "shape_name": "String",
            "type": "string"
          },
          "StatusMessage": {
            "name": "StatusMessage",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "ExportTransitGatewayRoutes": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "S3Bucket": {
            "name": "S3Bucket",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "S3Bucket"
        ]
      },
      "name": "ExportTransitGatewayRoutes",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "S3Location": {
            "name": "S3Location",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetAssociatedEnclaveCertificateIamRoles": {
      "input": {
        "markers": [],
        "members": {
          "CertificateArn": {
            "name": "CertificateArn",
            "shape_name": "CertificateId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "CertificateArn"
        ]
      },
      "name": "GetAssociatedEnclaveCertificateIamRoles",
      "output": {
        "lists": {
          "AssociatedRoles": {
            "all_fields": [
              "AssociatedRoleArn",
              "CertificateS3BucketName",
              "CertificateS3ObjectKey",
              "EncryptionKmsKeyId"
            ],
            "arn_fields": [
              "AssociatedRoleArn"
            ],
            "id_fields": [
              "EncryptionKmsKeyId"
            ],
            "name_fields": [
              "CertificateS3BucketName"
            ]
          }
        },
        "markers": [],
        "members": {
          "AssociatedRoles": {
            "name": "AssociatedRoles",
            "shape_name": "AssociatedRolesList",
            "type": "list"
          }
        }
      }
    },
    "GetAssociatedIpv6PoolCidrs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Ipv6PoolMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv6PoolEc2Id",
            "type": "string"
          }
        },
        "required": [
          "PoolId"
        ]
      },
      "name": "GetAssociatedIpv6PoolCidrs",
      "output": {
        "lists": {
          "Ipv6CidrAssociations": {
            "all_fields": [
              "AssociatedResource",
              "Ipv6Cidr"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Ipv6CidrAssociations": {
            "name": "Ipv6CidrAssociations",
            "shape_name": "Ipv6CidrAssociationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetAwsNetworkPerformanceData": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DataQueries": {
            "name": "DataQueries",
            "shape_name": "DataQueries",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndTime": {
            "name": "EndTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        },
        "required": null
      },
      "name": "GetAwsNetworkPerformanceData",
      "output": {
        "lists": {
          "DataResponses": {
            "all_fields": [
              "Destination",
              "Id",
              "Metric",
              "MetricPoints",
              "Period",
              "Source",
              "Statistic"
            ],
            "arn_fields": [],
            "id_fields": [
              "Id"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "DataResponses": {
            "name": "DataResponses",
            "shape_name": "DataResponses",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetCapacityReservationUsage": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationId": {
            "name": "CapacityReservationId",
            "shape_name": "CapacityReservationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetCapacityReservationUsageRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "CapacityReservationId"
        ]
      },
      "name": "GetCapacityReservationUsage",
      "output": {
        "lists": {
          "InstanceUsages": {
            "all_fields": [
              "AccountId",
              "UsedInstanceCount"
            ],
            "arn_fields": [],
            "id_fields": [
              "AccountId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "AvailableInstanceCount": {
            "name": "AvailableInstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "CapacityReservationId": {
            "name": "CapacityReservationId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceUsages": {
            "name": "InstanceUsages",
            "shape_name": "InstanceUsageSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "State": {
            "name": "State",
            "shape_name": "CapacityReservationState",
            "type": "string"
          },
          "TotalInstanceCount": {
            "name": "TotalInstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          }
        }
      }
    },
    "GetCoipPoolUsage": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "CoipPoolMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolCoipId",
            "type": "string"
          }
        },
        "required": [
          "PoolId"
        ]
      },
      "name": "GetCoipPoolUsage",
      "output": {
        "lists": {
          "CoipAddressUsages": {
            "all_fields": [
              "AllocationId",
              "AwsAccountId",
              "AwsService",
              "CoIp"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AwsAccountId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CoipAddressUsages": {
            "name": "CoipAddressUsages",
            "shape_name": "CoipAddressUsageSet",
            "type": "list"
          },
          "CoipPoolId": {
            "name": "CoipPoolId",
            "shape_name": "String",
            "type": "string"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "String",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetConsoleOutput": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "Latest": {
            "name": "Latest",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "GetConsoleOutput",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "Output": {
            "name": "Output",
            "shape_name": "String",
            "type": "string"
          },
          "Timestamp": {
            "name": "Timestamp",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "GetConsoleScreenshot": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "WakeUp": {
            "name": "WakeUp",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "GetConsoleScreenshot",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageData": {
            "name": "ImageData",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetDefaultCreditSpecification": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceFamily": {
            "name": "InstanceFamily",
            "shape_name": "UnlimitedSupportedInstanceFamily",
            "type": "string"
          }
        },
        "required": [
          "InstanceFamily"
        ]
      },
      "name": "GetDefaultCreditSpecification",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceFamilyCreditSpecification": {
            "name": "InstanceFamilyCreditSpecification",
            "shape_name": "InstanceFamilyCreditSpecification",
            "type": "structure"
          }
        }
      }
    },
    "GetEbsDefaultKmsKeyId": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetEbsDefaultKmsKeyId",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetEbsEncryptionByDefault": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetEbsEncryptionByDefault",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "EbsEncryptionByDefault": {
            "name": "EbsEncryptionByDefault",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SseType": {
            "name": "SseType",
            "shape_name": "SSEType",
            "type": "string"
          }
        }
      }
    },
    "GetFlowLogsIntegrationTemplate": {
      "input": {
        "markers": [],
        "members": {
          "ConfigDeliveryS3DestinationArn": {
            "name": "ConfigDeliveryS3DestinationArn",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FlowLogId": {
            "name": "FlowLogId",
            "shape_name": "VpcFlowLogId",
            "type": "string"
          },
          "IntegrateServices": {
            "name": "IntegrateServices",
            "shape_name": "IntegrateServices",
            "type": "structure"
          }
        },
        "required": [
          "FlowLogId",
          "ConfigDeliveryS3DestinationArn",
          "IntegrateServices"
        ]
      },
      "name": "GetFlowLogsIntegrationTemplate",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Result": {
            "name": "Result",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetGroupsForCapacityReservation": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationId": {
            "name": "CapacityReservationId",
            "shape_name": "CapacityReservationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetGroupsForCapacityReservationRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "CapacityReservationId"
        ]
      },
      "name": "GetGroupsForCapacityReservation",
      "output": {
        "lists": {
          "CapacityReservationGroups": {
            "all_fields": [
              "GroupArn",
              "OwnerId"
            ],
            "arn_fields": [
              "GroupArn"
            ],
            "id_fields": [
              "OwnerId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "CapacityReservationGroups": {
            "name": "CapacityReservationGroups",
            "shape_name": "CapacityReservationGroupSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetHostReservationPurchasePreview": {
      "input": {
        "markers": [],
        "members": {
          "HostIdSet": {
            "name": "HostIdSet",
            "shape_name": "RequestHostIdSet",
            "type": "list"
          },
          "OfferingId": {
            "name": "OfferingId",
            "shape_name": "OfferingId",
            "type": "string"
          }
        },
        "required": [
          "HostIdSet",
          "OfferingId"
        ]
      },
      "name": "GetHostReservationPurchasePreview",
      "output": {
        "lists": {
          "Purchase": {
            "all_fields": [
              "CurrencyCode",
              "Duration",
              "HostIdSet",
              "HostReservationId",
              "HourlyPrice",
              "InstanceFamily",
              "PaymentOption",
              "UpfrontPrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "HostReservationId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "CurrencyCode": {
            "name": "CurrencyCode",
            "shape_name": "CurrencyCodeValues",
            "type": "string"
          },
          "Purchase": {
            "name": "Purchase",
            "shape_name": "PurchaseSet",
            "type": "list"
          },
          "TotalHourlyPrice": {
            "name": "TotalHourlyPrice",
            "shape_name": "String",
            "type": "string"
          },
          "TotalUpfrontPrice": {
            "name": "TotalUpfrontPrice",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetImageBlockPublicAccessState": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetImageBlockPublicAccessState",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageBlockPublicAccessState": {
            "name": "ImageBlockPublicAccessState",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetInstanceMetadataDefaults": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetInstanceMetadataDefaults",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AccountLevel": {
            "name": "AccountLevel",
            "shape_name": "InstanceMetadataDefaultsResponse",
            "type": "structure"
          }
        }
      }
    },
    "GetInstanceTpmEkPub": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "KeyFormat": {
            "name": "KeyFormat",
            "shape_name": "EkPubKeyFormat",
            "type": "string"
          },
          "KeyType": {
            "name": "KeyType",
            "shape_name": "EkPubKeyType",
            "type": "string"
          }
        },
        "required": [
          "InstanceId",
          "KeyType",
          "KeyFormat"
        ]
      },
      "name": "GetInstanceTpmEkPub",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "KeyFormat": {
            "name": "KeyFormat",
            "shape_name": "EkPubKeyFormat",
            "type": "string"
          },
          "KeyType": {
            "name": "KeyType",
            "shape_name": "EkPubKeyType",
            "type": "string"
          },
          "KeyValue": {
            "name": "KeyValue",
            "shape_name": "EkPubKeyValue",
            "type": "string"
          }
        }
      }
    },
    "GetInstanceTypesFromInstanceRequirements": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "ArchitectureTypes": {
            "name": "ArchitectureTypes",
            "shape_name": "ArchitectureTypeSet",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceRequirements": {
            "name": "InstanceRequirements",
            "shape_name": "InstanceRequirementsRequest",
            "type": "structure"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VirtualizationTypes": {
            "name": "VirtualizationTypes",
            "shape_name": "VirtualizationTypeSet",
            "type": "list"
          }
        },
        "required": [
          "ArchitectureTypes",
          "VirtualizationTypes",
          "InstanceRequirements"
        ]
      },
      "name": "GetInstanceTypesFromInstanceRequirements",
      "output": {
        "lists": {
          "InstanceTypes": {
            "all_fields": [
              "InstanceType"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "InstanceTypes": {
            "name": "InstanceTypes",
            "shape_name": "InstanceTypeInfoFromInstanceRequirementsSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetInstanceUefiData": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "GetInstanceUefiData",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "UefiData": {
            "name": "UefiData",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetIpamAddressHistory": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndTime": {
            "name": "EndTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "IpamScopeId": {
            "name": "IpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamAddressHistoryMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "Cidr",
          "IpamScopeId"
        ]
      },
      "name": "GetIpamAddressHistory",
      "output": {
        "lists": {
          "HistoryRecords": {
            "all_fields": [
              "ResourceCidr",
              "ResourceComplianceStatus",
              "ResourceId",
              "ResourceName",
              "ResourceOverlapStatus",
              "ResourceOwnerId",
              "ResourceRegion",
              "ResourceType",
              "SampledEndTime",
              "SampledStartTime",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "ResourceOwnerId",
              "VpcId"
            ],
            "name_fields": [
              "ResourceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "HistoryRecords": {
            "name": "HistoryRecords",
            "shape_name": "IpamAddressHistoryRecordSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetIpamDiscoveredAccounts": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DiscoveryRegion": {
            "name": "DiscoveryRegion",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "IpamResourceDiscoveryId",
          "DiscoveryRegion"
        ]
      },
      "name": "GetIpamDiscoveredAccounts",
      "output": {
        "lists": {
          "IpamDiscoveredAccounts": {
            "all_fields": [
              "AccountId",
              "DiscoveryRegion",
              "FailureReason",
              "LastAttemptedDiscoveryTime",
              "LastSuccessfulDiscoveryTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "AccountId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamDiscoveredAccounts": {
            "name": "IpamDiscoveredAccounts",
            "shape_name": "IpamDiscoveredAccountSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetIpamDiscoveredPublicAddresses": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "AddressRegion": {
            "name": "AddressRegion",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "IpamResourceDiscoveryId",
          "AddressRegion"
        ]
      },
      "name": "GetIpamDiscoveredPublicAddresses",
      "output": {
        "lists": {
          "IpamDiscoveredPublicAddresses": {
            "all_fields": [
              "Address",
              "AddressAllocationId",
              "AddressOwnerId",
              "AddressRegion",
              "AddressType",
              "AssociationStatus",
              "InstanceId",
              "IpamResourceDiscoveryId",
              "NetworkBorderGroup",
              "NetworkInterfaceDescription",
              "NetworkInterfaceId",
              "PublicIpv4PoolId",
              "SampleTime",
              "SecurityGroups",
              "Service",
              "ServiceResource",
              "SubnetId",
              "Tags",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AddressAllocationId",
              "AddressOwnerId",
              "InstanceId",
              "IpamResourceDiscoveryId",
              "NetworkInterfaceId",
              "PublicIpv4PoolId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamDiscoveredPublicAddresses": {
            "name": "IpamDiscoveredPublicAddresses",
            "shape_name": "IpamDiscoveredPublicAddressSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "OldestSampleTime": {
            "name": "OldestSampleTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "GetIpamDiscoveredResourceCidrs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "ResourceRegion": {
            "name": "ResourceRegion",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "IpamResourceDiscoveryId",
          "ResourceRegion"
        ]
      },
      "name": "GetIpamDiscoveredResourceCidrs",
      "output": {
        "lists": {
          "IpamDiscoveredResourceCidrs": {
            "all_fields": [
              "AvailabilityZoneId",
              "IpUsage",
              "IpamResourceDiscoveryId",
              "NetworkInterfaceAttachmentStatus",
              "ResourceCidr",
              "ResourceId",
              "ResourceOwnerId",
              "ResourceRegion",
              "ResourceTags",
              "ResourceType",
              "SampleTime",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AvailabilityZoneId",
              "IpamResourceDiscoveryId",
              "ResourceId",
              "ResourceOwnerId",
              "VpcId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamDiscoveredResourceCidrs": {
            "name": "IpamDiscoveredResourceCidrs",
            "shape_name": "IpamDiscoveredResourceCidrSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetIpamPoolAllocations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamPoolAllocationId": {
            "name": "IpamPoolAllocationId",
            "shape_name": "IpamPoolAllocationId",
            "type": "string"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetIpamPoolAllocationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "GetIpamPoolAllocations",
      "output": {
        "lists": {
          "IpamPoolAllocations": {
            "all_fields": [
              "Cidr",
              "Description",
              "IpamPoolAllocationId",
              "ResourceId",
              "ResourceOwner",
              "ResourceRegion",
              "ResourceType"
            ],
            "arn_fields": [],
            "id_fields": [
              "IpamPoolAllocationId",
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamPoolAllocations": {
            "name": "IpamPoolAllocations",
            "shape_name": "IpamPoolAllocationSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetIpamPoolCidrs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "GetIpamPoolCidrs",
      "output": {
        "lists": {
          "IpamPoolCidrs": {
            "all_fields": [
              "Cidr",
              "FailureReason",
              "IpamPoolCidrId",
              "NetmaskLength",
              "State"
            ],
            "arn_fields": [],
            "id_fields": [
              "IpamPoolCidrId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamPoolCidrs": {
            "name": "IpamPoolCidrs",
            "shape_name": "IpamPoolCidrSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetIpamResourceCidrs": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "IpamScopeId": {
            "name": "IpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "IpamMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "ResourceId": {
            "name": "ResourceId",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceOwner": {
            "name": "ResourceOwner",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceTag": {
            "name": "ResourceTag",
            "shape_name": "RequestIpamResourceTag",
            "type": "structure"
          },
          "ResourceType": {
            "name": "ResourceType",
            "shape_name": "IpamResourceType",
            "type": "string"
          }
        },
        "required": [
          "IpamScopeId"
        ]
      },
      "name": "GetIpamResourceCidrs",
      "output": {
        "lists": {
          "IpamResourceCidrs": {
            "all_fields": [
              "AvailabilityZoneId",
              "ComplianceStatus",
              "IpUsage",
              "IpamId",
              "IpamPoolId",
              "IpamScopeId",
              "ManagementState",
              "OverlapStatus",
              "ResourceCidr",
              "ResourceId",
              "ResourceName",
              "ResourceOwnerId",
              "ResourceRegion",
              "ResourceTags",
              "ResourceType",
              "VpcId"
            ],
            "arn_fields": [],
            "id_fields": [
              "AvailabilityZoneId",
              "IpamId",
              "IpamPoolId",
              "IpamScopeId",
              "ResourceId",
              "ResourceOwnerId",
              "VpcId"
            ],
            "name_fields": [
              "ResourceName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "IpamResourceCidrs": {
            "name": "IpamResourceCidrs",
            "shape_name": "IpamResourceCidrSet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetLaunchTemplateData": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "GetLaunchTemplateData",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LaunchTemplateData": {
            "name": "LaunchTemplateData",
            "shape_name": "ResponseLaunchTemplateData",
            "type": "structure"
          }
        }
      }
    },
    "GetManagedPrefixListAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetManagedPrefixListAssociationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          }
        },
        "required": [
          "PrefixListId"
        ]
      },
      "name": "GetManagedPrefixListAssociations",
      "output": {
        "lists": {
          "PrefixListAssociations": {
            "all_fields": [
              "ResourceId",
              "ResourceOwner"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "PrefixListAssociations": {
            "name": "PrefixListAssociations",
            "shape_name": "PrefixListAssociationSet",
            "type": "list"
          }
        }
      }
    },
    "GetManagedPrefixListEntries": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "PrefixListMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "TargetVersion": {
            "name": "TargetVersion",
            "shape_name": "Long",
            "type": "long"
          }
        },
        "required": [
          "PrefixListId"
        ]
      },
      "name": "GetManagedPrefixListEntries",
      "output": {
        "lists": {
          "Entries": {
            "all_fields": [
              "Cidr",
              "Description"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Entries": {
            "name": "Entries",
            "shape_name": "PrefixListEntrySet",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        }
      }
    },
    "GetNetworkInsightsAccessScopeAnalysisFindings": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetNetworkInsightsAccessScopeAnalysisFindingsMaxResults",
            "type": "integer"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "name": "NetworkInsightsAccessScopeAnalysisId",
            "shape_name": "NetworkInsightsAccessScopeAnalysisId",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsAccessScopeAnalysisId"
        ]
      },
      "name": "GetNetworkInsightsAccessScopeAnalysisFindings",
      "output": {
        "lists": {
          "AnalysisFindings": {
            "all_fields": [
              "FindingComponents",
              "FindingId",
              "NetworkInsightsAccessScopeAnalysisId",
              "NetworkInsightsAccessScopeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "FindingId",
              "NetworkInsightsAccessScopeAnalysisId",
              "NetworkInsightsAccessScopeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "AnalysisFindings": {
            "name": "AnalysisFindings",
            "shape_name": "AccessScopeAnalysisFindingList",
            "type": "list"
          },
          "AnalysisStatus": {
            "name": "AnalysisStatus",
            "shape_name": "AnalysisStatus",
            "type": "string"
          },
          "NetworkInsightsAccessScopeAnalysisId": {
            "name": "NetworkInsightsAccessScopeAnalysisId",
            "shape_name": "NetworkInsightsAccessScopeAnalysisId",
            "type": "string"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetNetworkInsightsAccessScopeContent": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsAccessScopeId": {
            "name": "NetworkInsightsAccessScopeId",
            "shape_name": "NetworkInsightsAccessScopeId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInsightsAccessScopeId"
        ]
      },
      "name": "GetNetworkInsightsAccessScopeContent",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAccessScopeContent": {
            "name": "NetworkInsightsAccessScopeContent",
            "shape_name": "NetworkInsightsAccessScopeContent",
            "type": "structure"
          }
        }
      }
    },
    "GetPasswordData": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "GetPasswordData",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "PasswordData": {
            "name": "PasswordData",
            "shape_name": "PasswordData",
            "type": "string"
          },
          "Timestamp": {
            "name": "Timestamp",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "GetReservedInstancesExchangeQuote": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ReservedInstanceIds": {
            "name": "ReservedInstanceIds",
            "shape_name": "ReservedInstanceIdSet",
            "type": "list"
          },
          "TargetConfigurations": {
            "name": "TargetConfigurations",
            "shape_name": "TargetConfigurationRequestSet",
            "type": "list"
          }
        },
        "required": [
          "ReservedInstanceIds"
        ]
      },
      "name": "GetReservedInstancesExchangeQuote",
      "output": {
        "lists": {
          "ReservedInstanceValueSet": {
            "all_fields": [
              "ReservationValue",
              "ReservedInstanceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ReservedInstanceId"
            ],
            "name_fields": []
          },
          "TargetConfigurationValueSet": {
            "all_fields": [
              "ReservationValue",
              "TargetConfiguration"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "CurrencyCode": {
            "name": "CurrencyCode",
            "shape_name": "String",
            "type": "string"
          },
          "IsValidExchange": {
            "name": "IsValidExchange",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OutputReservedInstancesWillExpireAt": {
            "name": "OutputReservedInstancesWillExpireAt",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "PaymentDue": {
            "name": "PaymentDue",
            "shape_name": "String",
            "type": "string"
          },
          "ReservedInstanceValueRollup": {
            "name": "ReservedInstanceValueRollup",
            "shape_name": "ReservationValue",
            "type": "structure"
          },
          "ReservedInstanceValueSet": {
            "name": "ReservedInstanceValueSet",
            "shape_name": "ReservedInstanceReservationValueSet",
            "type": "list"
          },
          "TargetConfigurationValueRollup": {
            "name": "TargetConfigurationValueRollup",
            "shape_name": "ReservationValue",
            "type": "structure"
          },
          "TargetConfigurationValueSet": {
            "name": "TargetConfigurationValueSet",
            "shape_name": "TargetReservationValueSet",
            "type": "list"
          },
          "ValidationFailureReason": {
            "name": "ValidationFailureReason",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetSecurityGroupsForVpc": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetSecurityGroupsForVpcRequestMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "GetSecurityGroupsForVpc",
      "output": {
        "lists": {
          "SecurityGroupForVpcs": {
            "all_fields": [
              "Description",
              "GroupId",
              "GroupName",
              "OwnerId",
              "PrimaryVpcId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId",
              "OwnerId",
              "PrimaryVpcId"
            ],
            "name_fields": [
              "GroupName"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupForVpcs": {
            "name": "SecurityGroupForVpcs",
            "shape_name": "SecurityGroupForVpcList",
            "type": "list"
          }
        }
      }
    },
    "GetSerialConsoleAccessStatus": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetSerialConsoleAccessStatus",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SerialConsoleAccessEnabled": {
            "name": "SerialConsoleAccessEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "GetSnapshotBlockPublicAccessState": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "GetSnapshotBlockPublicAccessState",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "State": {
            "name": "State",
            "shape_name": "SnapshotBlockPublicAccessState",
            "type": "string"
          }
        }
      }
    },
    "GetSpotPlacementScores": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceRequirementsWithMetadata": {
            "name": "InstanceRequirementsWithMetadata",
            "shape_name": "InstanceRequirementsWithMetadataRequest",
            "type": "structure"
          },
          "InstanceTypes": {
            "name": "InstanceTypes",
            "shape_name": "InstanceTypes",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "SpotPlacementScoresMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "RegionNames": {
            "name": "RegionNames",
            "shape_name": "RegionNames",
            "type": "list"
          },
          "SingleAvailabilityZone": {
            "name": "SingleAvailabilityZone",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TargetCapacity": {
            "name": "TargetCapacity",
            "shape_name": "SpotPlacementScoresTargetCapacity",
            "type": "integer"
          },
          "TargetCapacityUnitType": {
            "name": "TargetCapacityUnitType",
            "shape_name": "TargetCapacityUnitType",
            "type": "string"
          }
        },
        "required": [
          "TargetCapacity"
        ]
      },
      "name": "GetSpotPlacementScores",
      "output": {
        "lists": {
          "SpotPlacementScores": {
            "all_fields": [
              "AvailabilityZoneId",
              "Region",
              "Score"
            ],
            "arn_fields": [],
            "id_fields": [
              "AvailabilityZoneId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SpotPlacementScores": {
            "name": "SpotPlacementScores",
            "shape_name": "SpotPlacementScores",
            "type": "list"
          }
        }
      }
    },
    "GetSubnetCidrReservations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GetSubnetCidrReservationsMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "GetSubnetCidrReservations",
      "output": {
        "lists": {
          "SubnetIpv4CidrReservations": {
            "all_fields": [
              "Cidr",
              "Description",
              "OwnerId",
              "ReservationType",
              "SubnetCidrReservationId",
              "SubnetId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SubnetCidrReservationId",
              "SubnetId"
            ],
            "name_fields": []
          },
          "SubnetIpv6CidrReservations": {
            "all_fields": [
              "Cidr",
              "Description",
              "OwnerId",
              "ReservationType",
              "SubnetCidrReservationId",
              "SubnetId",
              "Tags"
            ],
            "arn_fields": [],
            "id_fields": [
              "OwnerId",
              "SubnetCidrReservationId",
              "SubnetId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SubnetIpv4CidrReservations": {
            "name": "SubnetIpv4CidrReservations",
            "shape_name": "SubnetCidrReservationList",
            "type": "list"
          },
          "SubnetIpv6CidrReservations": {
            "name": "SubnetIpv6CidrReservations",
            "shape_name": "SubnetCidrReservationList",
            "type": "list"
          }
        }
      }
    },
    "GetTransitGatewayAttachmentPropagations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "GetTransitGatewayAttachmentPropagations",
      "output": {
        "lists": {
          "TransitGatewayAttachmentPropagations": {
            "all_fields": [
              "State",
              "TransitGatewayRouteTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TransitGatewayRouteTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayAttachmentPropagations": {
            "name": "TransitGatewayAttachmentPropagations",
            "shape_name": "TransitGatewayAttachmentPropagationList",
            "type": "list"
          }
        }
      }
    },
    "GetTransitGatewayMulticastDomainAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId"
        ]
      },
      "name": "GetTransitGatewayMulticastDomainAssociations",
      "output": {
        "lists": {
          "MulticastDomainAssociations": {
            "all_fields": [
              "ResourceId",
              "ResourceOwnerId",
              "ResourceType",
              "Subnet",
              "TransitGatewayAttachmentId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "ResourceOwnerId",
              "TransitGatewayAttachmentId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "MulticastDomainAssociations": {
            "name": "MulticastDomainAssociations",
            "shape_name": "TransitGatewayMulticastDomainAssociationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetTransitGatewayPolicyTableAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPolicyTableId": {
            "name": "TransitGatewayPolicyTableId",
            "shape_name": "TransitGatewayPolicyTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayPolicyTableId"
        ]
      },
      "name": "GetTransitGatewayPolicyTableAssociations",
      "output": {
        "lists": {
          "Associations": {
            "all_fields": [
              "ResourceId",
              "ResourceType",
              "State",
              "TransitGatewayAttachmentId",
              "TransitGatewayPolicyTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "TransitGatewayAttachmentId",
              "TransitGatewayPolicyTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayPolicyTableAssociationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetTransitGatewayPolicyTableEntries": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPolicyTableId": {
            "name": "TransitGatewayPolicyTableId",
            "shape_name": "TransitGatewayPolicyTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayPolicyTableId"
        ]
      },
      "name": "GetTransitGatewayPolicyTableEntries",
      "output": {
        "lists": {
          "TransitGatewayPolicyTableEntries": {
            "all_fields": [
              "PolicyRule",
              "PolicyRuleNumber",
              "TargetRouteTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "TargetRouteTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "TransitGatewayPolicyTableEntries": {
            "name": "TransitGatewayPolicyTableEntries",
            "shape_name": "TransitGatewayPolicyTableEntryList",
            "type": "list"
          }
        }
      }
    },
    "GetTransitGatewayPrefixListReferences": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "GetTransitGatewayPrefixListReferences",
      "output": {
        "lists": {
          "TransitGatewayPrefixListReferences": {
            "all_fields": [
              "Blackhole",
              "PrefixListId",
              "PrefixListOwnerId",
              "State",
              "TransitGatewayAttachment",
              "TransitGatewayRouteTableId"
            ],
            "arn_fields": [],
            "id_fields": [
              "PrefixListId",
              "PrefixListOwnerId",
              "TransitGatewayRouteTableId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayPrefixListReferences": {
            "name": "TransitGatewayPrefixListReferences",
            "shape_name": "TransitGatewayPrefixListReferenceSet",
            "type": "list"
          }
        }
      }
    },
    "GetTransitGatewayRouteTableAssociations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "GetTransitGatewayRouteTableAssociations",
      "output": {
        "lists": {
          "Associations": {
            "all_fields": [
              "ResourceId",
              "ResourceType",
              "State",
              "TransitGatewayAttachmentId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "TransitGatewayAttachmentId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayRouteTableAssociationList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "GetTransitGatewayRouteTablePropagations": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "GetTransitGatewayRouteTablePropagations",
      "output": {
        "lists": {
          "TransitGatewayRouteTablePropagations": {
            "all_fields": [
              "ResourceId",
              "ResourceType",
              "State",
              "TransitGatewayAttachmentId",
              "TransitGatewayRouteTableAnnouncementId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId",
              "TransitGatewayAttachmentId",
              "TransitGatewayRouteTableAnnouncementId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayRouteTablePropagations": {
            "name": "TransitGatewayRouteTablePropagations",
            "shape_name": "TransitGatewayRouteTablePropagationList",
            "type": "list"
          }
        }
      }
    },
    "GetVerifiedAccessEndpointPolicy": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessEndpointId": {
            "name": "VerifiedAccessEndpointId",
            "shape_name": "VerifiedAccessEndpointId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessEndpointId"
        ]
      },
      "name": "GetVerifiedAccessEndpointPolicy",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "GetVerifiedAccessGroupPolicy": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessGroupId"
        ]
      },
      "name": "GetVerifiedAccessGroupPolicy",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "GetVpnConnectionDeviceSampleConfiguration": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InternetKeyExchangeVersion": {
            "name": "InternetKeyExchangeVersion",
            "shape_name": "String",
            "type": "string"
          },
          "VpnConnectionDeviceTypeId": {
            "name": "VpnConnectionDeviceTypeId",
            "shape_name": "VpnConnectionDeviceTypeId",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId",
          "VpnConnectionDeviceTypeId"
        ]
      },
      "name": "GetVpnConnectionDeviceSampleConfiguration",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnectionDeviceSampleConfiguration": {
            "name": "VpnConnectionDeviceSampleConfiguration",
            "shape_name": "VpnConnectionDeviceSampleConfiguration",
            "type": "string"
          }
        }
      }
    },
    "GetVpnConnectionDeviceTypes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "GVCDMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "GetVpnConnectionDeviceTypes",
      "output": {
        "lists": {
          "VpnConnectionDeviceTypes": {
            "all_fields": [
              "Platform",
              "Software",
              "Vendor",
              "VpnConnectionDeviceTypeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "VpnConnectionDeviceTypeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "NextToken",
            "type": "string"
          },
          "VpnConnectionDeviceTypes": {
            "name": "VpnConnectionDeviceTypes",
            "shape_name": "VpnConnectionDeviceTypeList",
            "type": "list"
          }
        }
      }
    },
    "GetVpnTunnelReplacementStatus": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnTunnelOutsideIpAddress": {
            "name": "VpnTunnelOutsideIpAddress",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId",
          "VpnTunnelOutsideIpAddress"
        ]
      },
      "name": "GetVpnTunnelReplacementStatus",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CustomerGatewayId": {
            "name": "CustomerGatewayId",
            "shape_name": "CustomerGatewayId",
            "type": "string"
          },
          "MaintenanceDetails": {
            "name": "MaintenanceDetails",
            "shape_name": "MaintenanceDetails",
            "type": "structure"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          },
          "VpnTunnelOutsideIpAddress": {
            "name": "VpnTunnelOutsideIpAddress",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ImportClientVpnClientCertificateRevocationList": {
      "input": {
        "markers": [],
        "members": {
          "CertificateRevocationList": {
            "name": "CertificateRevocationList",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "CertificateRevocationList"
        ]
      },
      "name": "ImportClientVpnClientCertificateRevocationList",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ImportImage": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "Architecture": {
            "name": "Architecture",
            "shape_name": "String",
            "type": "string"
          },
          "BootMode": {
            "name": "BootMode",
            "shape_name": "BootModeValues",
            "type": "string"
          },
          "ClientData": {
            "name": "ClientData",
            "shape_name": "ClientData",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DiskContainers": {
            "name": "DiskContainers",
            "shape_name": "ImageDiskContainerList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Hypervisor": {
            "name": "Hypervisor",
            "shape_name": "String",
            "type": "string"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "LicenseSpecifications": {
            "name": "LicenseSpecifications",
            "shape_name": "ImportImageLicenseSpecificationListRequest",
            "type": "list"
          },
          "LicenseType": {
            "name": "LicenseType",
            "shape_name": "String",
            "type": "string"
          },
          "Platform": {
            "name": "Platform",
            "shape_name": "String",
            "type": "string"
          },
          "RoleName": {
            "name": "RoleName",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "UsageOperation": {
            "name": "UsageOperation",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "ImportImage",
      "output": {
        "lists": {
          "LicenseSpecifications": {
            "all_fields": [
              "LicenseConfigurationArn"
            ],
            "arn_fields": [
              "LicenseConfigurationArn"
            ],
            "id_fields": [],
            "name_fields": []
          },
          "SnapshotDetails": {
            "all_fields": [
              "Description",
              "DeviceName",
              "DiskImageSize",
              "Format",
              "Progress",
              "SnapshotId",
              "Status",
              "StatusMessage",
              "Url",
              "UserBucket"
            ],
            "arn_fields": [],
            "id_fields": [
              "SnapshotId"
            ],
            "name_fields": [
              "DeviceName"
            ]
          },
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Architecture": {
            "name": "Architecture",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Hypervisor": {
            "name": "Hypervisor",
            "shape_name": "String",
            "type": "string"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          },
          "ImportTaskId": {
            "name": "ImportTaskId",
            "shape_name": "ImportImageTaskId",
            "type": "string"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "LicenseSpecifications": {
            "name": "LicenseSpecifications",
            "shape_name": "ImportImageLicenseSpecificationListResponse",
            "type": "list"
          },
          "LicenseType": {
            "name": "LicenseType",
            "shape_name": "String",
            "type": "string"
          },
          "Platform": {
            "name": "Platform",
            "shape_name": "String",
            "type": "string"
          },
          "Progress": {
            "name": "Progress",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotDetails": {
            "name": "SnapshotDetails",
            "shape_name": "SnapshotDetailList",
            "type": "list"
          },
          "Status": {
            "name": "Status",
            "shape_name": "String",
            "type": "string"
          },
          "StatusMessage": {
            "name": "StatusMessage",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          },
          "UsageOperation": {
            "name": "UsageOperation",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ImportInstance": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DiskImages": {
            "name": "DiskImages",
            "shape_name": "DiskImageList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchSpecification": {
            "name": "LaunchSpecification",
            "shape_name": "ImportInstanceLaunchSpecification",
            "type": "structure"
          },
          "Platform": {
            "name": "Platform",
            "shape_name": "PlatformValues",
            "type": "string"
          }
        },
        "required": [
          "Platform"
        ]
      },
      "name": "ImportInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ConversionTask": {
            "name": "ConversionTask",
            "shape_name": "ConversionTask",
            "type": "structure"
          }
        }
      }
    },
    "ImportKeyPair": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "String",
            "type": "string"
          },
          "PublicKeyMaterial": {
            "name": "PublicKeyMaterial",
            "shape_name": "Blob",
            "type": "blob"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "KeyName",
          "PublicKeyMaterial"
        ]
      },
      "name": "ImportKeyPair",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "KeyFingerprint": {
            "name": "KeyFingerprint",
            "shape_name": "String",
            "type": "string"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "String",
            "type": "string"
          },
          "KeyPairId": {
            "name": "KeyPairId",
            "shape_name": "String",
            "type": "string"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "ImportSnapshot": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientData": {
            "name": "ClientData",
            "shape_name": "ClientData",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DiskContainer": {
            "name": "DiskContainer",
            "shape_name": "SnapshotDiskContainer",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          },
          "RoleName": {
            "name": "RoleName",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "ImportSnapshot",
      "output": {
        "lists": {
          "Tags": {
            "all_fields": [
              "Key",
              "Value"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "ImportTaskId": {
            "name": "ImportTaskId",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotTaskDetail": {
            "name": "SnapshotTaskDetail",
            "shape_name": "SnapshotTaskDetail",
            "type": "structure"
          },
          "Tags": {
            "name": "Tags",
            "shape_name": "TagList",
            "type": "list"
          }
        }
      }
    },
    "ImportVolume": {
      "input": {
        "markers": [],
        "members": {
          "AvailabilityZone": {
            "name": "AvailabilityZone",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Image": {
            "name": "Image",
            "shape_name": "DiskImageDetail",
            "type": "structure"
          },
          "Volume": {
            "name": "Volume",
            "shape_name": "VolumeDetail",
            "type": "structure"
          }
        },
        "required": [
          "AvailabilityZone",
          "Image",
          "Volume"
        ]
      },
      "name": "ImportVolume",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ConversionTask": {
            "name": "ConversionTask",
            "shape_name": "ConversionTask",
            "type": "structure"
          }
        }
      }
    },
    "ListImagesInRecycleBin": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageIds": {
            "name": "ImageIds",
            "shape_name": "ImageIdStringList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "ListImagesInRecycleBinMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "ListImagesInRecycleBin",
      "output": {
        "lists": {
          "Images": {
            "all_fields": [
              "Description",
              "ImageId",
              "Name",
              "RecycleBinEnterTime",
              "RecycleBinExitTime"
            ],
            "arn_fields": [],
            "id_fields": [
              "ImageId"
            ],
            "name_fields": [
              "Name"
            ]
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "Images": {
            "name": "Images",
            "shape_name": "ImageRecycleBinInfoList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ListSnapshotsInRecycleBin": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "ListSnapshotsInRecycleBinMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotIds": {
            "name": "SnapshotIds",
            "shape_name": "SnapshotIdStringList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "ListSnapshotsInRecycleBin",
      "output": {
        "lists": {
          "Snapshots": {
            "all_fields": [
              "Description",
              "RecycleBinEnterTime",
              "RecycleBinExitTime",
              "SnapshotId",
              "VolumeId"
            ],
            "arn_fields": [],
            "id_fields": [
              "SnapshotId",
              "VolumeId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Snapshots": {
            "name": "Snapshots",
            "shape_name": "SnapshotRecycleBinInfoList",
            "type": "list"
          }
        }
      }
    },
    "LockSnapshot": {
      "input": {
        "markers": [],
        "members": {
          "CoolOffPeriod": {
            "name": "CoolOffPeriod",
            "shape_name": "CoolOffPeriodRequestHours",
            "type": "integer"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExpirationDate": {
            "name": "ExpirationDate",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "LockDuration": {
            "name": "LockDuration",
            "shape_name": "RetentionPeriodRequestDays",
            "type": "integer"
          },
          "LockMode": {
            "name": "LockMode",
            "shape_name": "LockMode",
            "type": "string"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "SnapshotId",
          "LockMode"
        ]
      },
      "name": "LockSnapshot",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CoolOffPeriod": {
            "name": "CoolOffPeriod",
            "shape_name": "CoolOffPeriodResponseHours",
            "type": "integer"
          },
          "CoolOffPeriodExpiresOn": {
            "name": "CoolOffPeriodExpiresOn",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "LockCreatedOn": {
            "name": "LockCreatedOn",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "LockDuration": {
            "name": "LockDuration",
            "shape_name": "RetentionPeriodResponseDays",
            "type": "integer"
          },
          "LockDurationStartTime": {
            "name": "LockDurationStartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "LockExpiresOn": {
            "name": "LockExpiresOn",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "LockState": {
            "name": "LockState",
            "shape_name": "LockState",
            "type": "string"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ModifyAddressAttribute": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "DomainName": {
            "name": "DomainName",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AllocationId"
        ]
      },
      "name": "ModifyAddressAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Address": {
            "name": "Address",
            "shape_name": "AddressAttribute",
            "type": "structure"
          }
        }
      }
    },
    "ModifyAvailabilityZoneGroup": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "String",
            "type": "string"
          },
          "OptInStatus": {
            "name": "OptInStatus",
            "shape_name": "ModifyAvailabilityZoneOptInStatus",
            "type": "string"
          }
        },
        "required": [
          "GroupName",
          "OptInStatus"
        ]
      },
      "name": "ModifyAvailabilityZoneGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyCapacityReservation": {
      "input": {
        "markers": [],
        "members": {
          "Accept": {
            "name": "Accept",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "AdditionalInfo": {
            "name": "AdditionalInfo",
            "shape_name": "String",
            "type": "string"
          },
          "CapacityReservationId": {
            "name": "CapacityReservationId",
            "shape_name": "CapacityReservationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndDate": {
            "name": "EndDate",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "EndDateType": {
            "name": "EndDateType",
            "shape_name": "EndDateType",
            "type": "string"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "CapacityReservationId"
        ]
      },
      "name": "ModifyCapacityReservation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyCapacityReservationFleet": {
      "input": {
        "markers": [],
        "members": {
          "CapacityReservationFleetId": {
            "name": "CapacityReservationFleetId",
            "shape_name": "CapacityReservationFleetId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndDate": {
            "name": "EndDate",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "RemoveEndDate": {
            "name": "RemoveEndDate",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TotalTargetCapacity": {
            "name": "TotalTargetCapacity",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "CapacityReservationFleetId"
        ]
      },
      "name": "ModifyCapacityReservationFleet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyClientVpnEndpoint": {
      "input": {
        "markers": [],
        "members": {
          "ClientConnectOptions": {
            "name": "ClientConnectOptions",
            "shape_name": "ClientConnectOptions",
            "type": "structure"
          },
          "ClientLoginBannerOptions": {
            "name": "ClientLoginBannerOptions",
            "shape_name": "ClientLoginBannerOptions",
            "type": "structure"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "ConnectionLogOptions": {
            "name": "ConnectionLogOptions",
            "shape_name": "ConnectionLogOptions",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DnsServers": {
            "name": "DnsServers",
            "shape_name": "DnsServersOptionsModifyStructure",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "ClientVpnSecurityGroupIdSet",
            "type": "list"
          },
          "SelfServicePortal": {
            "name": "SelfServicePortal",
            "shape_name": "SelfServicePortal",
            "type": "string"
          },
          "ServerCertificateArn": {
            "name": "ServerCertificateArn",
            "shape_name": "String",
            "type": "string"
          },
          "SessionTimeoutHours": {
            "name": "SessionTimeoutHours",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SplitTunnel": {
            "name": "SplitTunnel",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          },
          "VpnPort": {
            "name": "VpnPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "ModifyClientVpnEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyDefaultCreditSpecification": {
      "input": {
        "markers": [],
        "members": {
          "CpuCredits": {
            "name": "CpuCredits",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceFamily": {
            "name": "InstanceFamily",
            "shape_name": "UnlimitedSupportedInstanceFamily",
            "type": "string"
          }
        },
        "required": [
          "InstanceFamily",
          "CpuCredits"
        ]
      },
      "name": "ModifyDefaultCreditSpecification",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceFamilyCreditSpecification": {
            "name": "InstanceFamilyCreditSpecification",
            "shape_name": "InstanceFamilyCreditSpecification",
            "type": "structure"
          }
        }
      }
    },
    "ModifyEbsDefaultKmsKeyId": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "KmsKeyId",
            "type": "string"
          }
        },
        "required": [
          "KmsKeyId"
        ]
      },
      "name": "ModifyEbsDefaultKmsKeyId",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ModifyFleet": {
      "input": {
        "markers": [],
        "members": {
          "Context": {
            "name": "Context",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ExcessCapacityTerminationPolicy": {
            "name": "ExcessCapacityTerminationPolicy",
            "shape_name": "FleetExcessCapacityTerminationPolicy",
            "type": "string"
          },
          "FleetId": {
            "name": "FleetId",
            "shape_name": "FleetId",
            "type": "string"
          },
          "LaunchTemplateConfigs": {
            "name": "LaunchTemplateConfigs",
            "shape_name": "FleetLaunchTemplateConfigListRequest",
            "type": "list"
          },
          "TargetCapacitySpecification": {
            "name": "TargetCapacitySpecification",
            "shape_name": "TargetCapacitySpecificationRequest",
            "type": "structure"
          }
        },
        "required": [
          "FleetId"
        ]
      },
      "name": "ModifyFleet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyFpgaImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "FpgaImageAttributeName",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "FpgaImageId",
            "type": "string"
          },
          "LoadPermission": {
            "name": "LoadPermission",
            "shape_name": "LoadPermissionModifications",
            "type": "structure"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "OperationType": {
            "name": "OperationType",
            "shape_name": "OperationType",
            "type": "string"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeStringList",
            "type": "list"
          },
          "UserGroups": {
            "name": "UserGroups",
            "shape_name": "UserGroupStringList",
            "type": "list"
          },
          "UserIds": {
            "name": "UserIds",
            "shape_name": "UserIdStringList",
            "type": "list"
          }
        },
        "required": [
          "FpgaImageId"
        ]
      },
      "name": "ModifyFpgaImageAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "FpgaImageAttribute": {
            "name": "FpgaImageAttribute",
            "shape_name": "FpgaImageAttribute",
            "type": "structure"
          }
        }
      }
    },
    "ModifyHosts": {
      "input": {
        "markers": [],
        "members": {
          "AutoPlacement": {
            "name": "AutoPlacement",
            "shape_name": "AutoPlacement",
            "type": "string"
          },
          "HostIds": {
            "name": "HostIds",
            "shape_name": "RequestHostIdList",
            "type": "list"
          },
          "HostMaintenance": {
            "name": "HostMaintenance",
            "shape_name": "HostMaintenance",
            "type": "string"
          },
          "HostRecovery": {
            "name": "HostRecovery",
            "shape_name": "HostRecovery",
            "type": "string"
          },
          "InstanceFamily": {
            "name": "InstanceFamily",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "HostIds"
        ]
      },
      "name": "ModifyHosts",
      "output": {
        "lists": {
          "Successful": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Successful": {
            "name": "Successful",
            "shape_name": "ResponseHostIdList",
            "type": "list"
          },
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemList",
            "type": "list"
          }
        }
      }
    },
    "ModifyIdFormat": {
      "input": {
        "markers": [],
        "members": {
          "Resource": {
            "name": "Resource",
            "shape_name": "String",
            "type": "string"
          },
          "UseLongIds": {
            "name": "UseLongIds",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Resource",
          "UseLongIds"
        ]
      },
      "name": "ModifyIdFormat",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyIdentityIdFormat": {
      "input": {
        "markers": [],
        "members": {
          "PrincipalArn": {
            "name": "PrincipalArn",
            "shape_name": "String",
            "type": "string"
          },
          "Resource": {
            "name": "Resource",
            "shape_name": "String",
            "type": "string"
          },
          "UseLongIds": {
            "name": "UseLongIds",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "PrincipalArn",
          "Resource",
          "UseLongIds"
        ]
      },
      "name": "ModifyIdentityIdFormat",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "ImdsSupport": {
            "name": "ImdsSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "LaunchPermission": {
            "name": "LaunchPermission",
            "shape_name": "LaunchPermissionModifications",
            "type": "structure"
          },
          "OperationType": {
            "name": "OperationType",
            "shape_name": "OperationType",
            "type": "string"
          },
          "OrganizationArns": {
            "name": "OrganizationArns",
            "shape_name": "OrganizationArnStringList",
            "type": "list"
          },
          "OrganizationalUnitArns": {
            "name": "OrganizationalUnitArns",
            "shape_name": "OrganizationalUnitArnStringList",
            "type": "list"
          },
          "ProductCodes": {
            "name": "ProductCodes",
            "shape_name": "ProductCodeStringList",
            "type": "list"
          },
          "UserGroups": {
            "name": "UserGroups",
            "shape_name": "UserGroupStringList",
            "type": "list"
          },
          "UserIds": {
            "name": "UserIds",
            "shape_name": "UserIdStringList",
            "type": "list"
          },
          "Value": {
            "name": "Value",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "ModifyImageAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyInstanceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "InstanceAttributeName",
            "type": "string"
          },
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "InstanceBlockDeviceMappingSpecificationList",
            "type": "list"
          },
          "DisableApiStop": {
            "name": "DisableApiStop",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "DisableApiTermination": {
            "name": "DisableApiTermination",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EbsOptimized": {
            "name": "EbsOptimized",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnaSupport": {
            "name": "EnaSupport",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "GroupIdStringList",
            "type": "list"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "InstanceInitiatedShutdownBehavior": {
            "name": "InstanceInitiatedShutdownBehavior",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "Kernel": {
            "name": "Kernel",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "Ramdisk": {
            "name": "Ramdisk",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "SourceDestCheck": {
            "name": "SourceDestCheck",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "SriovNetSupport": {
            "name": "SriovNetSupport",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "UserData": {
            "name": "UserData",
            "shape_name": "BlobAttributeValue",
            "type": "structure"
          },
          "Value": {
            "name": "Value",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "ModifyInstanceAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyInstanceCapacityReservationAttributes": {
      "input": {
        "markers": [],
        "members": {
          "CapacityReservationSpecification": {
            "name": "CapacityReservationSpecification",
            "shape_name": "CapacityReservationSpecification",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId",
          "CapacityReservationSpecification"
        ]
      },
      "name": "ModifyInstanceCapacityReservationAttributes",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyInstanceCreditSpecification": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceCreditSpecifications": {
            "name": "InstanceCreditSpecifications",
            "shape_name": "InstanceCreditSpecificationListRequest",
            "type": "list"
          }
        },
        "required": [
          "InstanceCreditSpecifications"
        ]
      },
      "name": "ModifyInstanceCreditSpecification",
      "output": {
        "lists": {
          "SuccessfulInstanceCreditSpecifications": {
            "all_fields": [
              "InstanceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          },
          "UnsuccessfulInstanceCreditSpecifications": {
            "all_fields": [
              "Error",
              "InstanceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SuccessfulInstanceCreditSpecifications": {
            "name": "SuccessfulInstanceCreditSpecifications",
            "shape_name": "SuccessfulInstanceCreditSpecificationSet",
            "type": "list"
          },
          "UnsuccessfulInstanceCreditSpecifications": {
            "name": "UnsuccessfulInstanceCreditSpecifications",
            "shape_name": "UnsuccessfulInstanceCreditSpecificationSet",
            "type": "list"
          }
        }
      }
    },
    "ModifyInstanceEventStartTime": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceEventId": {
            "name": "InstanceEventId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "NotBefore": {
            "name": "NotBefore",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": [
          "InstanceId",
          "InstanceEventId",
          "NotBefore"
        ]
      },
      "name": "ModifyInstanceEventStartTime",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Event": {
            "name": "Event",
            "shape_name": "InstanceStatusEvent",
            "type": "structure"
          }
        }
      }
    },
    "ModifyInstanceEventWindow": {
      "input": {
        "markers": [],
        "members": {
          "CronExpression": {
            "name": "CronExpression",
            "shape_name": "InstanceEventWindowCronExpression",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceEventWindowId": {
            "name": "InstanceEventWindowId",
            "shape_name": "InstanceEventWindowId",
            "type": "string"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "TimeRanges": {
            "name": "TimeRanges",
            "shape_name": "InstanceEventWindowTimeRangeRequestSet",
            "type": "list"
          }
        },
        "required": [
          "InstanceEventWindowId"
        ]
      },
      "name": "ModifyInstanceEventWindow",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceEventWindow": {
            "name": "InstanceEventWindow",
            "shape_name": "InstanceEventWindow",
            "type": "structure"
          }
        }
      }
    },
    "ModifyInstanceMaintenanceOptions": {
      "input": {
        "markers": [],
        "members": {
          "AutoRecovery": {
            "name": "AutoRecovery",
            "shape_name": "InstanceAutoRecoveryState",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "ModifyInstanceMaintenanceOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AutoRecovery": {
            "name": "AutoRecovery",
            "shape_name": "InstanceAutoRecoveryState",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ModifyInstanceMetadataDefaults": {
      "input": {
        "markers": [
          "HttpTokens"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "HttpEndpoint": {
            "name": "HttpEndpoint",
            "shape_name": "DefaultInstanceMetadataEndpointState",
            "type": "string"
          },
          "HttpPutResponseHopLimit": {
            "name": "HttpPutResponseHopLimit",
            "shape_name": "BoxedInteger",
            "type": "integer"
          },
          "HttpTokens": {
            "name": "HttpTokens",
            "shape_name": "MetadataDefaultHttpTokensState",
            "type": "string"
          },
          "InstanceMetadataTags": {
            "name": "InstanceMetadataTags",
            "shape_name": "DefaultInstanceMetadataTagsState",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "ModifyInstanceMetadataDefaults",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyInstanceMetadataOptions": {
      "input": {
        "markers": [
          "HttpTokens"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "HttpEndpoint": {
            "name": "HttpEndpoint",
            "shape_name": "InstanceMetadataEndpointState",
            "type": "string"
          },
          "HttpProtocolIpv6": {
            "name": "HttpProtocolIpv6",
            "shape_name": "InstanceMetadataProtocolState",
            "type": "string"
          },
          "HttpPutResponseHopLimit": {
            "name": "HttpPutResponseHopLimit",
            "shape_name": "Integer",
            "type": "integer"
          },
          "HttpTokens": {
            "name": "HttpTokens",
            "shape_name": "HttpTokensState",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "InstanceMetadataTags": {
            "name": "InstanceMetadataTags",
            "shape_name": "InstanceMetadataTagsState",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "ModifyInstanceMetadataOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceMetadataOptions": {
            "name": "InstanceMetadataOptions",
            "shape_name": "InstanceMetadataOptionsResponse",
            "type": "structure"
          }
        }
      }
    },
    "ModifyInstancePlacement": {
      "input": {
        "markers": [],
        "members": {
          "Affinity": {
            "name": "Affinity",
            "shape_name": "Affinity",
            "type": "string"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "PlacementGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "PlacementGroupName",
            "type": "string"
          },
          "HostId": {
            "name": "HostId",
            "shape_name": "DedicatedHostId",
            "type": "string"
          },
          "HostResourceGroupArn": {
            "name": "HostResourceGroupArn",
            "shape_name": "String",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "PartitionNumber": {
            "name": "PartitionNumber",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Tenancy": {
            "name": "Tenancy",
            "shape_name": "HostTenancy",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "ModifyInstancePlacement",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyIpam": {
      "input": {
        "markers": [],
        "members": {
          "AddOperatingRegions": {
            "name": "AddOperatingRegions",
            "shape_name": "AddIpamOperatingRegionSet",
            "type": "list"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          },
          "RemoveOperatingRegions": {
            "name": "RemoveOperatingRegions",
            "shape_name": "RemoveIpamOperatingRegionSet",
            "type": "list"
          },
          "Tier": {
            "name": "Tier",
            "shape_name": "IpamTier",
            "type": "string"
          }
        },
        "required": [
          "IpamId"
        ]
      },
      "name": "ModifyIpam",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Ipam": {
            "name": "Ipam",
            "shape_name": "Ipam",
            "type": "structure"
          }
        }
      }
    },
    "ModifyIpamPool": {
      "input": {
        "markers": [],
        "members": {
          "AddAllocationResourceTags": {
            "name": "AddAllocationResourceTags",
            "shape_name": "RequestIpamResourceTagList",
            "type": "list"
          },
          "AllocationDefaultNetmaskLength": {
            "name": "AllocationDefaultNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AllocationMaxNetmaskLength": {
            "name": "AllocationMaxNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AllocationMinNetmaskLength": {
            "name": "AllocationMinNetmaskLength",
            "shape_name": "IpamNetmaskLength",
            "type": "integer"
          },
          "AutoImport": {
            "name": "AutoImport",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ClearAllocationDefaultNetmaskLength": {
            "name": "ClearAllocationDefaultNetmaskLength",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "RemoveAllocationResourceTags": {
            "name": "RemoveAllocationResourceTags",
            "shape_name": "RequestIpamResourceTagList",
            "type": "list"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "ModifyIpamPool",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPool": {
            "name": "IpamPool",
            "shape_name": "IpamPool",
            "type": "structure"
          }
        }
      }
    },
    "ModifyIpamResourceCidr": {
      "input": {
        "markers": [],
        "members": {
          "CurrentIpamScopeId": {
            "name": "CurrentIpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          },
          "DestinationIpamScopeId": {
            "name": "DestinationIpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Monitored": {
            "name": "Monitored",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ResourceCidr": {
            "name": "ResourceCidr",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceId": {
            "name": "ResourceId",
            "shape_name": "String",
            "type": "string"
          },
          "ResourceRegion": {
            "name": "ResourceRegion",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ResourceId",
          "ResourceCidr",
          "ResourceRegion",
          "CurrentIpamScopeId",
          "Monitored"
        ]
      },
      "name": "ModifyIpamResourceCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceCidr": {
            "name": "IpamResourceCidr",
            "shape_name": "IpamResourceCidr",
            "type": "structure"
          }
        }
      }
    },
    "ModifyIpamResourceDiscovery": {
      "input": {
        "markers": [],
        "members": {
          "AddOperatingRegions": {
            "name": "AddOperatingRegions",
            "shape_name": "AddIpamOperatingRegionSet",
            "type": "list"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamResourceDiscoveryId": {
            "name": "IpamResourceDiscoveryId",
            "shape_name": "IpamResourceDiscoveryId",
            "type": "string"
          },
          "RemoveOperatingRegions": {
            "name": "RemoveOperatingRegions",
            "shape_name": "RemoveIpamOperatingRegionSet",
            "type": "list"
          }
        },
        "required": [
          "IpamResourceDiscoveryId"
        ]
      },
      "name": "ModifyIpamResourceDiscovery",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamResourceDiscovery": {
            "name": "IpamResourceDiscovery",
            "shape_name": "IpamResourceDiscovery",
            "type": "structure"
          }
        }
      }
    },
    "ModifyIpamScope": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamScopeId": {
            "name": "IpamScopeId",
            "shape_name": "IpamScopeId",
            "type": "string"
          }
        },
        "required": [
          "IpamScopeId"
        ]
      },
      "name": "ModifyIpamScope",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamScope": {
            "name": "IpamScope",
            "shape_name": "IpamScope",
            "type": "structure"
          }
        }
      }
    },
    "ModifyLaunchTemplate": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DefaultVersion": {
            "name": "DefaultVersion",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LaunchTemplateId": {
            "name": "LaunchTemplateId",
            "shape_name": "LaunchTemplateId",
            "type": "string"
          },
          "LaunchTemplateName": {
            "name": "LaunchTemplateName",
            "shape_name": "LaunchTemplateName",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "ModifyLaunchTemplate",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "LaunchTemplate",
            "type": "structure"
          }
        }
      }
    },
    "ModifyLocalGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "LocalGatewayVirtualInterfaceGroupId": {
            "name": "LocalGatewayVirtualInterfaceGroupId",
            "shape_name": "LocalGatewayVirtualInterfaceGroupId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "ModifyLocalGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "LocalGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "ModifyManagedPrefixList": {
      "input": {
        "markers": [],
        "members": {
          "AddEntries": {
            "name": "AddEntries",
            "shape_name": "AddPrefixListEntries",
            "type": "list"
          },
          "CurrentVersion": {
            "name": "CurrentVersion",
            "shape_name": "Long",
            "type": "long"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxEntries": {
            "name": "MaxEntries",
            "shape_name": "Integer",
            "type": "integer"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "PrefixListName": {
            "name": "PrefixListName",
            "shape_name": "String",
            "type": "string"
          },
          "RemoveEntries": {
            "name": "RemoveEntries",
            "shape_name": "RemovePrefixListEntries",
            "type": "list"
          }
        },
        "required": [
          "PrefixListId"
        ]
      },
      "name": "ModifyManagedPrefixList",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PrefixList": {
            "name": "PrefixList",
            "shape_name": "ManagedPrefixList",
            "type": "structure"
          }
        }
      }
    },
    "ModifyNetworkInterfaceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "AssociatePublicIpAddress": {
            "name": "AssociatePublicIpAddress",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Attachment": {
            "name": "Attachment",
            "shape_name": "NetworkInterfaceAttachmentChanges",
            "type": "structure"
          },
          "ConnectionTrackingSpecification": {
            "name": "ConnectionTrackingSpecification",
            "shape_name": "ConnectionTrackingSpecificationRequest",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "AttributeValue",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnaSrdSpecification": {
            "name": "EnaSrdSpecification",
            "shape_name": "EnaSrdSpecification",
            "type": "structure"
          },
          "EnablePrimaryIpv6": {
            "name": "EnablePrimaryIpv6",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Groups": {
            "name": "Groups",
            "shape_name": "SecurityGroupIdStringList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "SourceDestCheck": {
            "name": "SourceDestCheck",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "ModifyNetworkInterfaceAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyPrivateDnsNameOptions": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnableResourceNameDnsAAAARecord": {
            "name": "EnableResourceNameDnsAAAARecord",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnableResourceNameDnsARecord": {
            "name": "EnableResourceNameDnsARecord",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "PrivateDnsHostnameType": {
            "name": "PrivateDnsHostnameType",
            "shape_name": "HostnameType",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "ModifyPrivateDnsNameOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyReservedInstances": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "ReservedInstancesIds": {
            "name": "ReservedInstancesIds",
            "shape_name": "ReservedInstancesIdStringList",
            "type": "list"
          },
          "TargetConfigurations": {
            "name": "TargetConfigurations",
            "shape_name": "ReservedInstancesConfigurationList",
            "type": "list"
          }
        },
        "required": [
          "ReservedInstancesIds",
          "TargetConfigurations"
        ]
      },
      "name": "ModifyReservedInstances",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReservedInstancesModificationId": {
            "name": "ReservedInstancesModificationId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ModifySecurityGroupRules": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "SecurityGroupRules": {
            "name": "SecurityGroupRules",
            "shape_name": "SecurityGroupRuleUpdateList",
            "type": "list"
          }
        },
        "required": [
          "GroupId",
          "SecurityGroupRules"
        ]
      },
      "name": "ModifySecurityGroupRules",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifySnapshotAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "SnapshotAttributeName",
            "type": "string"
          },
          "CreateVolumePermission": {
            "name": "CreateVolumePermission",
            "shape_name": "CreateVolumePermissionModifications",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupNames": {
            "name": "GroupNames",
            "shape_name": "GroupNameStringList",
            "type": "list"
          },
          "OperationType": {
            "name": "OperationType",
            "shape_name": "OperationType",
            "type": "string"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          },
          "UserIds": {
            "name": "UserIds",
            "shape_name": "UserIdStringList",
            "type": "list"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "ModifySnapshotAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifySnapshotTier": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          },
          "StorageTier": {
            "name": "StorageTier",
            "shape_name": "TargetStorageTier",
            "type": "string"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "ModifySnapshotTier",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "TieringStartTime": {
            "name": "TieringStartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          }
        }
      }
    },
    "ModifySpotFleetRequest": {
      "input": {
        "markers": [],
        "members": {
          "Context": {
            "name": "Context",
            "shape_name": "String",
            "type": "string"
          },
          "ExcessCapacityTerminationPolicy": {
            "name": "ExcessCapacityTerminationPolicy",
            "shape_name": "ExcessCapacityTerminationPolicy",
            "type": "string"
          },
          "LaunchTemplateConfigs": {
            "name": "LaunchTemplateConfigs",
            "shape_name": "LaunchTemplateConfigList",
            "type": "list"
          },
          "OnDemandTargetCapacity": {
            "name": "OnDemandTargetCapacity",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "SpotFleetRequestId",
            "type": "string"
          },
          "TargetCapacity": {
            "name": "TargetCapacity",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "SpotFleetRequestId"
        ]
      },
      "name": "ModifySpotFleetRequest",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifySubnetAttribute": {
      "input": {
        "markers": [],
        "members": {
          "AssignIpv6AddressOnCreation": {
            "name": "AssignIpv6AddressOnCreation",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "CustomerOwnedIpv4Pool": {
            "name": "CustomerOwnedIpv4Pool",
            "shape_name": "CoipPoolId",
            "type": "string"
          },
          "DisableLniAtDeviceIndex": {
            "name": "DisableLniAtDeviceIndex",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableDns64": {
            "name": "EnableDns64",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableLniAtDeviceIndex": {
            "name": "EnableLniAtDeviceIndex",
            "shape_name": "Integer",
            "type": "integer"
          },
          "EnableResourceNameDnsAAAARecordOnLaunch": {
            "name": "EnableResourceNameDnsAAAARecordOnLaunch",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableResourceNameDnsARecordOnLaunch": {
            "name": "EnableResourceNameDnsARecordOnLaunch",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "MapCustomerOwnedIpOnLaunch": {
            "name": "MapCustomerOwnedIpOnLaunch",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "MapPublicIpOnLaunch": {
            "name": "MapPublicIpOnLaunch",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "PrivateDnsHostnameTypeOnLaunch": {
            "name": "PrivateDnsHostnameTypeOnLaunch",
            "shape_name": "HostnameType",
            "type": "string"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          }
        },
        "required": [
          "SubnetId"
        ]
      },
      "name": "ModifySubnetAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyTrafficMirrorFilterNetworkServices": {
      "input": {
        "markers": [],
        "members": {
          "AddNetworkServices": {
            "name": "AddNetworkServices",
            "shape_name": "TrafficMirrorNetworkServiceList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RemoveNetworkServices": {
            "name": "RemoveNetworkServices",
            "shape_name": "TrafficMirrorNetworkServiceList",
            "type": "list"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorFilterId"
        ]
      },
      "name": "ModifyTrafficMirrorFilterNetworkServices",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorFilter": {
            "name": "TrafficMirrorFilter",
            "shape_name": "TrafficMirrorFilter",
            "type": "structure"
          }
        }
      }
    },
    "ModifyTrafficMirrorFilterRule": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPortRange": {
            "name": "DestinationPortRange",
            "shape_name": "TrafficMirrorPortRangeRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Protocol": {
            "name": "Protocol",
            "shape_name": "Integer",
            "type": "integer"
          },
          "RemoveFields": {
            "name": "RemoveFields",
            "shape_name": "TrafficMirrorFilterRuleFieldList",
            "type": "list"
          },
          "RuleAction": {
            "name": "RuleAction",
            "shape_name": "TrafficMirrorRuleAction",
            "type": "string"
          },
          "RuleNumber": {
            "name": "RuleNumber",
            "shape_name": "Integer",
            "type": "integer"
          },
          "SourceCidrBlock": {
            "name": "SourceCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "SourcePortRange": {
            "name": "SourcePortRange",
            "shape_name": "TrafficMirrorPortRangeRequest",
            "type": "structure"
          },
          "TrafficDirection": {
            "name": "TrafficDirection",
            "shape_name": "TrafficDirection",
            "type": "string"
          },
          "TrafficMirrorFilterRuleId": {
            "name": "TrafficMirrorFilterRuleId",
            "shape_name": "TrafficMirrorFilterRuleIdWithResolver",
            "type": "string"
          }
        },
        "required": [
          "TrafficMirrorFilterRuleId"
        ]
      },
      "name": "ModifyTrafficMirrorFilterRule",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorFilterRule": {
            "name": "TrafficMirrorFilterRule",
            "shape_name": "TrafficMirrorFilterRule",
            "type": "structure"
          }
        }
      }
    },
    "ModifyTrafficMirrorSession": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PacketLength": {
            "name": "PacketLength",
            "shape_name": "Integer",
            "type": "integer"
          },
          "RemoveFields": {
            "name": "RemoveFields",
            "shape_name": "TrafficMirrorSessionFieldList",
            "type": "list"
          },
          "SessionNumber": {
            "name": "SessionNumber",
            "shape_name": "Integer",
            "type": "integer"
          },
          "TrafficMirrorFilterId": {
            "name": "TrafficMirrorFilterId",
            "shape_name": "TrafficMirrorFilterId",
            "type": "string"
          },
          "TrafficMirrorSessionId": {
            "name": "TrafficMirrorSessionId",
            "shape_name": "TrafficMirrorSessionId",
            "type": "string"
          },
          "TrafficMirrorTargetId": {
            "name": "TrafficMirrorTargetId",
            "shape_name": "TrafficMirrorTargetId",
            "type": "string"
          },
          "VirtualNetworkId": {
            "name": "VirtualNetworkId",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "TrafficMirrorSessionId"
        ]
      },
      "name": "ModifyTrafficMirrorSession",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TrafficMirrorSession": {
            "name": "TrafficMirrorSession",
            "shape_name": "TrafficMirrorSession",
            "type": "structure"
          }
        }
      }
    },
    "ModifyTransitGateway": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "ModifyTransitGatewayOptions",
            "type": "structure"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayId"
        ]
      },
      "name": "ModifyTransitGateway",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGateway": {
            "name": "TransitGateway",
            "shape_name": "TransitGateway",
            "type": "structure"
          }
        }
      }
    },
    "ModifyTransitGatewayPrefixListReference": {
      "input": {
        "markers": [],
        "members": {
          "Blackhole": {
            "name": "Blackhole",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "PrefixListId"
        ]
      },
      "name": "ModifyTransitGatewayPrefixListReference",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPrefixListReference": {
            "name": "TransitGatewayPrefixListReference",
            "shape_name": "TransitGatewayPrefixListReference",
            "type": "structure"
          }
        }
      }
    },
    "ModifyTransitGatewayVpcAttachment": {
      "input": {
        "markers": [],
        "members": {
          "AddSubnetIds": {
            "name": "AddSubnetIds",
            "shape_name": "TransitGatewaySubnetIdList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Options": {
            "name": "Options",
            "shape_name": "ModifyTransitGatewayVpcAttachmentRequestOptions",
            "type": "structure"
          },
          "RemoveSubnetIds": {
            "name": "RemoveSubnetIds",
            "shape_name": "TransitGatewaySubnetIdList",
            "type": "list"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "ModifyTransitGatewayVpcAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayVpcAttachment": {
            "name": "TransitGatewayVpcAttachment",
            "shape_name": "TransitGatewayVpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessEndpoint": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LoadBalancerOptions": {
            "name": "LoadBalancerOptions",
            "shape_name": "ModifyVerifiedAccessEndpointLoadBalancerOptions",
            "type": "structure"
          },
          "NetworkInterfaceOptions": {
            "name": "NetworkInterfaceOptions",
            "shape_name": "ModifyVerifiedAccessEndpointEniOptions",
            "type": "structure"
          },
          "VerifiedAccessEndpointId": {
            "name": "VerifiedAccessEndpointId",
            "shape_name": "VerifiedAccessEndpointId",
            "type": "string"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessEndpointId"
        ]
      },
      "name": "ModifyVerifiedAccessEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessEndpoint": {
            "name": "VerifiedAccessEndpoint",
            "shape_name": "VerifiedAccessEndpoint",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessEndpointPolicy": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "VerifiedAccessEndpointId": {
            "name": "VerifiedAccessEndpointId",
            "shape_name": "VerifiedAccessEndpointId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessEndpointId"
        ]
      },
      "name": "ModifyVerifiedAccessEndpointPolicy",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationResponse",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessGroup": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessGroupId"
        ]
      },
      "name": "ModifyVerifiedAccessGroup",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessGroup": {
            "name": "VerifiedAccessGroup",
            "shape_name": "VerifiedAccessGroup",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessGroupPolicy": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "VerifiedAccessGroupId": {
            "name": "VerifiedAccessGroupId",
            "shape_name": "VerifiedAccessGroupId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessGroupId"
        ]
      },
      "name": "ModifyVerifiedAccessGroupPolicy",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PolicyEnabled": {
            "name": "PolicyEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationResponse",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessInstance": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId"
        ]
      },
      "name": "ModifyVerifiedAccessInstance",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessInstance": {
            "name": "VerifiedAccessInstance",
            "shape_name": "VerifiedAccessInstance",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessInstanceLoggingConfiguration": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AccessLogs": {
            "name": "AccessLogs",
            "shape_name": "VerifiedAccessLogOptions",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VerifiedAccessInstanceId": {
            "name": "VerifiedAccessInstanceId",
            "shape_name": "VerifiedAccessInstanceId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessInstanceId",
          "AccessLogs"
        ]
      },
      "name": "ModifyVerifiedAccessInstanceLoggingConfiguration",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "LoggingConfiguration": {
            "name": "LoggingConfiguration",
            "shape_name": "VerifiedAccessInstanceLoggingConfiguration",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVerifiedAccessTrustProvider": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DeviceOptions": {
            "name": "DeviceOptions",
            "shape_name": "ModifyVerifiedAccessTrustProviderDeviceOptions",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OidcOptions": {
            "name": "OidcOptions",
            "shape_name": "ModifyVerifiedAccessTrustProviderOidcOptions",
            "type": "structure"
          },
          "SseSpecification": {
            "name": "SseSpecification",
            "shape_name": "VerifiedAccessSseSpecificationRequest",
            "type": "structure"
          },
          "VerifiedAccessTrustProviderId": {
            "name": "VerifiedAccessTrustProviderId",
            "shape_name": "VerifiedAccessTrustProviderId",
            "type": "string"
          }
        },
        "required": [
          "VerifiedAccessTrustProviderId"
        ]
      },
      "name": "ModifyVerifiedAccessTrustProvider",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VerifiedAccessTrustProvider": {
            "name": "VerifiedAccessTrustProvider",
            "shape_name": "VerifiedAccessTrustProvider",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVolume": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Iops": {
            "name": "Iops",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MultiAttachEnabled": {
            "name": "MultiAttachEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Size": {
            "name": "Size",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Throughput": {
            "name": "Throughput",
            "shape_name": "Integer",
            "type": "integer"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          },
          "VolumeType": {
            "name": "VolumeType",
            "shape_name": "VolumeType",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "ModifyVolume",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VolumeModification": {
            "name": "VolumeModification",
            "shape_name": "VolumeModification",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVolumeAttribute": {
      "input": {
        "markers": [],
        "members": {
          "AutoEnableIO": {
            "name": "AutoEnableIO",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "VolumeId",
            "type": "string"
          }
        },
        "required": [
          "VolumeId"
        ]
      },
      "name": "ModifyVolumeAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyVpcAttribute": {
      "input": {
        "markers": [],
        "members": {
          "EnableDnsHostnames": {
            "name": "EnableDnsHostnames",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableDnsSupport": {
            "name": "EnableDnsSupport",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "EnableNetworkAddressUsageMetrics": {
            "name": "EnableNetworkAddressUsageMetrics",
            "shape_name": "AttributeBooleanValue",
            "type": "structure"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId"
        ]
      },
      "name": "ModifyVpcAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ModifyVpcEndpoint": {
      "input": {
        "markers": [],
        "members": {
          "AddRouteTableIds": {
            "name": "AddRouteTableIds",
            "shape_name": "VpcEndpointRouteTableIdList",
            "type": "list"
          },
          "AddSecurityGroupIds": {
            "name": "AddSecurityGroupIds",
            "shape_name": "VpcEndpointSecurityGroupIdList",
            "type": "list"
          },
          "AddSubnetIds": {
            "name": "AddSubnetIds",
            "shape_name": "VpcEndpointSubnetIdList",
            "type": "list"
          },
          "DnsOptions": {
            "name": "DnsOptions",
            "shape_name": "DnsOptionsSpecification",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpAddressType": {
            "name": "IpAddressType",
            "shape_name": "IpAddressType",
            "type": "string"
          },
          "PolicyDocument": {
            "name": "PolicyDocument",
            "shape_name": "String",
            "type": "string"
          },
          "PrivateDnsEnabled": {
            "name": "PrivateDnsEnabled",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RemoveRouteTableIds": {
            "name": "RemoveRouteTableIds",
            "shape_name": "VpcEndpointRouteTableIdList",
            "type": "list"
          },
          "RemoveSecurityGroupIds": {
            "name": "RemoveSecurityGroupIds",
            "shape_name": "VpcEndpointSecurityGroupIdList",
            "type": "list"
          },
          "RemoveSubnetIds": {
            "name": "RemoveSubnetIds",
            "shape_name": "VpcEndpointSubnetIdList",
            "type": "list"
          },
          "ResetPolicy": {
            "name": "ResetPolicy",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetConfigurations": {
            "name": "SubnetConfigurations",
            "shape_name": "SubnetConfigurationsList",
            "type": "list"
          },
          "VpcEndpointId": {
            "name": "VpcEndpointId",
            "shape_name": "VpcEndpointId",
            "type": "string"
          }
        },
        "required": [
          "VpcEndpointId"
        ]
      },
      "name": "ModifyVpcEndpoint",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpcEndpointConnectionNotification": {
      "input": {
        "markers": [],
        "members": {
          "ConnectionEvents": {
            "name": "ConnectionEvents",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ConnectionNotificationArn": {
            "name": "ConnectionNotificationArn",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionNotificationId": {
            "name": "ConnectionNotificationId",
            "shape_name": "ConnectionNotificationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "ConnectionNotificationId"
        ]
      },
      "name": "ModifyVpcEndpointConnectionNotification",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpcEndpointServiceConfiguration": {
      "input": {
        "markers": [],
        "members": {
          "AcceptanceRequired": {
            "name": "AcceptanceRequired",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "AddGatewayLoadBalancerArns": {
            "name": "AddGatewayLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "AddNetworkLoadBalancerArns": {
            "name": "AddNetworkLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "AddSupportedIpAddressTypes": {
            "name": "AddSupportedIpAddressTypes",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrivateDnsName": {
            "name": "PrivateDnsName",
            "shape_name": "String",
            "type": "string"
          },
          "RemoveGatewayLoadBalancerArns": {
            "name": "RemoveGatewayLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "RemoveNetworkLoadBalancerArns": {
            "name": "RemoveNetworkLoadBalancerArns",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "RemovePrivateDnsName": {
            "name": "RemovePrivateDnsName",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RemoveSupportedIpAddressTypes": {
            "name": "RemoveSupportedIpAddressTypes",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          }
        },
        "required": [
          "ServiceId"
        ]
      },
      "name": "ModifyVpcEndpointServiceConfiguration",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpcEndpointServicePayerResponsibility": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PayerResponsibility": {
            "name": "PayerResponsibility",
            "shape_name": "PayerResponsibility",
            "type": "string"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          }
        },
        "required": [
          "ServiceId",
          "PayerResponsibility"
        ]
      },
      "name": "ModifyVpcEndpointServicePayerResponsibility",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpcEndpointServicePermissions": {
      "input": {
        "markers": [],
        "members": {
          "AddAllowedPrincipals": {
            "name": "AddAllowedPrincipals",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RemoveAllowedPrincipals": {
            "name": "RemoveAllowedPrincipals",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          }
        },
        "required": [
          "ServiceId"
        ]
      },
      "name": "ModifyVpcEndpointServicePermissions",
      "output": {
        "lists": {
          "AddedPrincipals": {
            "all_fields": [
              "Principal",
              "PrincipalType",
              "ServiceId",
              "ServicePermissionId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ServiceId",
              "ServicePermissionId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AddedPrincipals": {
            "name": "AddedPrincipals",
            "shape_name": "AddedPrincipalSet",
            "type": "list"
          },
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpcPeeringConnectionOptions": {
      "input": {
        "markers": [],
        "members": {
          "AccepterPeeringConnectionOptions": {
            "name": "AccepterPeeringConnectionOptions",
            "shape_name": "PeeringConnectionOptionsRequest",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RequesterPeeringConnectionOptions": {
            "name": "RequesterPeeringConnectionOptions",
            "shape_name": "PeeringConnectionOptionsRequest",
            "type": "structure"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpcPeeringConnectionId"
        ]
      },
      "name": "ModifyVpcPeeringConnectionOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AccepterPeeringConnectionOptions": {
            "name": "AccepterPeeringConnectionOptions",
            "shape_name": "PeeringConnectionOptions",
            "type": "structure"
          },
          "RequesterPeeringConnectionOptions": {
            "name": "RequesterPeeringConnectionOptions",
            "shape_name": "PeeringConnectionOptions",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVpcTenancy": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceTenancy": {
            "name": "InstanceTenancy",
            "shape_name": "VpcTenancy",
            "type": "string"
          },
          "VpcId": {
            "name": "VpcId",
            "shape_name": "VpcId",
            "type": "string"
          }
        },
        "required": [
          "VpcId",
          "InstanceTenancy"
        ]
      },
      "name": "ModifyVpcTenancy",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ModifyVpnConnection": {
      "input": {
        "markers": [],
        "members": {
          "CustomerGatewayId": {
            "name": "CustomerGatewayId",
            "shape_name": "CustomerGatewayId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnGatewayId": {
            "name": "VpnGatewayId",
            "shape_name": "VpnGatewayId",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId"
        ]
      },
      "name": "ModifyVpnConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnection": {
            "name": "VpnConnection",
            "shape_name": "VpnConnection",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVpnConnectionOptions": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "LocalIpv4NetworkCidr": {
            "name": "LocalIpv4NetworkCidr",
            "shape_name": "String",
            "type": "string"
          },
          "LocalIpv6NetworkCidr": {
            "name": "LocalIpv6NetworkCidr",
            "shape_name": "String",
            "type": "string"
          },
          "RemoteIpv4NetworkCidr": {
            "name": "RemoteIpv4NetworkCidr",
            "shape_name": "String",
            "type": "string"
          },
          "RemoteIpv6NetworkCidr": {
            "name": "RemoteIpv6NetworkCidr",
            "shape_name": "String",
            "type": "string"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId"
        ]
      },
      "name": "ModifyVpnConnectionOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnection": {
            "name": "VpnConnection",
            "shape_name": "VpnConnection",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVpnTunnelCertificate": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnTunnelOutsideIpAddress": {
            "name": "VpnTunnelOutsideIpAddress",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId",
          "VpnTunnelOutsideIpAddress"
        ]
      },
      "name": "ModifyVpnTunnelCertificate",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnection": {
            "name": "VpnConnection",
            "shape_name": "VpnConnection",
            "type": "structure"
          }
        }
      }
    },
    "ModifyVpnTunnelOptions": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SkipTunnelReplacement": {
            "name": "SkipTunnelReplacement",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TunnelOptions": {
            "name": "TunnelOptions",
            "shape_name": "ModifyVpnTunnelOptionsSpecification",
            "type": "structure"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnTunnelOutsideIpAddress": {
            "name": "VpnTunnelOutsideIpAddress",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId",
          "VpnTunnelOutsideIpAddress",
          "TunnelOptions"
        ]
      },
      "name": "ModifyVpnTunnelOptions",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "VpnConnection": {
            "name": "VpnConnection",
            "shape_name": "VpnConnection",
            "type": "structure"
          }
        }
      }
    },
    "MonitorInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "MonitorInstances",
      "output": {
        "lists": {
          "InstanceMonitorings": {
            "all_fields": [
              "InstanceId",
              "Monitoring"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "InstanceMonitorings": {
            "name": "InstanceMonitorings",
            "shape_name": "InstanceMonitoringList",
            "type": "list"
          }
        }
      }
    },
    "MoveAddressToVpc": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "PublicIp"
        ]
      },
      "name": "MoveAddressToVpc",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "Status",
            "type": "string"
          }
        }
      }
    },
    "MoveByoipCidrToIpam": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "IpamPoolOwner": {
            "name": "IpamPoolOwner",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "Cidr",
          "IpamPoolId",
          "IpamPoolOwner"
        ]
      },
      "name": "MoveByoipCidrToIpam",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ByoipCidr": {
            "name": "ByoipCidr",
            "shape_name": "ByoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "ProvisionByoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "CidrAuthorizationContext": {
            "name": "CidrAuthorizationContext",
            "shape_name": "CidrAuthorizationContext",
            "type": "structure"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MultiRegion": {
            "name": "MultiRegion",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PoolTagSpecifications": {
            "name": "PoolTagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "PubliclyAdvertisable": {
            "name": "PubliclyAdvertisable",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Cidr"
        ]
      },
      "name": "ProvisionByoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ByoipCidr": {
            "name": "ByoipCidr",
            "shape_name": "ByoipCidr",
            "type": "structure"
          }
        }
      }
    },
    "ProvisionIpamByoasn": {
      "input": {
        "markers": [],
        "members": {
          "Asn": {
            "name": "Asn",
            "shape_name": "String",
            "type": "string"
          },
          "AsnAuthorizationContext": {
            "name": "AsnAuthorizationContext",
            "shape_name": "AsnAuthorizationContext",
            "type": "structure"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamId": {
            "name": "IpamId",
            "shape_name": "IpamId",
            "type": "string"
          }
        },
        "required": [
          "IpamId",
          "Asn",
          "AsnAuthorizationContext"
        ]
      },
      "name": "ProvisionIpamByoasn",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Byoasn": {
            "name": "Byoasn",
            "shape_name": "Byoasn",
            "type": "structure"
          }
        }
      }
    },
    "ProvisionIpamPoolCidr": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "CidrAuthorizationContext": {
            "name": "CidrAuthorizationContext",
            "shape_name": "IpamCidrAuthorizationContext",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamExternalResourceVerificationTokenId": {
            "name": "IpamExternalResourceVerificationTokenId",
            "shape_name": "IpamExternalResourceVerificationTokenId",
            "type": "string"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "NetmaskLength": {
            "name": "NetmaskLength",
            "shape_name": "Integer",
            "type": "integer"
          },
          "VerificationMethod": {
            "name": "VerificationMethod",
            "shape_name": "VerificationMethod",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId"
        ]
      },
      "name": "ProvisionIpamPoolCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IpamPoolCidr": {
            "name": "IpamPoolCidr",
            "shape_name": "IpamPoolCidr",
            "type": "structure"
          }
        }
      }
    },
    "ProvisionPublicIpv4PoolCidr": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          },
          "NetmaskLength": {
            "name": "NetmaskLength",
            "shape_name": "Integer",
            "type": "integer"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId",
          "PoolId",
          "NetmaskLength"
        ]
      },
      "name": "ProvisionPublicIpv4PoolCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PoolAddressRange": {
            "name": "PoolAddressRange",
            "shape_name": "PublicIpv4PoolRange",
            "type": "structure"
          },
          "PoolId": {
            "name": "PoolId",
            "shape_name": "Ipv4PoolEc2Id",
            "type": "string"
          }
        }
      }
    },
    "PurchaseCapacityBlock": {
      "input": {
        "markers": [],
        "members": {
          "CapacityBlockOfferingId": {
            "name": "CapacityBlockOfferingId",
            "shape_name": "OfferingId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstancePlatform": {
            "name": "InstancePlatform",
            "shape_name": "CapacityReservationInstancePlatform",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "CapacityBlockOfferingId",
          "InstancePlatform"
        ]
      },
      "name": "PurchaseCapacityBlock",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "CapacityReservation": {
            "name": "CapacityReservation",
            "shape_name": "CapacityReservation",
            "type": "structure"
          }
        }
      }
    },
    "PurchaseHostReservation": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "CurrencyCode": {
            "name": "CurrencyCode",
            "shape_name": "CurrencyCodeValues",
            "type": "string"
          },
          "HostIdSet": {
            "name": "HostIdSet",
            "shape_name": "RequestHostIdSet",
            "type": "list"
          },
          "LimitPrice": {
            "name": "LimitPrice",
            "shape_name": "String",
            "type": "string"
          },
          "OfferingId": {
            "name": "OfferingId",
            "shape_name": "OfferingId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "HostIdSet",
          "OfferingId"
        ]
      },
      "name": "PurchaseHostReservation",
      "output": {
        "lists": {
          "Purchase": {
            "all_fields": [
              "CurrencyCode",
              "Duration",
              "HostIdSet",
              "HostReservationId",
              "HourlyPrice",
              "InstanceFamily",
              "PaymentOption",
              "UpfrontPrice"
            ],
            "arn_fields": [],
            "id_fields": [
              "HostReservationId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "CurrencyCode": {
            "name": "CurrencyCode",
            "shape_name": "CurrencyCodeValues",
            "type": "string"
          },
          "Purchase": {
            "name": "Purchase",
            "shape_name": "PurchaseSet",
            "type": "list"
          },
          "TotalHourlyPrice": {
            "name": "TotalHourlyPrice",
            "shape_name": "String",
            "type": "string"
          },
          "TotalUpfrontPrice": {
            "name": "TotalUpfrontPrice",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "PurchaseReservedInstancesOffering": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "LimitPrice": {
            "name": "LimitPrice",
            "shape_name": "ReservedInstanceLimitPrice",
            "type": "structure"
          },
          "PurchaseTime": {
            "name": "PurchaseTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "ReservedInstancesOfferingId": {
            "name": "ReservedInstancesOfferingId",
            "shape_name": "ReservedInstancesOfferingId",
            "type": "string"
          }
        },
        "required": [
          "InstanceCount",
          "ReservedInstancesOfferingId"
        ]
      },
      "name": "PurchaseReservedInstancesOffering",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReservedInstancesId": {
            "name": "ReservedInstancesId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "PurchaseScheduledInstances": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PurchaseRequests": {
            "name": "PurchaseRequests",
            "shape_name": "PurchaseRequestSet",
            "type": "list"
          }
        },
        "required": [
          "PurchaseRequests"
        ]
      },
      "name": "PurchaseScheduledInstances",
      "output": {
        "lists": {
          "ScheduledInstanceSet": {
            "all_fields": [
              "AvailabilityZone",
              "CreateDate",
              "HourlyPrice",
              "InstanceCount",
              "InstanceType",
              "NetworkPlatform",
              "NextSlotStartTime",
              "Platform",
              "PreviousSlotEndTime",
              "Recurrence",
              "ScheduledInstanceId",
              "SlotDurationInHours",
              "TermEndDate",
              "TermStartDate",
              "TotalScheduledInstanceHours"
            ],
            "arn_fields": [],
            "id_fields": [
              "ScheduledInstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ScheduledInstanceSet": {
            "name": "ScheduledInstanceSet",
            "shape_name": "PurchasedScheduledInstanceSet",
            "type": "list"
          }
        }
      }
    },
    "RebootInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "RebootInstances",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "RegisterImage": {
      "input": {
        "markers": [],
        "members": {
          "Architecture": {
            "name": "Architecture",
            "shape_name": "ArchitectureValues",
            "type": "string"
          },
          "BillingProducts": {
            "name": "BillingProducts",
            "shape_name": "BillingProductList",
            "type": "list"
          },
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list"
          },
          "BootMode": {
            "name": "BootMode",
            "shape_name": "BootModeValues",
            "type": "string"
          },
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnaSupport": {
            "name": "EnaSupport",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageLocation": {
            "name": "ImageLocation",
            "shape_name": "String",
            "type": "string"
          },
          "ImdsSupport": {
            "name": "ImdsSupport",
            "shape_name": "ImdsSupportValues",
            "type": "string"
          },
          "KernelId": {
            "name": "KernelId",
            "shape_name": "KernelId",
            "type": "string"
          },
          "Name": {
            "name": "Name",
            "shape_name": "String",
            "type": "string"
          },
          "RamdiskId": {
            "name": "RamdiskId",
            "shape_name": "RamdiskId",
            "type": "string"
          },
          "RootDeviceName": {
            "name": "RootDeviceName",
            "shape_name": "String",
            "type": "string"
          },
          "SriovNetSupport": {
            "name": "SriovNetSupport",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "TpmSupport": {
            "name": "TpmSupport",
            "shape_name": "TpmSupportValues",
            "type": "string"
          },
          "UefiData": {
            "name": "UefiData",
            "shape_name": "StringType",
            "type": "string"
          },
          "VirtualizationType": {
            "name": "VirtualizationType",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ]
      },
      "name": "RegisterImage",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ImageId": {
            "name": "ImageId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "RegisterInstanceEventNotificationAttributes": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceTagAttribute": {
            "name": "InstanceTagAttribute",
            "shape_name": "RegisterInstanceTagAttributeRequest",
            "type": "structure"
          }
        },
        "required": [
          "InstanceTagAttribute"
        ]
      },
      "name": "RegisterInstanceEventNotificationAttributes",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "InstanceTagAttribute": {
            "name": "InstanceTagAttribute",
            "shape_name": "InstanceTagNotificationAttribute",
            "type": "structure"
          }
        }
      }
    },
    "RegisterTransitGatewayMulticastGroupMembers": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupIpAddress": {
            "name": "GroupIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkInterfaceIds": {
            "name": "NetworkInterfaceIds",
            "shape_name": "TransitGatewayNetworkInterfaceIdList",
            "type": "list"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId",
          "NetworkInterfaceIds"
        ]
      },
      "name": "RegisterTransitGatewayMulticastGroupMembers",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "RegisteredMulticastGroupMembers": {
            "name": "RegisteredMulticastGroupMembers",
            "shape_name": "TransitGatewayMulticastRegisteredGroupMembers",
            "type": "structure"
          }
        }
      }
    },
    "RegisterTransitGatewayMulticastGroupSources": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupIpAddress": {
            "name": "GroupIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkInterfaceIds": {
            "name": "NetworkInterfaceIds",
            "shape_name": "TransitGatewayNetworkInterfaceIdList",
            "type": "list"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId",
          "NetworkInterfaceIds"
        ]
      },
      "name": "RegisterTransitGatewayMulticastGroupSources",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "RegisteredMulticastGroupSources": {
            "name": "RegisteredMulticastGroupSources",
            "shape_name": "TransitGatewayMulticastRegisteredGroupSources",
            "type": "structure"
          }
        }
      }
    },
    "RejectTransitGatewayMulticastDomainAssociations": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SubnetIds": {
            "name": "SubnetIds",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "RejectTransitGatewayMulticastDomainAssociations",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Associations": {
            "name": "Associations",
            "shape_name": "TransitGatewayMulticastDomainAssociations",
            "type": "structure"
          }
        }
      }
    },
    "RejectTransitGatewayPeeringAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "RejectTransitGatewayPeeringAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayPeeringAttachment": {
            "name": "TransitGatewayPeeringAttachment",
            "shape_name": "TransitGatewayPeeringAttachment",
            "type": "structure"
          }
        }
      }
    },
    "RejectTransitGatewayVpcAttachment": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayAttachmentId"
        ]
      },
      "name": "RejectTransitGatewayVpcAttachment",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "TransitGatewayVpcAttachment": {
            "name": "TransitGatewayVpcAttachment",
            "shape_name": "TransitGatewayVpcAttachment",
            "type": "structure"
          }
        }
      }
    },
    "RejectVpcEndpointConnections": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          },
          "VpcEndpointIds": {
            "name": "VpcEndpointIds",
            "shape_name": "VpcEndpointIdList",
            "type": "list"
          }
        },
        "required": [
          "ServiceId",
          "VpcEndpointIds"
        ]
      },
      "name": "RejectVpcEndpointConnections",
      "output": {
        "lists": {
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemSet",
            "type": "list"
          }
        }
      }
    },
    "RejectVpcPeeringConnection": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionId",
            "type": "string"
          }
        },
        "required": [
          "VpcPeeringConnectionId"
        ]
      },
      "name": "RejectVpcPeeringConnection",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ReleaseAddress": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkBorderGroup": {
            "name": "NetworkBorderGroup",
            "shape_name": "String",
            "type": "string"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": null
      },
      "name": "ReleaseAddress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ReleaseHosts": {
      "input": {
        "markers": [],
        "members": {
          "HostIds": {
            "name": "HostIds",
            "shape_name": "RequestHostIdList",
            "type": "list"
          }
        },
        "required": [
          "HostIds"
        ]
      },
      "name": "ReleaseHosts",
      "output": {
        "lists": {
          "Successful": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "Unsuccessful": {
            "all_fields": [
              "Error",
              "ResourceId"
            ],
            "arn_fields": [],
            "id_fields": [
              "ResourceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Successful": {
            "name": "Successful",
            "shape_name": "ResponseHostIdList",
            "type": "list"
          },
          "Unsuccessful": {
            "name": "Unsuccessful",
            "shape_name": "UnsuccessfulItemList",
            "type": "list"
          }
        }
      }
    },
    "ReleaseIpamPoolAllocation": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IpamPoolAllocationId": {
            "name": "IpamPoolAllocationId",
            "shape_name": "IpamPoolAllocationId",
            "type": "string"
          },
          "IpamPoolId": {
            "name": "IpamPoolId",
            "shape_name": "IpamPoolId",
            "type": "string"
          }
        },
        "required": [
          "IpamPoolId",
          "Cidr",
          "IpamPoolAllocationId"
        ]
      },
      "name": "ReleaseIpamPoolAllocation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Success": {
            "name": "Success",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ReplaceIamInstanceProfileAssociation": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "IamInstanceProfileAssociationId",
            "type": "string"
          },
          "IamInstanceProfile": {
            "name": "IamInstanceProfile",
            "shape_name": "IamInstanceProfileSpecification",
            "type": "structure"
          }
        },
        "required": [
          "IamInstanceProfile",
          "AssociationId"
        ]
      },
      "name": "ReplaceIamInstanceProfileAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IamInstanceProfileAssociation": {
            "name": "IamInstanceProfileAssociation",
            "shape_name": "IamInstanceProfileAssociation",
            "type": "structure"
          }
        }
      }
    },
    "ReplaceNetworkAclAssociation": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "NetworkAclAssociationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkAclId": {
            "name": "NetworkAclId",
            "shape_name": "NetworkAclId",
            "type": "string"
          }
        },
        "required": [
          "AssociationId",
          "NetworkAclId"
        ]
      },
      "name": "ReplaceNetworkAclAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NewAssociationId": {
            "name": "NewAssociationId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ReplaceNetworkAclEntry": {
      "input": {
        "markers": [],
        "members": {
          "CidrBlock": {
            "name": "CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Egress": {
            "name": "Egress",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "IcmpTypeCode": {
            "name": "IcmpTypeCode",
            "shape_name": "IcmpTypeCode",
            "type": "structure"
          },
          "Ipv6CidrBlock": {
            "name": "Ipv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "NetworkAclId": {
            "name": "NetworkAclId",
            "shape_name": "NetworkAclId",
            "type": "string"
          },
          "PortRange": {
            "name": "PortRange",
            "shape_name": "PortRange",
            "type": "structure"
          },
          "Protocol": {
            "name": "Protocol",
            "shape_name": "String",
            "type": "string"
          },
          "RuleAction": {
            "name": "RuleAction",
            "shape_name": "RuleAction",
            "type": "string"
          },
          "RuleNumber": {
            "name": "RuleNumber",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "Egress",
          "NetworkAclId",
          "Protocol",
          "RuleAction",
          "RuleNumber"
        ]
      },
      "name": "ReplaceNetworkAclEntry",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ReplaceRoute": {
      "input": {
        "markers": [],
        "members": {
          "CarrierGatewayId": {
            "name": "CarrierGatewayId",
            "shape_name": "CarrierGatewayId",
            "type": "string"
          },
          "CoreNetworkArn": {
            "name": "CoreNetworkArn",
            "shape_name": "CoreNetworkArn",
            "type": "string"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationIpv6CidrBlock": {
            "name": "DestinationIpv6CidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DestinationPrefixListId": {
            "name": "DestinationPrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EgressOnlyInternetGatewayId": {
            "name": "EgressOnlyInternetGatewayId",
            "shape_name": "EgressOnlyInternetGatewayId",
            "type": "string"
          },
          "GatewayId": {
            "name": "GatewayId",
            "shape_name": "RouteGatewayId",
            "type": "string"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          },
          "LocalGatewayId": {
            "name": "LocalGatewayId",
            "shape_name": "LocalGatewayId",
            "type": "string"
          },
          "LocalTarget": {
            "name": "LocalTarget",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          },
          "TransitGatewayId": {
            "name": "TransitGatewayId",
            "shape_name": "TransitGatewayId",
            "type": "string"
          },
          "VpcEndpointId": {
            "name": "VpcEndpointId",
            "shape_name": "VpcEndpointId",
            "type": "string"
          },
          "VpcPeeringConnectionId": {
            "name": "VpcPeeringConnectionId",
            "shape_name": "VpcPeeringConnectionId",
            "type": "string"
          }
        },
        "required": [
          "RouteTableId"
        ]
      },
      "name": "ReplaceRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ReplaceRouteTableAssociation": {
      "input": {
        "markers": [],
        "members": {
          "AssociationId": {
            "name": "AssociationId",
            "shape_name": "RouteTableAssociationId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RouteTableId": {
            "name": "RouteTableId",
            "shape_name": "RouteTableId",
            "type": "string"
          }
        },
        "required": [
          "AssociationId",
          "RouteTableId"
        ]
      },
      "name": "ReplaceRouteTableAssociation",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "AssociationState": {
            "name": "AssociationState",
            "shape_name": "RouteTableAssociationState",
            "type": "structure"
          },
          "NewAssociationId": {
            "name": "NewAssociationId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ReplaceTransitGatewayRoute": {
      "input": {
        "markers": [],
        "members": {
          "Blackhole": {
            "name": "Blackhole",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DestinationCidrBlock": {
            "name": "DestinationCidrBlock",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TransitGatewayAttachmentId": {
            "name": "TransitGatewayAttachmentId",
            "shape_name": "TransitGatewayAttachmentId",
            "type": "string"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "DestinationCidrBlock",
          "TransitGatewayRouteTableId"
        ]
      },
      "name": "ReplaceTransitGatewayRoute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Route": {
            "name": "Route",
            "shape_name": "TransitGatewayRoute",
            "type": "structure"
          }
        }
      }
    },
    "ReplaceVpnTunnel": {
      "input": {
        "markers": [],
        "members": {
          "ApplyPendingMaintenance": {
            "name": "ApplyPendingMaintenance",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "VpnConnectionId": {
            "name": "VpnConnectionId",
            "shape_name": "VpnConnectionId",
            "type": "string"
          },
          "VpnTunnelOutsideIpAddress": {
            "name": "VpnTunnelOutsideIpAddress",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "VpnConnectionId",
          "VpnTunnelOutsideIpAddress"
        ]
      },
      "name": "ReplaceVpnTunnel",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ReportInstanceStatus": {
      "input": {
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EndTime": {
            "name": "EndTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "Instances": {
            "name": "Instances",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          },
          "ReasonCodes": {
            "name": "ReasonCodes",
            "shape_name": "ReasonCodesList",
            "type": "list"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "Status": {
            "name": "Status",
            "shape_name": "ReportStatusType",
            "type": "string"
          }
        },
        "required": [
          "Instances",
          "ReasonCodes",
          "Status"
        ]
      },
      "name": "ReportInstanceStatus",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "RequestSpotFleet": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SpotFleetRequestConfig": {
            "name": "SpotFleetRequestConfig",
            "shape_name": "SpotFleetRequestConfigData",
            "type": "structure"
          }
        },
        "required": [
          "SpotFleetRequestConfig"
        ]
      },
      "name": "RequestSpotFleet",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SpotFleetRequestId": {
            "name": "SpotFleetRequestId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "RequestSpotInstances": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AvailabilityZoneGroup": {
            "name": "AvailabilityZoneGroup",
            "shape_name": "String",
            "type": "string"
          },
          "BlockDurationMinutes": {
            "name": "BlockDurationMinutes",
            "shape_name": "Integer",
            "type": "integer"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "InstanceInterruptionBehavior": {
            "name": "InstanceInterruptionBehavior",
            "shape_name": "InstanceInterruptionBehavior",
            "type": "string"
          },
          "LaunchGroup": {
            "name": "LaunchGroup",
            "shape_name": "String",
            "type": "string"
          },
          "LaunchSpecification": {
            "name": "LaunchSpecification",
            "shape_name": "RequestSpotLaunchSpecification",
            "type": "structure"
          },
          "SpotPrice": {
            "name": "SpotPrice",
            "shape_name": "String",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "Type": {
            "name": "Type",
            "shape_name": "SpotInstanceType",
            "type": "string"
          },
          "ValidFrom": {
            "name": "ValidFrom",
            "shape_name": "DateTime",
            "type": "timestamp"
          },
          "ValidUntil": {
            "name": "ValidUntil",
            "shape_name": "DateTime",
            "type": "timestamp"
          }
        },
        "required": null
      },
      "name": "RequestSpotInstances",
      "output": {
        "lists": {
          "SpotInstanceRequests": {
            "all_fields": [
              "ActualBlockHourlyPrice",
              "AvailabilityZoneGroup",
              "BlockDurationMinutes",
              "CreateTime",
              "Fault",
              "InstanceId",
              "InstanceInterruptionBehavior",
              "LaunchGroup",
              "LaunchSpecification",
              "LaunchedAvailabilityZone",
              "ProductDescription",
              "SpotInstanceRequestId",
              "SpotPrice",
              "State",
              "Status",
              "Tags",
              "Type",
              "ValidFrom",
              "ValidUntil"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId",
              "SpotInstanceRequestId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "SpotInstanceRequests": {
            "name": "SpotInstanceRequests",
            "shape_name": "SpotInstanceRequestList",
            "type": "list"
          }
        }
      }
    },
    "ResetAddressAttribute": {
      "input": {
        "markers": [],
        "members": {
          "AllocationId": {
            "name": "AllocationId",
            "shape_name": "AllocationId",
            "type": "string"
          },
          "Attribute": {
            "name": "Attribute",
            "shape_name": "AddressAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "AllocationId",
          "Attribute"
        ]
      },
      "name": "ResetAddressAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Address": {
            "name": "Address",
            "shape_name": "AddressAttribute",
            "type": "structure"
          }
        }
      }
    },
    "ResetEbsDefaultKmsKeyId": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": null
      },
      "name": "ResetEbsDefaultKmsKeyId",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "KmsKeyId": {
            "name": "KmsKeyId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "ResetFpgaImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "ResetFpgaImageAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FpgaImageId": {
            "name": "FpgaImageId",
            "shape_name": "FpgaImageId",
            "type": "string"
          }
        },
        "required": [
          "FpgaImageId"
        ]
      },
      "name": "ResetFpgaImageAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "ResetImageAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "ResetImageAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "ImageId"
        ]
      },
      "name": "ResetImageAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ResetInstanceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "InstanceAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "InstanceId"
        ]
      },
      "name": "ResetInstanceAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ResetNetworkInterfaceAttribute": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "SourceDestCheck": {
            "name": "SourceDestCheck",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "ResetNetworkInterfaceAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "ResetSnapshotAttribute": {
      "input": {
        "markers": [],
        "members": {
          "Attribute": {
            "name": "Attribute",
            "shape_name": "SnapshotAttributeName",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "Attribute",
          "SnapshotId"
        ]
      },
      "name": "ResetSnapshotAttribute",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "RestoreAddressToClassic": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "PublicIp"
        ]
      },
      "name": "RestoreAddressToClassic",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PublicIp": {
            "name": "PublicIp",
            "shape_name": "String",
            "type": "string"
          },
          "Status": {
            "name": "Status",
            "shape_name": "Status",
            "type": "string"
          }
        }
      }
    },
    "RestoreImageFromRecycleBin": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          }
        },
        "required": [
          "ImageId"
        ]
      },
      "name": "RestoreImageFromRecycleBin",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "RestoreManagedPrefixListVersion": {
      "input": {
        "markers": [],
        "members": {
          "CurrentVersion": {
            "name": "CurrentVersion",
            "shape_name": "Long",
            "type": "long"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PrefixListId": {
            "name": "PrefixListId",
            "shape_name": "PrefixListResourceId",
            "type": "string"
          },
          "PreviousVersion": {
            "name": "PreviousVersion",
            "shape_name": "Long",
            "type": "long"
          }
        },
        "required": [
          "PrefixListId",
          "PreviousVersion",
          "CurrentVersion"
        ]
      },
      "name": "RestoreManagedPrefixListVersion",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "PrefixList": {
            "name": "PrefixList",
            "shape_name": "ManagedPrefixList",
            "type": "structure"
          }
        }
      }
    },
    "RestoreSnapshotFromRecycleBin": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "RestoreSnapshotFromRecycleBin",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Description": {
            "name": "Description",
            "shape_name": "String",
            "type": "string"
          },
          "Encrypted": {
            "name": "Encrypted",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "OutpostArn": {
            "name": "OutpostArn",
            "shape_name": "String",
            "type": "string"
          },
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "Progress": {
            "name": "Progress",
            "shape_name": "String",
            "type": "string"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          },
          "SseType": {
            "name": "SseType",
            "shape_name": "SSEType",
            "type": "string"
          },
          "StartTime": {
            "name": "StartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "State": {
            "name": "State",
            "shape_name": "SnapshotState",
            "type": "string"
          },
          "VolumeId": {
            "name": "VolumeId",
            "shape_name": "String",
            "type": "string"
          },
          "VolumeSize": {
            "name": "VolumeSize",
            "shape_name": "Integer",
            "type": "integer"
          }
        }
      }
    },
    "RestoreSnapshotTier": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "PermanentRestore": {
            "name": "PermanentRestore",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          },
          "TemporaryRestoreDays": {
            "name": "TemporaryRestoreDays",
            "shape_name": "RestoreSnapshotTierRequestTemporaryRestoreDays",
            "type": "integer"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "RestoreSnapshotTier",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "IsPermanentRestore": {
            "name": "IsPermanentRestore",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RestoreDuration": {
            "name": "RestoreDuration",
            "shape_name": "Integer",
            "type": "integer"
          },
          "RestoreStartTime": {
            "name": "RestoreStartTime",
            "shape_name": "MillisecondDateTime",
            "type": "timestamp"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "RevokeClientVpnIngress": {
      "input": {
        "markers": [],
        "members": {
          "AccessGroupId": {
            "name": "AccessGroupId",
            "shape_name": "String",
            "type": "string"
          },
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "RevokeAllGroups": {
            "name": "RevokeAllGroups",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "TargetNetworkCidr": {
            "name": "TargetNetworkCidr",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId",
          "TargetNetworkCidr"
        ]
      },
      "name": "RevokeClientVpnIngress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Status": {
            "name": "Status",
            "shape_name": "ClientVpnAuthorizationRuleStatus",
            "type": "structure"
          }
        }
      }
    },
    "RevokeSecurityGroupEgress": {
      "input": {
        "markers": [],
        "members": {
          "CidrIp": {
            "name": "CidrIp",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FromPort": {
            "name": "FromPort",
            "shape_name": "Integer",
            "type": "integer"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "IpProtocol": {
            "name": "IpProtocol",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupRuleIds": {
            "name": "SecurityGroupRuleIds",
            "shape_name": "SecurityGroupRuleIdList",
            "type": "list"
          },
          "SourceSecurityGroupName": {
            "name": "SourceSecurityGroupName",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupOwnerId": {
            "name": "SourceSecurityGroupOwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "ToPort": {
            "name": "ToPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": [
          "GroupId"
        ]
      },
      "name": "RevokeSecurityGroupEgress",
      "output": {
        "lists": {
          "UnknownIpPermissions": {
            "all_fields": [
              "FromPort",
              "IpProtocol",
              "IpRanges",
              "Ipv6Ranges",
              "PrefixListIds",
              "ToPort",
              "UserIdGroupPairs"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "UnknownIpPermissions": {
            "name": "UnknownIpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          }
        }
      }
    },
    "RevokeSecurityGroupIngress": {
      "input": {
        "markers": [],
        "members": {
          "CidrIp": {
            "name": "CidrIp",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FromPort": {
            "name": "FromPort",
            "shape_name": "Integer",
            "type": "integer"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "SecurityGroupName",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "IpProtocol": {
            "name": "IpProtocol",
            "shape_name": "String",
            "type": "string"
          },
          "SecurityGroupRuleIds": {
            "name": "SecurityGroupRuleIds",
            "shape_name": "SecurityGroupRuleIdList",
            "type": "list"
          },
          "SourceSecurityGroupName": {
            "name": "SourceSecurityGroupName",
            "shape_name": "String",
            "type": "string"
          },
          "SourceSecurityGroupOwnerId": {
            "name": "SourceSecurityGroupOwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "ToPort": {
            "name": "ToPort",
            "shape_name": "Integer",
            "type": "integer"
          }
        },
        "required": null
      },
      "name": "RevokeSecurityGroupIngress",
      "output": {
        "lists": {
          "UnknownIpPermissions": {
            "all_fields": [
              "FromPort",
              "IpProtocol",
              "IpRanges",
              "Ipv6Ranges",
              "PrefixListIds",
              "ToPort",
              "UserIdGroupPairs"
            ],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "UnknownIpPermissions": {
            "name": "UnknownIpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          }
        }
      }
    },
    "RunInstances": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AdditionalInfo": {
            "name": "AdditionalInfo",
            "shape_name": "String",
            "type": "string"
          },
          "BlockDeviceMappings": {
            "name": "BlockDeviceMappings",
            "shape_name": "BlockDeviceMappingRequestList",
            "type": "list"
          },
          "CapacityReservationSpecification": {
            "name": "CapacityReservationSpecification",
            "shape_name": "CapacityReservationSpecification",
            "type": "structure"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "CpuOptions": {
            "name": "CpuOptions",
            "shape_name": "CpuOptionsRequest",
            "type": "structure"
          },
          "CreditSpecification": {
            "name": "CreditSpecification",
            "shape_name": "CreditSpecificationRequest",
            "type": "structure"
          },
          "DisableApiStop": {
            "name": "DisableApiStop",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DisableApiTermination": {
            "name": "DisableApiTermination",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EbsOptimized": {
            "name": "EbsOptimized",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ElasticGpuSpecification": {
            "name": "ElasticGpuSpecification",
            "shape_name": "ElasticGpuSpecifications",
            "type": "list"
          },
          "ElasticInferenceAccelerators": {
            "name": "ElasticInferenceAccelerators",
            "shape_name": "ElasticInferenceAccelerators",
            "type": "list"
          },
          "EnablePrimaryIpv6": {
            "name": "EnablePrimaryIpv6",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "EnclaveOptions": {
            "name": "EnclaveOptions",
            "shape_name": "EnclaveOptionsRequest",
            "type": "structure"
          },
          "HibernationOptions": {
            "name": "HibernationOptions",
            "shape_name": "HibernationOptionsRequest",
            "type": "structure"
          },
          "IamInstanceProfile": {
            "name": "IamInstanceProfile",
            "shape_name": "IamInstanceProfileSpecification",
            "type": "structure"
          },
          "ImageId": {
            "name": "ImageId",
            "shape_name": "ImageId",
            "type": "string"
          },
          "InstanceInitiatedShutdownBehavior": {
            "name": "InstanceInitiatedShutdownBehavior",
            "shape_name": "ShutdownBehavior",
            "type": "string"
          },
          "InstanceMarketOptions": {
            "name": "InstanceMarketOptions",
            "shape_name": "InstanceMarketOptionsRequest",
            "type": "structure"
          },
          "InstanceType": {
            "name": "InstanceType",
            "shape_name": "InstanceType",
            "type": "string"
          },
          "Ipv6AddressCount": {
            "name": "Ipv6AddressCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Ipv6Addresses": {
            "name": "Ipv6Addresses",
            "shape_name": "InstanceIpv6AddressList",
            "type": "list"
          },
          "KernelId": {
            "name": "KernelId",
            "shape_name": "KernelId",
            "type": "string"
          },
          "KeyName": {
            "name": "KeyName",
            "shape_name": "KeyPairName",
            "type": "string"
          },
          "LaunchTemplate": {
            "name": "LaunchTemplate",
            "shape_name": "LaunchTemplateSpecification",
            "type": "structure"
          },
          "LicenseSpecifications": {
            "name": "LicenseSpecifications",
            "shape_name": "LicenseSpecificationListRequest",
            "type": "list"
          },
          "MaintenanceOptions": {
            "name": "MaintenanceOptions",
            "shape_name": "InstanceMaintenanceOptionsRequest",
            "type": "structure"
          },
          "MaxCount": {
            "name": "MaxCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "MetadataOptions": {
            "name": "MetadataOptions",
            "shape_name": "InstanceMetadataOptionsRequest",
            "type": "structure"
          },
          "MinCount": {
            "name": "MinCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "Monitoring": {
            "name": "Monitoring",
            "shape_name": "RunInstancesMonitoringEnabled",
            "type": "structure"
          },
          "NetworkInterfaces": {
            "name": "NetworkInterfaces",
            "shape_name": "InstanceNetworkInterfaceSpecificationList",
            "type": "list"
          },
          "Placement": {
            "name": "Placement",
            "shape_name": "Placement",
            "type": "structure"
          },
          "PrivateDnsNameOptions": {
            "name": "PrivateDnsNameOptions",
            "shape_name": "PrivateDnsNameOptionsRequest",
            "type": "structure"
          },
          "PrivateIpAddress": {
            "name": "PrivateIpAddress",
            "shape_name": "String",
            "type": "string"
          },
          "RamdiskId": {
            "name": "RamdiskId",
            "shape_name": "RamdiskId",
            "type": "string"
          },
          "SecurityGroupIds": {
            "name": "SecurityGroupIds",
            "shape_name": "SecurityGroupIdStringList",
            "type": "list"
          },
          "SecurityGroups": {
            "name": "SecurityGroups",
            "shape_name": "SecurityGroupStringList",
            "type": "list"
          },
          "SubnetId": {
            "name": "SubnetId",
            "shape_name": "SubnetId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          },
          "UserData": {
            "name": "UserData",
            "shape_name": "RunInstancesUserData",
            "type": "string"
          }
        },
        "required": [
          "MaxCount",
          "MinCount"
        ]
      },
      "name": "RunInstances",
      "output": {
        "lists": {
          "Groups": {
            "all_fields": [
              "GroupId",
              "GroupName"
            ],
            "arn_fields": [],
            "id_fields": [
              "GroupId"
            ],
            "name_fields": [
              "GroupName"
            ]
          },
          "Instances": {
            "all_fields": [
              "AmiLaunchIndex",
              "Architecture",
              "BlockDeviceMappings",
              "BootMode",
              "CapacityReservationId",
              "CapacityReservationSpecification",
              "ClientToken",
              "CpuOptions",
              "CurrentInstanceBootMode",
              "EbsOptimized",
              "ElasticGpuAssociations",
              "ElasticInferenceAcceleratorAssociations",
              "EnaSupport",
              "EnclaveOptions",
              "HibernationOptions",
              "Hypervisor",
              "IamInstanceProfile",
              "ImageId",
              "InstanceId",
              "InstanceLifecycle",
              "InstanceType",
              "Ipv6Address",
              "KernelId",
              "KeyName",
              "LaunchTime",
              "Licenses",
              "MaintenanceOptions",
              "MetadataOptions",
              "Monitoring",
              "NetworkInterfaces",
              "OutpostArn",
              "Placement",
              "Platform",
              "PlatformDetails",
              "PrivateDnsName",
              "PrivateDnsNameOptions",
              "PrivateIpAddress",
              "ProductCodes",
              "PublicDnsName",
              "PublicIpAddress",
              "RamdiskId",
              "RootDeviceName",
              "RootDeviceType",
              "SecurityGroups",
              "SourceDestCheck",
              "SpotInstanceRequestId",
              "SriovNetSupport",
              "State",
              "StateReason",
              "StateTransitionReason",
              "SubnetId",
              "Tags",
              "TpmSupport",
              "UsageOperation",
              "UsageOperationUpdateTime",
              "VirtualizationType",
              "VpcId"
            ],
            "arn_fields": [
              "OutpostArn"
            ],
            "id_fields": [
              "CapacityReservationId",
              "ImageId",
              "InstanceId",
              "KernelId",
              "RamdiskId",
              "SpotInstanceRequestId",
              "SubnetId",
              "VpcId"
            ],
            "name_fields": [
              "KeyName",
              "PrivateDnsName",
              "PublicDnsName",
              "RootDeviceName"
            ]
          }
        },
        "markers": [],
        "members": {
          "Groups": {
            "name": "Groups",
            "shape_name": "GroupIdentifierList",
            "type": "list"
          },
          "Instances": {
            "name": "Instances",
            "shape_name": "InstanceList",
            "type": "list"
          },
          "OwnerId": {
            "name": "OwnerId",
            "shape_name": "String",
            "type": "string"
          },
          "RequesterId": {
            "name": "RequesterId",
            "shape_name": "String",
            "type": "string"
          },
          "ReservationId": {
            "name": "ReservationId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "RunScheduledInstances": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceCount": {
            "name": "InstanceCount",
            "shape_name": "Integer",
            "type": "integer"
          },
          "LaunchSpecification": {
            "name": "LaunchSpecification",
            "shape_name": "ScheduledInstancesLaunchSpecification",
            "type": "structure"
          },
          "ScheduledInstanceId": {
            "name": "ScheduledInstanceId",
            "shape_name": "ScheduledInstanceId",
            "type": "string"
          }
        },
        "required": [
          "LaunchSpecification",
          "ScheduledInstanceId"
        ]
      },
      "name": "RunScheduledInstances",
      "output": {
        "lists": {
          "InstanceIdSet": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "InstanceIdSet": {
            "name": "InstanceIdSet",
            "shape_name": "InstanceIdSet",
            "type": "list"
          }
        }
      }
    },
    "SearchLocalGatewayRoutes": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "LocalGatewayRouteTableId": {
            "name": "LocalGatewayRouteTableId",
            "shape_name": "LocalGatewayRoutetableId",
            "type": "string"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "MaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "LocalGatewayRouteTableId"
        ]
      },
      "name": "SearchLocalGatewayRoutes",
      "output": {
        "lists": {
          "Routes": {
            "all_fields": [
              "CoipPoolId",
              "DestinationCidrBlock",
              "DestinationPrefixListId",
              "LocalGatewayRouteTableArn",
              "LocalGatewayRouteTableId",
              "LocalGatewayVirtualInterfaceGroupId",
              "NetworkInterfaceId",
              "OwnerId",
              "State",
              "SubnetId",
              "Type"
            ],
            "arn_fields": [
              "LocalGatewayRouteTableArn"
            ],
            "id_fields": [
              "CoipPoolId",
              "DestinationPrefixListId",
              "LocalGatewayRouteTableId",
              "LocalGatewayVirtualInterfaceGroupId",
              "NetworkInterfaceId",
              "OwnerId",
              "SubnetId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "Routes": {
            "name": "Routes",
            "shape_name": "LocalGatewayRouteList",
            "type": "list"
          }
        }
      }
    },
    "SearchTransitGatewayMulticastGroups": {
      "input": {
        "markers": [
          "NextToken"
        ],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          },
          "TransitGatewayMulticastDomainId": {
            "name": "TransitGatewayMulticastDomainId",
            "shape_name": "TransitGatewayMulticastDomainId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayMulticastDomainId"
        ]
      },
      "name": "SearchTransitGatewayMulticastGroups",
      "output": {
        "lists": {
          "MulticastGroups": {
            "all_fields": [
              "GroupIpAddress",
              "GroupMember",
              "GroupSource",
              "MemberType",
              "NetworkInterfaceId",
              "ResourceId",
              "ResourceOwnerId",
              "ResourceType",
              "SourceType",
              "SubnetId",
              "TransitGatewayAttachmentId"
            ],
            "arn_fields": [],
            "id_fields": [
              "NetworkInterfaceId",
              "ResourceId",
              "ResourceOwnerId",
              "SubnetId",
              "TransitGatewayAttachmentId"
            ],
            "name_fields": []
          }
        },
        "markers": [
          "NextToken"
        ],
        "members": {
          "MulticastGroups": {
            "name": "MulticastGroups",
            "shape_name": "TransitGatewayMulticastGroupList",
            "type": "list"
          },
          "NextToken": {
            "name": "NextToken",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "SearchTransitGatewayRoutes": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Filters": {
            "name": "Filters",
            "shape_name": "FilterList",
            "type": "list"
          },
          "MaxResults": {
            "name": "MaxResults",
            "shape_name": "TransitGatewayMaxResults",
            "type": "integer"
          },
          "TransitGatewayRouteTableId": {
            "name": "TransitGatewayRouteTableId",
            "shape_name": "TransitGatewayRouteTableId",
            "type": "string"
          }
        },
        "required": [
          "TransitGatewayRouteTableId",
          "Filters"
        ]
      },
      "name": "SearchTransitGatewayRoutes",
      "output": {
        "lists": {
          "Routes": {
            "all_fields": [
              "DestinationCidrBlock",
              "PrefixListId",
              "State",
              "TransitGatewayAttachments",
              "TransitGatewayRouteTableAnnouncementId",
              "Type"
            ],
            "arn_fields": [],
            "id_fields": [
              "PrefixListId",
              "TransitGatewayRouteTableAnnouncementId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "AdditionalRoutesAvailable": {
            "name": "AdditionalRoutesAvailable",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Routes": {
            "name": "Routes",
            "shape_name": "TransitGatewayRouteList",
            "type": "list"
          }
        }
      }
    },
    "SendDiagnosticInterrupt": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceId": {
            "name": "InstanceId",
            "shape_name": "InstanceId",
            "type": "string"
          }
        },
        "required": [
          "InstanceId"
        ]
      },
      "name": "SendDiagnosticInterrupt",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "StartInstances": {
      "input": {
        "markers": [],
        "members": {
          "AdditionalInfo": {
            "name": "AdditionalInfo",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "StartInstances",
      "output": {
        "lists": {
          "StartingInstances": {
            "all_fields": [
              "CurrentState",
              "InstanceId",
              "PreviousState"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "StartingInstances": {
            "name": "StartingInstances",
            "shape_name": "InstanceStateChangeList",
            "type": "list"
          }
        }
      }
    },
    "StartNetworkInsightsAccessScopeAnalysis": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "NetworkInsightsAccessScopeId": {
            "name": "NetworkInsightsAccessScopeId",
            "shape_name": "NetworkInsightsAccessScopeId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "NetworkInsightsAccessScopeId",
          "ClientToken"
        ]
      },
      "name": "StartNetworkInsightsAccessScopeAnalysis",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAccessScopeAnalysis": {
            "name": "NetworkInsightsAccessScopeAnalysis",
            "shape_name": "NetworkInsightsAccessScopeAnalysis",
            "type": "structure"
          }
        }
      }
    },
    "StartNetworkInsightsAnalysis": {
      "input": {
        "markers": [
          "ClientToken"
        ],
        "members": {
          "AdditionalAccounts": {
            "name": "AdditionalAccounts",
            "shape_name": "ValueStringList",
            "type": "list"
          },
          "ClientToken": {
            "name": "ClientToken",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "FilterInArns": {
            "name": "FilterInArns",
            "shape_name": "ArnList",
            "type": "list"
          },
          "NetworkInsightsPathId": {
            "name": "NetworkInsightsPathId",
            "shape_name": "NetworkInsightsPathId",
            "type": "string"
          },
          "TagSpecifications": {
            "name": "TagSpecifications",
            "shape_name": "TagSpecificationList",
            "type": "list"
          }
        },
        "required": [
          "NetworkInsightsPathId",
          "ClientToken"
        ]
      },
      "name": "StartNetworkInsightsAnalysis",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "NetworkInsightsAnalysis": {
            "name": "NetworkInsightsAnalysis",
            "shape_name": "NetworkInsightsAnalysis",
            "type": "structure"
          }
        }
      }
    },
    "StartVpcEndpointServicePrivateDnsVerification": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "ServiceId": {
            "name": "ServiceId",
            "shape_name": "VpcEndpointServiceId",
            "type": "string"
          }
        },
        "required": [
          "ServiceId"
        ]
      },
      "name": "StartVpcEndpointServicePrivateDnsVerification",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ReturnValue": {
            "name": "ReturnValue",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "StopInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Force": {
            "name": "Force",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Hibernate": {
            "name": "Hibernate",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "StopInstances",
      "output": {
        "lists": {
          "StoppingInstances": {
            "all_fields": [
              "CurrentState",
              "InstanceId",
              "PreviousState"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "StoppingInstances": {
            "name": "StoppingInstances",
            "shape_name": "InstanceStateChangeList",
            "type": "list"
          }
        }
      }
    },
    "TerminateClientVpnConnections": {
      "input": {
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "ClientVpnEndpointId",
            "type": "string"
          },
          "ConnectionId": {
            "name": "ConnectionId",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "Username": {
            "name": "Username",
            "shape_name": "String",
            "type": "string"
          }
        },
        "required": [
          "ClientVpnEndpointId"
        ]
      },
      "name": "TerminateClientVpnConnections",
      "output": {
        "lists": {
          "ConnectionStatuses": {
            "all_fields": [
              "ConnectionId",
              "CurrentStatus",
              "PreviousStatus"
            ],
            "arn_fields": [],
            "id_fields": [
              "ConnectionId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "ClientVpnEndpointId": {
            "name": "ClientVpnEndpointId",
            "shape_name": "String",
            "type": "string"
          },
          "ConnectionStatuses": {
            "name": "ConnectionStatuses",
            "shape_name": "TerminateConnectionStatusSet",
            "type": "list"
          },
          "Username": {
            "name": "Username",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "TerminateInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "TerminateInstances",
      "output": {
        "lists": {
          "TerminatingInstances": {
            "all_fields": [
              "CurrentState",
              "InstanceId",
              "PreviousState"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "TerminatingInstances": {
            "name": "TerminatingInstances",
            "shape_name": "InstanceStateChangeList",
            "type": "list"
          }
        }
      }
    },
    "UnassignIpv6Addresses": {
      "input": {
        "markers": [],
        "members": {
          "Ipv6Addresses": {
            "name": "Ipv6Addresses",
            "shape_name": "Ipv6AddressList",
            "type": "list"
          },
          "Ipv6Prefixes": {
            "name": "Ipv6Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "UnassignIpv6Addresses",
      "output": {
        "lists": {
          "UnassignedIpv6Addresses": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          },
          "UnassignedIpv6Prefixes": {
            "all_fields": [],
            "arn_fields": [],
            "id_fields": [],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "String",
            "type": "string"
          },
          "UnassignedIpv6Addresses": {
            "name": "UnassignedIpv6Addresses",
            "shape_name": "Ipv6AddressList",
            "type": "list"
          },
          "UnassignedIpv6Prefixes": {
            "name": "UnassignedIpv6Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          }
        }
      }
    },
    "UnassignPrivateIpAddresses": {
      "input": {
        "markers": [],
        "members": {
          "Ipv4Prefixes": {
            "name": "Ipv4Prefixes",
            "shape_name": "IpPrefixList",
            "type": "list"
          },
          "NetworkInterfaceId": {
            "name": "NetworkInterfaceId",
            "shape_name": "NetworkInterfaceId",
            "type": "string"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "PrivateIpAddressStringList",
            "type": "list"
          }
        },
        "required": [
          "NetworkInterfaceId"
        ]
      },
      "name": "UnassignPrivateIpAddresses",
      "output": {
        "lists": {},
        "markers": [],
        "members": {}
      }
    },
    "UnassignPrivateNatGatewayAddress": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "MaxDrainDurationSeconds": {
            "name": "MaxDrainDurationSeconds",
            "shape_name": "DrainSeconds",
            "type": "integer"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          },
          "PrivateIpAddresses": {
            "name": "PrivateIpAddresses",
            "shape_name": "IpList",
            "type": "list"
          }
        },
        "required": [
          "NatGatewayId",
          "PrivateIpAddresses"
        ]
      },
      "name": "UnassignPrivateNatGatewayAddress",
      "output": {
        "lists": {
          "NatGatewayAddresses": {
            "all_fields": [
              "AllocationId",
              "AssociationId",
              "FailureMessage",
              "IsPrimary",
              "NetworkInterfaceId",
              "PrivateIp",
              "PublicIp",
              "Status"
            ],
            "arn_fields": [],
            "id_fields": [
              "AllocationId",
              "AssociationId",
              "NetworkInterfaceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "NatGatewayAddresses": {
            "name": "NatGatewayAddresses",
            "shape_name": "NatGatewayAddressList",
            "type": "list"
          },
          "NatGatewayId": {
            "name": "NatGatewayId",
            "shape_name": "NatGatewayId",
            "type": "string"
          }
        }
      }
    },
    "UnlockSnapshot": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "SnapshotId",
            "type": "string"
          }
        },
        "required": [
          "SnapshotId"
        ]
      },
      "name": "UnlockSnapshot",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "SnapshotId": {
            "name": "SnapshotId",
            "shape_name": "String",
            "type": "string"
          }
        }
      }
    },
    "UnmonitorInstances": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "InstanceIds": {
            "name": "InstanceIds",
            "shape_name": "InstanceIdStringList",
            "type": "list"
          }
        },
        "required": [
          "InstanceIds"
        ]
      },
      "name": "UnmonitorInstances",
      "output": {
        "lists": {
          "InstanceMonitorings": {
            "all_fields": [
              "InstanceId",
              "Monitoring"
            ],
            "arn_fields": [],
            "id_fields": [
              "InstanceId"
            ],
            "name_fields": []
          }
        },
        "markers": [],
        "members": {
          "InstanceMonitorings": {
            "name": "InstanceMonitorings",
            "shape_name": "InstanceMonitoringList",
            "type": "list"
          }
        }
      }
    },
    "UpdateSecurityGroupRuleDescriptionsEgress": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "SecurityGroupName",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "SecurityGroupRuleDescriptions": {
            "name": "SecurityGroupRuleDescriptions",
            "shape_name": "SecurityGroupRuleDescriptionList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "UpdateSecurityGroupRuleDescriptionsEgress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "UpdateSecurityGroupRuleDescriptionsIngress": {
      "input": {
        "markers": [],
        "members": {
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          },
          "GroupId": {
            "name": "GroupId",
            "shape_name": "SecurityGroupId",
            "type": "string"
          },
          "GroupName": {
            "name": "GroupName",
            "shape_name": "SecurityGroupName",
            "type": "string"
          },
          "IpPermissions": {
            "name": "IpPermissions",
            "shape_name": "IpPermissionList",
            "type": "list"
          },
          "SecurityGroupRuleDescriptions": {
            "name": "SecurityGroupRuleDescriptions",
            "shape_name": "SecurityGroupRuleDescriptionList",
            "type": "list"
          }
        },
        "required": null
      },
      "name": "UpdateSecurityGroupRuleDescriptionsIngress",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "Return": {
            "name": "Return",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        }
      }
    },
    "WithdrawByoipCidr": {
      "input": {
        "markers": [],
        "members": {
          "Cidr": {
            "name": "Cidr",
            "shape_name": "String",
            "type": "string"
          },
          "DryRun": {
            "name": "DryRun",
            "shape_name": "Boolean",
            "type": "boolean"
          }
        },
        "required": [
          "Cidr"
        ]
      },
      "name": "WithdrawByoipCidr",
      "output": {
        "lists": {},
        "markers": [],
        "members": {
          "ByoipCidr": {
            "name": "ByoipCidr",
            "shape_name": "ByoipCidr",
            "type": "structure"
          }
        }
      }
    }
  }
}
